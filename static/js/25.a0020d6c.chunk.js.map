{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/firebase/firestore/dist/index.esm.js","../node_modules/@firebase/firestore/dist/index.cjs.js","../node_modules/@firebase/firestore/node_modules/@firebase/logger/dist/index.esm.js","../node_modules/@firebase/webchannel-wrapper/dist/index.esm.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","defineProperty","exports","value","ex","LogLevel","firebase","logger","tslib_1","util","webchannelWrapper","SDK_VERSION","logClient","Logger","getLogLevel","logLevel","DEBUG","SILENT","ERROR","setLogLevel","newLevel","error","debug","tag","msg","obj","_i","arguments","args","map","argToString","apply","concat","platform","PlatformSupport","getPlatform","formatJSON","e","fail","failure","message","Error","assert","assertion","setPlatform","emptyByteString","Code","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","UNAUTHENTICATED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","FirestoreError","_super","code","_this","this","name","__extends","makeConstructorPrivate","cls","optionalMessage","PublicConstructor","staticProperty","hasOwnProperty","contains","key","defaulted","defaultValue","undefined","forEachNumber","fn","num","Number","isNaN","forEach","isEmpty","validateNoArgs","functionName","formatPlural","validateExactNumberOfArgs","numberOfArgs","validateAtLeastNumberOfArgs","minNumberOfArgs","validateBetweenNumberOfArgs","maxNumberOfArgs","validateArgType","type","position","argument","validateType","ordinal","validateOptionalArgType","validateNamedType","optionName","validateNamedOptionalType","validateOptionalArrayElements","typeDescription","validator","valueDescription","validateArrayElements","validateNamedOptionalPropertyEquals","inputName","input","expected","expectedDescription","expected_1","val","push","actualDescription","join","validateNamedPropertyEquals","validateStringEnum","enums","some","element","isPlainObject","description","getPrototypeOf","substring","JSON","stringify","customObjectName","constructor","results","exec","tryGetCustomObjectType","validateDefined","validateOptionNames","options","optionNames","_","indexOf","invalidClassError","str","AutoId","newId","chars","autoId","charAt","Math","floor","random","primitiveComparator","left","right","arrayEquals","isEqual","immediateSuccessor","s","assertUint8ArrayAvailable","Uint8Array","assertBase64Available","base64Available","TimerId","Blob","binaryString","_binaryString","fromBase64String","base64","atob","fromUint8Array","array","char","String","fromCharCode","toBase64","btoa","toUint8Array","buffer","charCodeAt","other","_compareTo","PublicBlob","DatabaseInfo","databaseId","persistenceKey","host","ssl","forceLongPolling","DEFAULT_DATABASE_NAME","DatabaseId","projectId","database","get","enumerable","configurable","compareTo","ListenSequence","previousValue","sequenceNumberSyncer","sequenceNumberHandler","sequenceNumber","setPreviousValue","writeNewSequenceNumber","writeSequenceNumber","externalPreviousValue","max","next","nextValue","INVALID","BasePath","segments","offset","len","comparator","child","nameOrPath","slice","limit","segment","construct","popFirst","size","popLast","firstSegment","lastSegment","index","isPrefixOf","isImmediateParentOf","potentialChild","end","toArray","p1","p2","min","ResourcePath","canonicalString","fromString","path","split","filter","EMPTY_PATH","identifierRegExp","FieldPath","isValidIdentifier","test","replace","isKeyField","keyField","fromServerFormat","current","addCurrentSegment","inBackticks","c","DocumentKey","isDocumentKey","hasCollectionId","collectionId","k1","k2","fromSegments","fromPathString","EMPTY","Deferred","promise","Promise","resolve","reject","DelayedOperation","asyncQueue","timerId","targetTimeMs","op","removalCallback","deferred","then","bind","catch","err","createAndSchedule","delayMs","delayedOp","Date","now","start","timerHandle","setTimeout","handleDelayElapsed","skipDelay","cancel","reason","clearTimeout","enqueueAndForget","result","AsyncQueue","tail","_isShuttingDown","delayedOperations","operationInProgress","timerIdsToSkip","enqueue","enqueueAndForgetEvenAfterShutdown","verifyNotFailed","enqueueInternal","enqueueEvenAfterShutdown","enqueueAndInitiateShutdown","__awaiter","__generator","_a","label","sent","newTail","error$1","stack","enqueueAfterDelay","removedOp","removeDelayedOperation","verifyOperationInProgress","drain","containsDelayedOperation","runDelayedOperationsEarly","lastTimerId","All","sort","a","b","skipDelaysForTimerId","splice","escapeChar","encodedSeparatorChar","encodedNul","encodedEscape","encode","encodeSeparator","encodeSegment","resultBuf","decode","lastReasonableEscapeIndex","segmentBuilder","currentPiece","Timestamp","seconds","nanoseconds","fromMillis","fromDate","date","getTime","milliseconds","toDate","toMillis","SnapshotVersion","timestamp","fromMicroseconds","fromTimestamp","forDeletedDoc","MIN","toMicroseconds","toTimestamp","SortedMap","root","LLRBNode","insert","copy","BLACK","remove","node","cmp","prunedNodes","minKey","maxKey","inorderTraversal","action","k","v","descriptions","reverseTraversal","getIterator","SortedMapIterator","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","startKey","isReverse","nodeStack","getNext","pop","hasNext","peek","color","RED","n","fixUp","removeMin","isRed","moveRedLeft","smallest","rotateRight","moveRedRight","rotateLeft","colorFlip","nl","nr","checkMaxDepth","blackDepth","check","pow","LLRBEmptyNode","SortedSet","data","fromMapKeys","keys","add","has","elem","first","last","cb","forEachInRange","range","forEachWhile","firstAfterOrEqual","SortedSetIterator","delete","unionWith","thisIt","otherIt","thisElem","otherElem","res","targetId","EMPTY_MAYBE_DOCUMENT_MAP","maybeDocumentMap","nullableMaybeDocumentMap","EMPTY_DOCUMENT_MAP","documentMap","EMPTY_DOCUMENT_VERSION_MAP","documentVersionMap","EMPTY_DOCUMENT_KEY_SET","documentKeySet","set","keys_1","EMPTY_TARGET_ID_SET","targetIdSet","MutationBatch","batchId","localWriteTime","baseMutations","mutations","applyToRemoteDocument","docKey","maybeDoc","batchResult","mutationResults","mutation","mutationResult","applyToLocalView","baseDoc","_b","_c","applyToLocalDocumentSet","maybeDocs","mutatedDocuments","m","mutatedDocument","reduce","MutationBatchResult","batch","commitVersion","streamToken","docVersions","versionMap","version","PersistencePromise","callback","nextCallback","catchCallback","isDone","callbackAttached","nextFn","catchFn","wrapFailure","wrapSuccess","toPromise","wrapUserFunction","waitFor","all","expectedCount","resolvedCount","done","or","predicates","p","_loop_1","predicate","isTrue","predicates_1","collection","f","promises","r","IndexedDbMutationQueue","userId","serializer","indexManager","referenceDelegate","documentKeysByBatchId","forUser","user","uid","isAuthenticated","checkEmpty","transaction","empty","IDBKeyRange","bound","NEGATIVE_INFINITY","POSITIVE_INFINITY","mutationsStore","iterate","DbMutationBatch","userMutationsIndex","control","acknowledgeBatch","getMutationQueueMetadata","metadata","lastStreamToken","convertStreamToken","mutationQueuesStore","put","getLastStreamToken","setLastStreamToken","addMutationBatch","documentStore","documentMutationsStore","mutationStore","dbBatch","toDbMutationBatch","mutations_1","indexKey","DbDocumentMutation","PLACEHOLDER","addToCollectionParentIndex","lookupMutationBatch","fromDbMutationBatch","lookupMutationKeys","getNextMutationBatchAfterBatchId","nextBatchId","lowerBound","foundBatch","getHighestUnacknowledgedBatchId","upperBound","reverse","getAllMutationBatches","loadAll","dbBatches","getAllMutationBatchesAffectingDocumentKey","documentKey","indexPrefix","prefixForPath","indexStart","userID","encodedPath","getAllMutationBatchesAffectingDocumentKeys","documentKeys","uniqueBatchIDs","batchID","lookupMutationBatches","getAllMutationBatchesAffectingQuery","query","isDocumentQuery","isCollectionGroupQuery","queryPath","immediateChildrenLength","batchIDs","removeMutationBatch","simpleDbTransaction","removedDocuments","removeCachedMutationKeys","removeMutationReference","performConsistencyCheck","txn","startRange","prefixForUser","danglingMutationReferences","containsKey","mutationQueueContainsKey","DbMutationQueue","keysOnly","keyPath","store","indexTxn","only","numDeleted","removePromise","token","USE_MOCK_PERSISTENCE","IndexedDbPersistence","getStore","GeneratorIds","RESERVED_BITS","TargetIdGenerator","generatorId","seed","seek","nextId","after","forQueryCache","QueryCache","forSyncEngine","SyncEngine","LOG_TAG","SimpleDb","db","getIOSVersion","getUA","openOrCreate","schemaConverter","isAvailable","request","window","indexedDB","open","onsuccess","event","target","onblocked","onerror","onupgradeneeded","oldVersion","SimpleDbTransaction","createOrUpgrade","SCHEMA_VERSION","wrapRequest","deleteDatabase","navigator","ua","iOSVersion","isUnsupportedIOS","androidVersion","getAndroidVersion","isUnsupportedAndroid","iOSVersionRegex","match","androidVersionRegex","setVersionChangeListener","versionChangeListener","onversionchange","runTransaction","mode","objectStores","transactionFn","transactionFnResult","abort","completionPromise","close","IterationController","dbCursor","shouldStop","nextKey","skip","aborted","completionDeferred","oncomplete","onabort","checkForAndReportiOSError","objectStoreNames","storeName","objectStore","SimpleDbStore","keyOrValue","count","indexOrRange","cursor","iterateCursor","deleteAll","optionsOrCallback","iterateSerial","cursorRequest","primaryKey","shouldContinue","continue","controller","userResult","userPromise","skipToKey","indexName","direction","openKeyCursor","openCursor","reportedIOSError","IOS_ERROR","newError_1","IndexedDbQueryCache","targetIdGenerator","allocateTargetId","retrieveMetadata","highestTargetId","saveMetadata","getLastRemoteSnapshotVersion","lastRemoteSnapshotVersion","getHighestSequenceNumber","getHighestListenSequenceNumber","setTargetsMetadata","highestListenSequenceNumber","addQueryData","queryData","saveQueryData","targetCount","updateMetadataFromQueryData","updateQueryData","removeQueryData","removeMatchingKeysForTargetId","targetsStore","removeTargets","activeTargetIds","fromDbTarget","forEachTarget","DbTargetGlobal","toDbTarget","updated","getQueryCount","getQueryData","canonicalId","DbTarget","queryTargetsIndexName","found","addMatchingKeys","documentTargetStore","DbTargetDocument","addReference","removeMatchingKeys","removeReference","getMatchingKeysForTargetId","documentTargetsIndex","getQueryDataForTarget","targetGlobal","MutationType","FieldMask","fields","fromSet","fromArray","fieldsAsSet","fieldPath","covers","fieldMaskPath","FieldTransform","field","transform","MutationResult","transformResults","TypeOrder","ServerTimestampBehavior","Precondition","updateTime","exists","isValidFor","Document","isNone","NONE","Mutation","verifyKeyMatches","getPostMutationVersion","SetMutation","precondition","Set","hasCommittedMutations","hasLocalMutations","extractBaseValue","PatchMutation","fieldMask","Patch","UnknownDocument","newData","patchDocument","ObjectValue","patchObject","newValue","TransformMutation","fieldTransforms","Transform","doc","requireDocument","serverTransformResults","transformObject","localTransformResults","baseObject","fieldTransform","existingValue","coercedValue","computeBaseValue","DeleteMutation","Delete","NoDocument","FieldValueOptions","serverTimestampBehavior","timestampsInSnapshots","fromSnapshotOptions","serverTimestamps","Estimate","Previous","Default","FieldValue","defaultCompareTo","typeOrder","NullValue","internalValue","INSTANCE","BooleanValue","of","TRUE","FALSE","NumberValue","numericEquals","IntegerValue","DoubleValue","NAN","NaN","Infinity","StringValue","TimestampValue","ServerTimestampValue","BlobValue","RefValue","GeoPointValue","it1","it2","next1","next2","to","setChild","newChild","pathSegment","currentPath","nestedFields","nestedPath","childName","ArrayValue","minLength","MaybeDocument","compareByKey","d1","d2","objectValue","proto","converter","fieldValueCache","Map","canonicalPath","fieldValue","protoValue","getProtoField","result_1","mapValue","compareByField","v1","v2","ObjectMap","mapKeyFn","inner","id","matches","matches_1","otherKey","entries","entries_1","RemoteDocumentChangeBuffer","changes","changesApplied","addEntry","maybeDocument","assertNotApplied","removeEntry","getEntry","bufferedEntry","getFromCache","getEntries","getAllFromCache","applyChanges","REMOTE_DOCUMENT_CHANGE_MISSING_ERR_MSG","IndexedDbRemoteDocumentCache","keepDocumentChangeLog","_lastProcessedDocumentChangeId","DbRemoteDocumentChanges","synchronizeLastDocumentChangeId","remoteDocumentsStore","dbKey","updateMetadata","changedKeys","sizeDelta","getMetadata","byteSize","setMetadata","documentChangesStore","toDbResourcePaths","dbRemoteDoc","fromDbRemoteDocument","getSizedEntry","dbDocumentSize","forEachDbEntry","getSizedEntries","sizeMap","maybeDocuments","keyIter","potentialKeyRaw","potentialKey","getDocumentsMatchingQuery","immediateChildrenPathLength","getNewDocumentChanges","changedDocs","firstIteration","changesStore","documentChange","fromDbResourcePaths","documentPromises","removeDocumentChangesThroughChangeId","changeId","newChangeBuffer","getSize","documentGlobalStore","DbRemoteDocumentGlobal","class_1","documentCache","documentSizes","previousSize","toDbRemoteDocument","getResult","DbRemoteDocument","document","unknownDocument","noDocument","MemoryIndexManager","collectionParentIndex","MemoryCollectionParentIndex","collectionPath","getCollectionParents","parentPath","existingParents","added","SchemaConverter","fromVersion","toVersion","createObjectStore","DbPrimaryClient","createPrimaryClientStore","autoIncrement","createIndex","userMutationsKeyPath","unique","createMutationQueue","createQueryCache","createRemoteDocumentCache","deleteObjectStore","dropQueryCache","globalStore","writeEmptyTargetGlobalEntry","existingMutations","v3MutationsStore","writeAll","upgradeMutationBatchSchemaAndMigrateData","DbClientMetadata","createClientMetadataStore","createRemoteDocumentChangesStore","removeAcknowledgedMutations","createDocumentGlobalStore","addDocumentGlobal","ensureSequenceNumbers","createCollectionParentIndex","byteCount","queuesStore","queues","queue","lastAcknowledgedBatchId","documentsStore","currentSequenceNumber","docSentinelKey","sentinelKey","maybeSentinel","writeSentinelKey","DbCollectionParent","collectionParentsStore","cache","parent","pathSegments","DbTimestamp","ownerId","allowTabSynchronization","leaseTimestampMs","localWriteTimeMs","DbNoDocument","readTime","DbUnknownDocument","resumeToken","lastListenSequenceNumber","queryTargetsKeyPath","documentTargetsKeyPath","clientId","updateTimeMs","networkEnabled","inForeground","lastProcessedDocumentChangeId","QueryPurpose","ALL_STORES","IndexedDbIndexManager","collectionParentsCache","parentPaths","entry","QueryData","purpose","snapshotVersion","withSequenceNumber","withResumeToken","LocalSerializer","remoteSerializer","remoteDoc","fromDocument","fromDbTimestamp","toDocument","toDbTimestamp","dbTimestamp","serializedBaseMutations","toMutation","serializedMutations","fromMutation","encodedKeys","encodedPaths","encodedPaths_1","dbTarget","documents","fromDocumentsTarget","fromQueryTarget","Listen","queryProto","toDocumentsTarget","toQueryTarget","bufferEntryComparator","aSequence","aIndex","bSequence","bIndex","seqCmp","RollingSequenceNumberBuffer","maxElements","previousIndex","nextIndex","addElement","highestValue","GC_DID_NOT_RUN","didRun","sequenceNumbersCollected","targetsRemoved","documentsRemoved","LruParams","cacheSizeCollectionThreshold","percentileToCollect","maximumSequenceNumbersToCollect","withCacheSize","cacheSize","DEFAULT_COLLECTION_PERCENTILE","DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT","COLLECTION_DISABLED","MINIMUM_CACHE_SIZE_BYTES","DEFAULT_CACHE_SIZE_BYTES","DEFAULT","DISABLED","LruScheduler","garbageCollector","localStore","hasRun","gcTask","params","scheduleGC","stop","delay","LruGarbageCollection","collectGarbage","ignoreIfPrimaryLeaseLoss","LruGarbageCollector","delegate","calculateTargetCount","percentile","getSequenceNumberCount","nthSequenceNumber","forEachOrphanedDocumentSequenceNumber","maxValue","removeOrphanedDocuments","collect","getCacheSize","runGarbageCollection","upperBoundSequenceNumber","sequenceNumbersToCollect","countedTargetsTs","foundUpperBoundTs","removedTargetsTs","removedDocumentsTs","startTs","sequenceNumbers","numTargetsRemoved","LOG_TAG$1","PRIMARY_LEASE_LOST_ERROR_MSG","PRIMARY_LEASE_EXCLUSIVE_ERROR_MSG","IndexedDbTransaction","lruParams","_started","isPrimary","windowUnloadHandler","documentVisibilityHandler","clientMetadataRefresher","lastGarbageCollectionTime","primaryStateListener","IndexedDbLruDelegate","dbName","MAIN_DATABASE","queryCache","remoteDocumentCache","localStorage","webStorage","createIndexedDbPersistence","persistence","started","simpleDb","updateClientMetadataAndTryBecomePrimary","attachVisibilityHandler","attachWindowUnloadHook","scheduleClientMetadataAndPrimaryLeaseRefreshes","startRemoteDocumentCache","listenSequence","setPrimaryStateListener","primaryState","setDatabaseDeletedListener","databaseDeletedListener","newVersion","setNetworkEnabled","clientMetadataStore","verifyPrimaryLease","success","canActAsPrimary","wasPrimary","releasePrimaryLeaseIfHeld","acquireOrExtendPrimaryLease","primaryClientStore","primaryClient","isLocalClient","removeClientMetadata","maybeGarbageCollectMultiClientState","activeClients_1","inactiveClients_1","isWithinAge","metadataStore","existingClients","filterActiveClients","client","inactiveClient","processedChangeIds","oldestChangeId","removeItem","zombiedClientLocalStorageKey","ClientMetadataRefresh","currentPrimary","isClientZombied","find","otherClient","otherClientHasBetterNetworkState","otherClientHasBetterVisibility","otherClientHasSameNetworkState","shutdown","markClientZombied","detachVisibilityHandler","detachWindowUnloadHook","removeClientZombiedEntry","clients","activityThresholdMs","getActiveClients","clientMetadata","clearPersistence","getMutationQueue","getQueryCache","getRemoteDocumentCache","getIndexManager","transactionOperation","simpleDbTxn","verifyAllowTabSynchronization","newPrimary","buildStoragePrefix","databaseInfo","isDefaultDatabase","maxAgeMs","addEventListener","visibilityState","removeEventListener","isZombied","getItem","setItem","ZOMBIED_CLIENTS_KEY_PREFIX","isPrimaryLeaseLostError","inMemoryPins","docCountPromise","orphanedDocmentCount","docCount","orphanedCount","forEachOrphanedDocument","setInMemoryPins","isPinned","mutationQueuesContainKey","changeBuffer","documentCount","removeTarget","updateLimboDocument","nextPath","nextToReport","sentinelRow","LocalDocumentsView","mutationQueue","getDocument","batches","getDocumentInternal","inBatches","inBatches_1","applyLocalMutationsToDocuments","docs","localView","batches_1","getDocuments","getLocalViewOfDocuments","baseDocs","getDocumentsMatchingDocumentQuery","getDocumentsMatchingCollectionGroupQuery","getDocumentsMatchingCollectionQuery","docPath","collectionGroup","parents","collectionQuery","asCollectionQueryAtPath","mutationBatches","queryResults","matchingMutationBatches","addMissingBaseDocuments","mergedDocuments","mutationBatches_1","mutatedDoc","existingDocuments","missingBaseDocEntriesForPatching","matchingMutationBatches_1","missingBaseDocs","ReferenceSet","refsByKey","DocReference","refsByTarget","compareByTargetId","ref","addReferences","removeRef","removeReferences","removeReferencesForId","emptyKey","startRef","endRef","removeAllReferences","referencesForId","firstRef","targetOrBatchId","LocalStore","initialUser","localViewReferences","queryDataByTarget","remoteDocuments","localDocuments","handleUserChange","oldBatches","promisedOldBatches","newBatches","removedBatchIds","addedBatchIds","oldBatches_1","newBatches_1","_d","_e","affectedDocuments","localWrite","existingDocs","baseValue","lookupMutationDocuments","affected","documentBuffer","applyWriteToRemoteDocuments","rejectBatch","affectedKeys","applyRemoteEvent","remoteEvent","targetChanges","change","oldQueryData","addedDocuments","newQueryData","shouldPersistQueryData","updatedKeys","documentUpdates","existingDoc","hasPendingWrites","resolvedLimboDocuments","updateRemoteVersion","RESUME_TOKEN_MAX_AGE_MICROS","modifiedDocuments","notifyLocalViewChanges","viewChanges","viewChange","addedKeys","removedKeys","nextMutationBatch","afterBatchId","readDocument","allocateQuery","cached","releaseQuery","keepPersistedQueryData","cachedQueryData","removed","executeQuery","remoteDocumentKeys","removeCachedMutationBatchMetadata","docKeys","promiseChain","ackVersion","getQueryForTarget","MemoryMutationQueue","batchesByDocumentKey","batchIndex","indexOfExistingBatchId","findMutationBatch","mutationBatch","rawIndex","indexOfBatchId","findMutationBatches","prefix","startPath","rowKeyPath","shift","references","MemoryQueryCache","queries","q","highestSequenceNumber","getTargetCount","nextTargetId","removals","matchingKeys","MemoryRemoteDocumentCache","sizer","newDocumentChanges","currentSize","forEachDocumentKey","changedDoc","MemoryPersistence","referenceDelegateFactory","mutationQueues","documentSize","createLruPersistence","MemoryLruDelegate","createEagerPersistence","MemoryEagerDelegate","toKey","MemoryTransaction","onTransactionStarted","onTransactionCommitted","vs","values","_orphanedDocuments","orphanedDocuments","isReferenced","orphanedSequenceNumbers","orphanedDocumentCount","remoteDocument","orphanedAt","NumberAsAny","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","isInteger","isFinite","isNullOrUndefined","isSafeInteger","PersistentStreamState","DEFAULT_BACKOFF_INITIAL_DELAY_MS","DEFAULT_BACKOFF_FACTOR","DEFAULT_BACKOFF_MAX_DELAY_MS","ExponentialBackoff","initialDelayMs","backoffFactor","maxDelayMs","currentBaseMs","timerPromise","lastAttemptTime","reset","resetToMax","backoffAndRun","desiredDelayWithJitterMs","jitterDelayMs","delaySoFarMs","remainingDelayMs","OnlineState","OnlineStateSource","PersistentStream","connectionTimerId","idleTimerId","connection","credentialsProvider","listener","state","Initial","closeCount","idleTimer","stream","backoff","isStarted","Starting","Open","Backoff","isOpen","auth","performBackoff","inhibitBackoff","markIdle","handleIdleCloseTimer","sendRequest","cancelIdleCheck","send","finalState","invalidateToken","tearDown","onClose","dispatchIfNotClosed","getCloseGuardedDispatcher","getToken","startStream","rpcError","handleStreamClose","startRpc","onOpen","onMessage","startCloseCount","PersistentListenStream","credentials","ListenStreamConnectionBackoff","ListenStreamIdle","openStream","watchChangeProto","watchChange","fromWatchChange","snapshot","versionFromListenResponse","onWatchChange","watch","encodedDatabaseId","addTarget","toTarget","labels","toListenRequestLabels","unwatch","PersistentWriteStream","WriteStreamConnectionBackoff","WriteStreamIdle","handshakeComplete_","writeMutations","responseProto","fromWriteResults","writeResults","commitTime","onMutationResult","onHandshakeComplete","writeHandshake","writes","Datastore","newPersistentWriteStream","newPersistentWatchStream","commit","invokeRPC","response","lookup","toName","invokeStreamingRPC","fromMaybeDocument","rpcName","Transaction","datastore","readVersions","committed","lastWriteError","writtenDocs","ensureCommitNotCalled","recordVersion","write","toMutations","update","preconditionForUpdate","unwritten","docVersion","existingVersion","RpcCode","OnlineStateTracker","onlineStateHandler","Unknown","watchStreamFailures","onlineStateTimer","shouldWarnClientIsOffline","handleWatchStreamStart","setAndBroadcast","OnlineStateTimeout","logClientOfflineWarningIfNecessary","Offline","handleWatchStreamFailure","Online","clearOnlineStateTimer","newState","details","isPermanentError","mapCodeFromRpcCode","mapRpcCodeFromCode","ChangeType","SyncState","DocumentSet","comp","keyedMap","sortedSet","emptySet","oldSet","thisDoc","otherDoc","docStrings","newSet","WatchTargetChangeState","DocumentChangeSet","changeMap","track","oldChange","Added","Metadata","Removed","Modified","getChanges","ViewSnapshot","oldDocs","docChanges","mutatedKeys","fromCache","syncStateChanged","excludesMetadataChanges","fromInitialDocuments","otherChanges","RemoteEvent","targetMismatches","createSynthesizedRemoteEventForCurrentChange","TargetChange","createSynthesizedTargetChangeForCurrentChange","DocumentWatchChange","updatedTargetIds","removedTargetIds","newDoc","ExistenceFilterChange","existenceFilter","WatchTargetChange","targetIds","cause","TargetState","pendingResponses","documentChanges","snapshotChangesMap","_resumeToken","_current","_hasPendingChanges","updateResumeToken","toTargetChange","changeType","clearPendingChanges","addDocumentChange","removeDocumentChange","recordPendingTargetRequest","recordTargetResponse","markCurrent","WatchChangeAggregator","metadataProvider","targetStates","pendingDocumentUpdates","pendingDocumentTargetMapping","documentTargetMap","pendingTargetResets","handleDocumentChange","docChange","addDocumentToTarget","removeDocumentFromTarget","handleTargetChange","targetChange","targetState","ensureTargetState","NoChange","isActiveTarget","isPending","Current","Reset","resetTarget","handleExistenceFilter","queryDataForActiveTarget","getCurrentDocumentCountForTarget","createRemoteEvent","targetContainsDocument","hasPendingChanges","targets","isOnlyLimboTarget","LimboResolution","ensureDocumentTargetMapping","updatedDocument","getRemoteKeysForTarget","targetMapping","targetActive","LOG_TAG$8","RemoteStore","connectivityMonitor","writePipeline","listenTargets","watchChangeAggregator","addCallback","status","canUseNetwork","restartNetwork","onlineStateTracker","watchStream","onWatchStreamOpen","onWatchStreamClose","onWatchStreamChange","writeStream","onWriteStreamOpen","onWriteStreamClose","onWriteHandshakeComplete","enableNetwork","shouldStartWatchStream","startWatchStream","fillWritePipeline","disableNetwork","disableNetworkInternal","cleanUpWatchStreamState","listen","sendWatchRequest","unlisten","sendUnwatchRequest","syncEngine","handleTargetError","raiseWatchSnapshot","requestQueryData","ExistenceFilterMismatch","rejectListen","lastBatchIdRetrieved","canAddToWritePipeline","addToWritePipeline","shouldStartWriteStream","startWriteStream","outstandingWrites","handshakeComplete","applySuccessfulWrite","handleWriteError","handleHandshakeError","rejectFailedWrite","createTransaction","handleCredentialChange","applyPrimaryState","GeoPoint","latitude","longitude","_lat","_long","Query","explicitOrderBy","filters","startAt","endAt","memoizedCanonicalId","memoizedOrderBy","assertValidBound","atPath","inequalityField","getInequalityFilterField","firstOrderByField","getFirstOrderByField","KEY_ORDERING_ASC","OrderBy","foundKeyOrdering","orderBy","lastDirection","dir","Direction","ASCENDING","KEY_ORDERING_DESC","addFilter","FieldFilter","isInequality","newFilters","addOrderBy","newOrderBy","withLimit","withStartAt","withEndAt","docComparator","comparedOnKeyField","compare","matchesPathAndCollectionGroup","matchesOrderBy","matchesFilters","matchesBounds","hasLimit","findFilterOperator","operators","sortsBeforeDocument","Filter","Operator","LESS_THAN","LESS_THAN_OR_EQUAL","EQUAL","GREATER_THAN_OR_EQUAL","GREATER_THAN","ARRAY_CONTAINS","IN","ARRAY_CONTAINS_ANY","create","every","KeyFieldInFilter","KeyFieldFilter","ArrayContainsFilter","InFilter","ArrayContainsAnyFilter","matchesComparison","comparison","refValue","arrayValue","lhsElem","DESCENDING","Bound","before","orderByComponent","component","docValue","thisPosition","otherPosition","isKeyOrderBy","ServerTimestampTransform","transformResult","instance","ArrayUnionTransformOperation","elements","coercedFieldValuesArray","toUnion","ArrayRemoveTransformOperation","_loop_2","toRemove","NumericIncrementTransformOperation","operand","sum","ExistenceFilter","DIRECTIONS","dirs","OPERATORS","ops","ISO_REG_EXP","RegExp","assertPresent","parseInt64","JsonProtoSerializer","useProto3Json","unsafeCastProtoByteString","byteString","fromRpcStatus","toInt32Value","fromInt32Value","nanos","fromIso8601String","utc","fraction","nanoStr","substr","toBytes","bytes","fromBlob","blob","toResourceName","fullyQualifiedPrefixPath","fromResourceName","resource","isValidResourceName","fromName","extractLocalPathFromResourceName","toQueryPath","fromQueryPath","resourceName","toValue","nullValue","booleanValue","integerValue","doubleValue","stringValue","toMapValue","toArrayValue","timestampValue","geoPointValue","bytesValue","referenceValue","fromValue","fromFields","dbId","toMutationDocument","toFields","object","fromFound","fromMissing","missing","toWatchTargetChangeState","toTestWatchChange","documentDelete","documentRemove","targetChangeType","fromWatchTargetChangeState","causeProto","entityChange","docDelete","docRemove","updateMask","toDocumentMask","toFieldTransform","currentDocument","toPrecondition","fromPrecondition","fromDocumentMask","fromFieldTransform","fromWriteResult","protos","setToServerValue","appendMissingElements","removeAllFromArray","increment","documentsTarget","structuredQuery","allDescendants","where","toFilter","toOrder","toCursor","fromCount","filterBy","fromFilter","fromOrder","fromCursor","toLabel","toUnaryOrFieldFilter","compositeFilter","unaryFilter","fromUnaryFilter","fieldFilter","fromFieldFilter","accum","orderBys","order","toPropertyOrder","fromPropertyOrder","toDirection","fromDirection","toOperatorName","fromOperatorName","toFieldPathReference","fromFieldPathReference","fieldReference","nanField","nullField","canonicalFields","fieldPaths","QueryListenersInfo","viewSnap","listeners","EventManager","onlineState","snapshotsInSyncListeners","subscribe","firstListen","queryInfo","applyOnlineStateChange","onViewSnapshot","raiseSnapshotsInSyncEvent","lastListen","viewSnaps","raisedEvent","viewSnaps_1","onWatchError","onError","onOnlineStateChange","addSnapshotsInSyncListener","observer","removeSnapshotsInSyncListener","QueryListener","queryObserver","raisedInitialEvent","snap","includeMetadataChanges","shouldRaiseEvent","shouldRaiseInitialEvent","raiseInitialEvent","maybeOnline","waitForSyncWhenOnline","hasPendingWritesChanged","LocalViewChanges","fromSnapshot","viewSnapshot","AddedLimboDocument","RemovedLimboDocument","View","_syncedDocuments","syncState","limboDocuments","documentSet","computeDocChanges","previousChanges","changeSet","oldDocumentSet","newMutatedKeys","newDocumentSet","needsRefill","lastDocInLimit","newMaybeDoc","oldDoc","oldDocHadPendingMutations","newDocHasPendingMutations","changeApplied","shouldWaitForSyncedDocument","updateLimboDocuments","c1","c2","compareChangeType","applyTargetChange","limboChanges","newSyncState","Synced","Local","shouldBeInLimbo","oldLimboDocuments","synchronizeWithPersistedState","localDocs","remoteKeys","computeInitialSnapshot","RETRY_COUNT","TransactionRunner","remoteStore","updateFunction","retries","RetryTransaction","run","runWithBackOff","tryRunUpdateFunction","commitError","handleTransactionError","userPromiseError","isRetryableTransactionError","QueryView","view","receivedDocument","sharedClientState","currentUser","syncEngineListener","queryViewsByQuery","queryViewsByTarget","limboTargetsByKey","limboResolutionsByTarget","limboDocumentRefs","mutationUserCallbacks","pendingWritesCallbacks","limboTargetIdGenerator","queryView","status_1","assertSubscribed","addLocalQueryTarget","initializeViewAndComputeSnapshot","viewDocChanges","synthesizedTargetChange","synchronizeViewAndComputeSnapshot","updateTrackedLimbos","removeLocalQueryTarget","isActiveQueryTarget","clearQueryState","removeAndCleanupQuery","userCallback","addPendingMutation","addMutationCallback","emitNewSnapsAndNotifyLocalStore","trys","limboResolution","source","SharedClientState","newViewSnapshots_1","setOnlineState","limboKey","event_1","queryView_1","updateQueryState","applyBatchState","batchState","processUserCallback","mutationBatchResult","triggerPendingWritesCallbacks","updateMutationState","registerPendingWritesCallback","highestBatchId","callbacks","rejectOutstandingPendingWritesCallbacks","errorMessage","clear","newCallbacks","limboKeys","removeLimboTarget","limboTargetId","limboChanges_1","limboChange","trackLimboChange","currentLimboDocs","newSnaps","docChangesInAllViews","queriesProcessed","fnName","userChanged","activeTargets","activeQueries","activeQueries_1","activeTargets_1","p_1","getAllActiveQueryTargets","synchronizeQueryViewsAndRaiseSnapshots","isLocalQueryTarget","resetLimboDocuments","newViewSnapshots","targets_1","applyTargetState","synthesizedRemoteEvent","error_4","activeTargets_2","applyActiveTargetsChange","added_1","this_1","removed_1","syncedDocuments","User","otherUser","GOOGLE_CREDENTIALS","FIRST_PARTY","LOG_TAG$a","CLIENT_STATE_KEY_PREFIX","MUTATION_BATCH_KEY_PREFIX","QUERY_TARGET_KEY_PREFIX","ONLINE_STATE_KEY_PREFIX","SEQUENCE_NUMBER_KEY_PREFIX","MutationMetadata","fromWebStorageEntry","parse","validData","firestoreError","toWebStorageJSON","batchMetadata","QueryTargetMetadata","RemoteClientState","clientState","activeTargetIdsSet","SharedOnlineState","LocalClientState","addQueryTarget","removeQueryTarget","WebStorageSharedClientState","localClientId","activeClients","storageListener","handleWebStorageEvent","earlyEvents","escapedPersistenceKey","storage","localClientStorageKey","toWebStorageClientStateKey","sequenceNumberKey","clientStateKeyRe","mutationBatchKeyRe","queryTargetKeyRe","onlineStateKey","existingClients_1","storageItem","onlineStateJSON","persistClientState","fromWebStorageOnlineState","handleOnlineStateEvent","persistMutationState","removeMutationState","queryState","toWebStorageQueryTargetMetadataKey","localClientState","persistQueryTargetState","persistOnlineState","storageArea","mutationMetadata","queryTargetMetadata","fromWebStorageClientStateKey","handleClientStateEvent","fromWebStorageClientState","fromWebStorageMutationMetadata","handleMutationBatchEvent","fromWebStorageQueryTargetMetadata","handleQueryTargetEvent","seqString","parsed","fromWebStorageSequenceNumber","mutationState","mutationKey","toWebStorageMutationBatchKey","targetKey","targetMetadata","existingTargets","newTargets","addedTargets","removedTargets","MemorySharedClientState","localState","IndexedDbPersistenceSettings","cacheSizeBytes","synchronizeTabs","MemoryPersistenceSettings","FirestoreClient","persistenceSettings","verifyNotTerminated","initializationDone","persistenceResult","initialized","setChangeListener","initializePersistence","maybeLruGc","initializeRest","startIndexedDbPersistence","canFallback","console","warn","startMemoryPersistence","DOMException","isShuttingDown","settings","loadConnection","remoteStoreOnlineStateChangedHandler","sharedClientStateOnlineStateChangedHandler","lruScheduler","newConnectivityMonitor","newSerializer","eventMgr","terminate","removeChangeListener","waitForPendingWrites","clientTerminated","getDocumentFromLocalCache","getDocumentsFromLocalCache","AsyncObserver","muted","scheduleEvent","mute","eventHandler","FieldPath$1","fieldNames","minNumberOfElements","validateNamedArrayAtLeastNumberOfElements","_internalPath","documentId","_DOCUMENT_ID","RESERVED","OAuthToken","authHeaders","Authorization","EmptyCredentialsProvider","changeListener","FirebaseCredentialsProvider","app","tokenListener","tokenCounter","forceRefresh","getUser","addAuthTokenListener","initialTokenCounter","tokenData","accessToken","removeAuthTokenListener","currentUid","getUid","FirstPartyToken","gapi","sessionIndex","headers","authHeader","getAuthHeaderValueForFirstParty","FirstPartyCredentialsProvider","makeCredentialsProvider","isPartialObserver","methods","methods_1","method","implementsAnyMethods","UserDataSource","FieldValueImpl","_methodName","DeleteFieldValueImpl","serverTimestamp","ServerTimestampFieldValueImpl","arrayUnion","ArrayUnionFieldValueImpl","arrayRemove","ArrayRemoveFieldValueImpl","NumericIncrementFieldValueImpl","_elements","_operand","PublicFieldValue","RESERVED_FIELD_REGEX","ParsedSetData","ParsedUpdateData","isWrite","dataSource","MergeSet","Update","Argument","ParseContext","methodName","arrayElement","validatePath","childContextForField","childPath","context","validatePathSegment","childContextForFieldPath","childContextForArray","createError","fieldDescription","DocumentKeyReference","UserDataConverter","preConverter","parseSetData","validatePlainObject","updateData","parseData","parseMergeData","validatedFieldPaths","fieldPaths_1","stringOrFieldPath","fieldPathFromDotSeparatedString","parseUpdateData","fieldMaskPaths","childContext","runPreConverter","parsedValue","mask","parseUpdateVarargs","moreFieldsAndValues","fieldPathFromArgument","value_1","parseQueryValue","looksLikeJsonObject","parseObject","parseSentinelFieldValue","parseArray","parseScalarValue","entryIndex","array_1","parsedEntry","parsedElements","parseArrayTransformElements","numericIncrement","search","fromDotSeparatedString","DEFAULT_HOST","DEFAULT_SSL","DEFAULT_TIMESTAMPS_IN_SNAPSHOTS","DEFAULT_FORCE_LONG_POLLING","CACHE_SIZE_UNLIMITED","FirestoreSettings","experimentalForceLongPolling","Firestore","databaseIdOrApp","_firebaseApp","_queue","ensureClientConfigured","_firestoreClient","_databaseId","databaseIdFromApp","_persistenceKey","_credentials","external_1","_settings","_dataConverter","createDataConverter","settingsLiteral","newSettings","enablePersistence","experimentalTabSynchronization","configureClient","makeDatabaseInfo","e_1","_removeServiceInstance","onSnapshotsInSync","arg","onSnapshotsInSyncInternal","asyncObserver","DocumentReference","thisDb","otherDb","firestore","_key","pathString","CollectionReference","forPath","Query$1","Transaction$1","WriteBatch","level","_areTimestampsInSnapshotsEnabled","_firestore","_transaction","documentRef","validateReference","DocumentSnapshot","validateSetOptions","merge","mergeFields","fieldOrUpdateData","_mutations","_committed","verifyNotCommitted","onSnapshot","currArg","internalOptions","complete","onSnapshotInternal","errHandler","internalListener","validateGetOptions","getViaSnapshotListener","SnapshotMetadata","_document","_fromCache","_hasPendingWrites","validateSnapshotOptions","convertObject","convertValue","convertArray","QueryDocumentSnapshot","_query","opStr","whereFilterOpEnums","operator","validateDisjunctiveFilterElements","referenceList","parseDocumentIdValue","validateNewFilter","directionStr","validateNewOrderBy","docOrField","boundFromDocOrFields","startAfter","endBefore","boundFromDocument","allFields","boundFromFields","components","rawValue","wrapped","QuerySnapshot","firestoreClient","documentIdValue","arrayOps","disjunctiveOps","isArrayOp","isDisjunctiveOp","existingField","validateOrderByAndInequalityMatch","conflictingOp","inequality","_originalQuery","_snapshot","_cachedChanges","_cachedChangesIncludeMetadataChanges","thisArg","convertToDocumentImpl","lastDoc_1","index_1","oldIndex","newIndex","indexTracker_1","resultChangeType","changesFromSnapshot","property","throwDocChangesMethodError","docRef","PublicFirestore","PublicTransaction","PublicWriteBatch","PublicDocumentReference","PublicDocumentSnapshot","PublicQueryDocumentSnapshot","PublicQuery","PublicQuerySnapshot","PublicCollectionReference","firestoreNamespace","configureForFirebase","registerService","shallowCopy","NoopConnectivityMonitor","BrowserConnectivityMonitor","networkAvailableListener","onNetworkAvailable","networkUnavailableListener","onNetworkUnavailable","configureNetworkMonitoring","StreamBridge","sendFn","closeFn","wrappedOnOpen","wrappedOnClose","wrappedOnMessage","callOnOpen","callOnClose","callOnMessage","LOG_TAG$d","RPC_NAME_REST_MAPPING","BatchGetDocuments","Commit","X_GOOG_API_CLIENT_VALUE","WebChannelConnection","info","baseUrl","modifyHeadersForRequest","header","url","makeUrl","xhr","XhrIo","listenOnce","EventType","COMPLETE","getLastErrorCode","ErrorCode","NO_ERROR","json","getResponseJson","TIMEOUT","HTTP_ERROR","getStatus","getResponseText","responseError","firestoreErrorCode","serverError","toLowerCase","mapCodeFromHttpResponseErrorStatus","getLastError","jsonObj","__assign","requestString","urlParts","webchannelTransport","createWebChannelTransport","backgroundChannelTest","httpSessionIdParam","initMessageHeaders","messageUrlParams","sendRawJson","supportsCrossDomainXhr","internalChannelParams","forwardChannelRequestTimeoutMs","isReactNative","httpHeadersOverwriteParam","channel","createWebChannel","opened","closed","streamBridge","unguardedEventListen","param","WebChannel","OPEN","CLOSE","MESSAGE","msgData","msgDataAsAny","status_2","mapCodeFromRpcStatus","urlRpcName","BrowserPlatform","encoded","raw","registerFirestore","instances","defaultLogLevel","INFO","defaultLogHandler","logType","toISOString","VERBOSE","log","WARN","_logLevel","_logHandler","inst","g","commonjsGlobal","globalThis","global","self","goog","aa","ba","propertyIsEnumerable","ca","t","da","ea","fa","d","unshift","u","Function","w","x","N","yb","h","l","y","j","la","G","ja","oa","pa","qa","A","ra","trim","z","sa","ta","userAgent","va","wa","xa","ya","za","Ia","Ca","B","Da","Ea","Fa","Ga","Ha","documentMode","Ja","Ka","La","parseFloat","Na","Ba","Ma","Aa","parseInt","Oa","compatMode","Pa","Qa","Ra","C","D","relatedTarget","button","screenY","screenX","clientY","clientX","metaKey","shiftKey","altKey","ctrlKey","pointerId","pointerType","changedTouches","srcElement","nodeName","fromElement","toElement","pageX","pageY","Sa","defaultPrevented","2","3","4","preventDefault","returnValue","keyCode","E","Ta","Ua","proxy","src","capture","X","Z","Va","Wa","Ya","Xa","Za","$a","bb","once","eb","fb","ib","gb","attachEvent","hb","addListener","removeListener","kb","detachEvent","lb","mb","handleEvent","J","nb","F","jb","dispatchEvent","ob","pb","qb","xb","sb","rb","tb","ub","vb","wb","Ab","zb","Cb","Db","L","Eb","Fb","ab","Gb","U","H","Hb","Ib","Jb","Kb","I","Lb","Mb","K","Nb","Ob","Pb","Qb","Rb","Sb","Tb","Wb","Ub","Vb","Xb","M","W","V","O","Yb","P","R","o","S","Zb","$b","ac","bc","cc","dc","ec","fc","$","Y","kc","lc","ic","jc","mc","gc","na","oc","nc","Q","rc","pc","T","hc","sc","uc","vc","wc","xc","yc","zc","Ac","Mc","Ic","Gc","Bc","Hc","abs","decodeURI","decodeURIComponent","encodeURI","Lc","Cc","encodeURIComponent","Dc","Ec","Fc","lastIndexOf","tc","Nc","Sc","Uc","Vc","Wc","Xc","Yc","Zc","$c","ad","bd","PerformanceNavigationTiming","performance","getEntriesByType","nextHopProtocol","ka","ma","cd","dd","ed","fd","gd","hd","jd","kd","ld","nd","onload","ontimeout","od","pd","qd","rd","sd","vd","wd","xd","location","protocol","td","onreadystatechange","readyState","getResponseHeader","zd","yd","Ad","ga","ha","ia","concurrentRequestLimit","fastHandshake","Bd","Cd","Dd","sendBeacon","Image","Ed","Fd","Gd","Hd","Ld","Kd","round","Bb","Tc","Ud","Md","Nd","Jd","md","Jc","hostname","Kc","port","Od","Qd","testUrl","Pd","messageHeaders","clientProtocolHeaderRequired","messageContentType","Rd","__sm__","Sd","toUpperCase","XMLHttpRequest","FormData","setRequestHeader","responseType","withCredentials","timeout","ud","statusText","responseText","__data__","Id","Td","getStatusText","tmp","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5"],"mappings":"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","file":"static/js/25.a0020d6c.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import '@firebase/firestore';","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar firebase = _interopDefault(require('@firebase/app'));\n\nvar logger = require('@firebase/logger');\n\nvar tslib_1 = require('tslib');\n\nvar util = require('@firebase/util');\n\nvar webchannelWrapper = require('@firebase/webchannel-wrapper');\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** The semver (www.semver.org) version of the SDK. */\n\n\nvar SDK_VERSION = firebase.SDK_VERSION;\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new logger.Logger('@firebase/firestore');\nvar LogLevel;\n\n(function (LogLevel) {\n  LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n  LogLevel[LogLevel[\"ERROR\"] = 1] = \"ERROR\";\n  LogLevel[LogLevel[\"SILENT\"] = 2] = \"SILENT\";\n})(LogLevel || (LogLevel = {})); // Helper methods are needed because variables can't be exported as read/write\n\n\nfunction getLogLevel() {\n  if (logClient.logLevel === logger.LogLevel.DEBUG) {\n    return LogLevel.DEBUG;\n  } else if (logClient.logLevel === logger.LogLevel.SILENT) {\n    return LogLevel.SILENT;\n  } else {\n    return LogLevel.ERROR;\n  }\n}\n\nfunction setLogLevel(newLevel) {\n  /**\r\n   * Map the new log level to the associated Firebase Log Level\r\n   */\n  switch (newLevel) {\n    case LogLevel.DEBUG:\n      logClient.logLevel = logger.LogLevel.DEBUG;\n      break;\n\n    case LogLevel.ERROR:\n      logClient.logLevel = logger.LogLevel.ERROR;\n      break;\n\n    case LogLevel.SILENT:\n      logClient.logLevel = logger.LogLevel.SILENT;\n      break;\n\n    default:\n      logClient.error(\"Firestore (\" + SDK_VERSION + \"): Invalid value passed to `setLogLevel`\");\n  }\n}\n\nfunction debug(tag, msg) {\n  var obj = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    obj[_i - 2] = arguments[_i];\n  }\n\n  if (logClient.logLevel <= logger.LogLevel.DEBUG) {\n    var args = obj.map(argToString);\n    logClient.debug.apply(logClient, [\"Firestore (\" + SDK_VERSION + \") [\" + tag + \"]: \" + msg].concat(args));\n  }\n}\n\nfunction error(msg) {\n  var obj = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    obj[_i - 1] = arguments[_i];\n  }\n\n  if (logClient.logLevel <= logger.LogLevel.ERROR) {\n    var args = obj.map(argToString);\n    logClient.error.apply(logClient, [\"Firestore (\" + SDK_VERSION + \"): \" + msg].concat(args));\n  }\n}\n/**\r\n * Converts an additional log parameter to a string representation.\r\n */\n\n\nfunction argToString(obj) {\n  if (typeof obj === 'string') {\n    return obj;\n  } else {\n    var platform = PlatformSupport.getPlatform();\n\n    try {\n      return platform.formatJSON(obj);\n    } catch (e) {\n      // Converting to JSON failed, just log the object directly\n      return obj;\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Unconditionally fails, throwing an Error with the given message.\r\n *\r\n * Returns any so it can be used in expressions:\r\n * @example\r\n * let futureVar = fail('not implemented yet');\r\n */\n\n\nfunction fail(failure) {\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  var message = \"FIRESTORE (\" + SDK_VERSION + \") INTERNAL ASSERTION FAILED: \" + failure;\n  error(message); // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n\n  throw new Error(message);\n}\n/**\r\n * Fails if the given assertion condition is false, throwing an Error with the\r\n * given message if it did.\r\n */\n\n\nfunction assert(assertion, message) {\n  if (!assertion) {\n    fail(message);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides singleton helpers where setup code can inject a platform at runtime.\r\n * setPlatform needs to be set before Firestore is used and must be set exactly\r\n * once.\r\n */\n\n\nvar PlatformSupport =\n/** @class */\nfunction () {\n  function PlatformSupport() {}\n\n  PlatformSupport.setPlatform = function (platform) {\n    if (PlatformSupport.platform) {\n      fail('Platform already defined');\n    }\n\n    PlatformSupport.platform = platform;\n  };\n\n  PlatformSupport.getPlatform = function () {\n    if (!PlatformSupport.platform) {\n      fail('Platform not set');\n    }\n\n    return PlatformSupport.platform;\n  };\n\n  return PlatformSupport;\n}();\n/**\r\n * Returns the representation of an empty \"proto\" byte string for the\r\n * platform.\r\n */\n\n\nfunction emptyByteString() {\n  return PlatformSupport.getPlatform().emptyByteString;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Code = {\n  // Causes are copied from:\n  // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n\n  /** Not an error; returned on success. */\n  OK: 'ok',\n\n  /** The operation was cancelled (typically by the caller). */\n  CANCELLED: 'cancelled',\n\n  /** Unknown error or an error from a different error domain. */\n  UNKNOWN: 'unknown',\n\n  /**\r\n   * Client specified an invalid argument. Note that this differs from\r\n   * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\r\n   * problematic regardless of the state of the system (e.g., a malformed file\r\n   * name).\r\n   */\n  INVALID_ARGUMENT: 'invalid-argument',\n\n  /**\r\n   * Deadline expired before operation could complete. For operations that\r\n   * change the state of the system, this error may be returned even if the\r\n   * operation has completed successfully. For example, a successful response\r\n   * from a server could have been delayed long enough for the deadline to\r\n   * expire.\r\n   */\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n\n  /** Some requested entity (e.g., file or directory) was not found. */\n  NOT_FOUND: 'not-found',\n\n  /**\r\n   * Some entity that we attempted to create (e.g., file or directory) already\r\n   * exists.\r\n   */\n  ALREADY_EXISTS: 'already-exists',\n\n  /**\r\n   * The caller does not have permission to execute the specified operation.\r\n   * PERMISSION_DENIED must not be used for rejections caused by exhausting\r\n   * some resource (use RESOURCE_EXHAUSTED instead for those errors).\r\n   * PERMISSION_DENIED must not be used if the caller can not be identified\r\n   * (use UNAUTHENTICATED instead for those errors).\r\n   */\n  PERMISSION_DENIED: 'permission-denied',\n\n  /**\r\n   * The request does not have valid authentication credentials for the\r\n   * operation.\r\n   */\n  UNAUTHENTICATED: 'unauthenticated',\n\n  /**\r\n   * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\r\n   * entire file system is out of space.\r\n   */\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n\n  /**\r\n   * Operation was rejected because the system is not in a state required for\r\n   * the operation's execution. For example, directory to be deleted may be\r\n   * non-empty, an rmdir operation is applied to a non-directory, etc.\r\n   *\r\n   * A litmus test that may help a service implementor in deciding\r\n   * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\r\n   *  (a) Use UNAVAILABLE if the client can retry just the failing call.\r\n   *  (b) Use ABORTED if the client should retry at a higher-level\r\n   *      (e.g., restarting a read-modify-write sequence).\r\n   *  (c) Use FAILED_PRECONDITION if the client should not retry until\r\n   *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\r\n   *      fails because the directory is non-empty, FAILED_PRECONDITION\r\n   *      should be returned since the client should not retry unless\r\n   *      they have first fixed up the directory by deleting files from it.\r\n   *  (d) Use FAILED_PRECONDITION if the client performs conditional\r\n   *      REST Get/Update/Delete on a resource and the resource on the\r\n   *      server does not match the condition. E.g., conflicting\r\n   *      read-modify-write on the same resource.\r\n   */\n  FAILED_PRECONDITION: 'failed-precondition',\n\n  /**\r\n   * The operation was aborted, typically due to a concurrency issue like\r\n   * sequencer check failures, transaction aborts, etc.\r\n   *\r\n   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\r\n   * and UNAVAILABLE.\r\n   */\n  ABORTED: 'aborted',\n\n  /**\r\n   * Operation was attempted past the valid range. E.g., seeking or reading\r\n   * past end of file.\r\n   *\r\n   * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\r\n   * if the system state changes. For example, a 32-bit file system will\r\n   * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\r\n   * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\r\n   * an offset past the current file size.\r\n   *\r\n   * There is a fair bit of overlap between FAILED_PRECONDITION and\r\n   * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\r\n   * when it applies so that callers who are iterating through a space can\r\n   * easily look for an OUT_OF_RANGE error to detect when they are done.\r\n   */\n  OUT_OF_RANGE: 'out-of-range',\n\n  /** Operation is not implemented or not supported/enabled in this service. */\n  UNIMPLEMENTED: 'unimplemented',\n\n  /**\r\n   * Internal errors. Means some invariants expected by underlying System has\r\n   * been broken. If you see one of these errors, Something is very broken.\r\n   */\n  INTERNAL: 'internal',\n\n  /**\r\n   * The service is currently unavailable. This is a most likely a transient\r\n   * condition and may be corrected by retrying with a backoff.\r\n   *\r\n   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\r\n   * and UNAVAILABLE.\r\n   */\n  UNAVAILABLE: 'unavailable',\n\n  /** Unrecoverable data loss or corruption. */\n  DATA_LOSS: 'data-loss'\n};\n/**\r\n * An error class used for Firestore-generated errors. Ideally we should be\r\n * using FirebaseError, but integrating with it is overly arduous at the moment,\r\n * so we define our own compatible error class (with a `name` of 'FirebaseError'\r\n * and compatible `code` and `message` fields.)\r\n */\n\nvar FirestoreError =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(FirestoreError, _super);\n\n  function FirestoreError(code, message) {\n    var _this = _super.call(this, message) || this;\n\n    _this.code = code;\n    _this.message = message;\n    _this.name = 'FirebaseError'; // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n\n    _this.toString = function () {\n      return _this.name + \": [code=\" + _this.code + \"]: \" + _this.message;\n    };\n\n    return _this;\n  }\n\n  return FirestoreError;\n}(Error);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper function to prevent instantiation through the constructor.\r\n *\r\n * This method creates a new constructor that throws when it's invoked.\r\n * The prototype of that constructor is then set to the prototype of the hidden\r\n * \"class\" to expose all the prototype methods and allow for instanceof\r\n * checks.\r\n *\r\n * To also make all the static methods available, all properties of the\r\n * original constructor are copied to the new constructor.\r\n */\n\n\nfunction makeConstructorPrivate(cls, optionalMessage) {\n  function PublicConstructor() {\n    var error = 'This constructor is private.';\n\n    if (optionalMessage) {\n      error += ' ';\n      error += optionalMessage;\n    }\n\n    throw new FirestoreError(Code.INVALID_ARGUMENT, error);\n  } // Make sure instanceof checks work and all methods are exposed on the public\n  // constructor\n\n\n  PublicConstructor.prototype = cls.prototype; // Copy any static methods/members\n\n  for (var staticProperty in cls) {\n    if (cls.hasOwnProperty(staticProperty)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      PublicConstructor[staticProperty] = cls[staticProperty];\n    }\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  return PublicConstructor;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction contains(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/** Returns the given value if it's defined or the defaultValue otherwise. */\n\n\nfunction defaulted(value, defaultValue) {\n  return value !== undefined ? value : defaultValue;\n}\n\nfunction forEachNumber(obj, fn) {\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var num = Number(key);\n\n      if (!isNaN(num)) {\n        fn(num, obj[key]);\n      }\n    }\n  }\n}\n\nfunction values(obj) {\n  var vs = [];\n  forEach(obj, function (_, v) {\n    return vs.push(v);\n  });\n  return vs;\n}\n\nfunction forEach(obj, fn) {\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\nfunction isEmpty(obj) {\n  assert(obj != null && typeof obj === 'object', 'isEmpty() expects object parameter.');\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowCopy(obj) {\n  assert(obj && typeof obj === 'object', 'shallowCopy() expects object parameter.');\n  var result = {};\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      result[key] = obj[key];\n    }\n  }\n\n  return result;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Validates that no arguments were passed in the invocation of functionName.\r\n *\r\n * Forward the magic \"arguments\" variable as second parameter on which the\r\n * parameter validation is performed:\r\n * validateNoArgs('myFunction', arguments);\r\n */\n\n\nfunction validateNoArgs(functionName, args) {\n  if (args.length !== 0) {\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() does not support arguments, \" + 'but was called with ' + formatPlural(args.length, 'argument') + '.');\n  }\n}\n/**\r\n * Validates the invocation of functionName has the exact number of arguments.\r\n *\r\n * Forward the magic \"arguments\" variable as second parameter on which the\r\n * parameter validation is performed:\r\n * validateExactNumberOfArgs('myFunction', arguments, 2);\r\n */\n\n\nfunction validateExactNumberOfArgs(functionName, args, numberOfArgs) {\n  if (args.length !== numberOfArgs) {\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires \" + formatPlural(numberOfArgs, 'argument') + ', but was called with ' + formatPlural(args.length, 'argument') + '.');\n  }\n}\n/**\r\n * Validates the invocation of functionName has at least the provided number of\r\n * arguments (but can have many more).\r\n *\r\n * Forward the magic \"arguments\" variable as second parameter on which the\r\n * parameter validation is performed:\r\n * validateAtLeastNumberOfArgs('myFunction', arguments, 2);\r\n */\n\n\nfunction validateAtLeastNumberOfArgs(functionName, args, minNumberOfArgs) {\n  if (args.length < minNumberOfArgs) {\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires at least \" + formatPlural(minNumberOfArgs, 'argument') + ', but was called with ' + formatPlural(args.length, 'argument') + '.');\n  }\n}\n/**\r\n * Validates the invocation of functionName has number of arguments between\r\n * the values provided.\r\n *\r\n * Forward the magic \"arguments\" variable as second parameter on which the\r\n * parameter validation is performed:\r\n * validateBetweenNumberOfArgs('myFunction', arguments, 2, 3);\r\n */\n\n\nfunction validateBetweenNumberOfArgs(functionName, args, minNumberOfArgs, maxNumberOfArgs) {\n  if (args.length < minNumberOfArgs || args.length > maxNumberOfArgs) {\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires between \" + minNumberOfArgs + \" and \" + (maxNumberOfArgs + \" arguments, but was called with \") + formatPlural(args.length, 'argument') + '.');\n  }\n}\n/**\r\n * Validates the provided argument is an array and has as least the expected\r\n * number of elements.\r\n */\n\n\nfunction validateNamedArrayAtLeastNumberOfElements(functionName, value, name, minNumberOfElements) {\n  if (!(value instanceof Array) || value.length < minNumberOfElements) {\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires its \" + name + \" argument to be an \" + 'array with at least ' + (formatPlural(minNumberOfElements, 'element') + \".\"));\n  }\n}\n/**\r\n * Validates the provided positional argument has the native JavaScript type\r\n * using typeof checks.\r\n */\n\n\nfunction validateArgType(functionName, type, position, argument) {\n  validateType(functionName, type, ordinal(position) + \" argument\", argument);\n}\n/**\r\n * Validates the provided argument has the native JavaScript type using\r\n * typeof checks or is undefined.\r\n */\n\n\nfunction validateOptionalArgType(functionName, type, position, argument) {\n  if (argument !== undefined) {\n    validateArgType(functionName, type, position, argument);\n  }\n}\n/**\r\n * Validates the provided named option has the native JavaScript type using\r\n * typeof checks.\r\n */\n\n\nfunction validateNamedType(functionName, type, optionName, argument) {\n  validateType(functionName, type, optionName + \" option\", argument);\n}\n/**\r\n * Validates the provided named option has the native JavaScript type using\r\n * typeof checks or is undefined.\r\n */\n\n\nfunction validateNamedOptionalType(functionName, type, optionName, argument) {\n  if (argument !== undefined) {\n    validateNamedType(functionName, type, optionName, argument);\n  }\n}\n\nfunction validateArrayElements(functionName, optionName, typeDescription, argument, validator) {\n  if (!(argument instanceof Array)) {\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires its \" + optionName + \" \" + (\"option to be an array, but it was: \" + valueDescription(argument)));\n  }\n\n  for (var i = 0; i < argument.length; ++i) {\n    if (!validator(argument[i])) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires all \" + optionName + \" \" + (\"elements to be \" + typeDescription + \", but the value at index \" + i + \" \") + (\"was: \" + valueDescription(argument[i])));\n    }\n  }\n}\n\nfunction validateOptionalArrayElements(functionName, optionName, typeDescription, argument, validator) {\n  if (argument !== undefined) {\n    validateArrayElements(functionName, optionName, typeDescription, argument, validator);\n  }\n}\n/**\r\n * Validates that the provided named option equals one of the expected values.\r\n */\n\n\nfunction validateNamedPropertyEquals(functionName, inputName, optionName, input, expected) {\n  var expectedDescription = [];\n\n  for (var _i = 0, expected_1 = expected; _i < expected_1.length; _i++) {\n    var val = expected_1[_i];\n\n    if (val === input) {\n      return;\n    }\n\n    expectedDescription.push(valueDescription(val));\n  }\n\n  var actualDescription = valueDescription(input);\n  throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid value \" + actualDescription + \" provided to function \" + functionName + \"() for option \" + (\"\\\"\" + optionName + \"\\\". Acceptable values: \" + expectedDescription.join(', ')));\n}\n/**\r\n * Validates that the provided named option equals one of the expected values or\r\n * is undefined.\r\n */\n\n\nfunction validateNamedOptionalPropertyEquals(functionName, inputName, optionName, input, expected) {\n  if (input !== undefined) {\n    validateNamedPropertyEquals(functionName, inputName, optionName, input, expected);\n  }\n}\n/**\r\n * Validates that the provided argument is a valid enum.\r\n *\r\n * @param functionName Function making the validation call.\r\n * @param enums Array containing all possible values for the enum.\r\n * @param position Position of the argument in `functionName`.\r\n * @param argument Arugment to validate.\r\n */\n\n\nfunction validateStringEnum(functionName, enums, position, argument) {\n  if (!enums.some(function (element) {\n    return element === argument;\n  })) {\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid value \" + valueDescription(argument) + \" provided to function \" + (functionName + \"() for its \" + ordinal(position) + \" argument. Acceptable \") + (\"values: \" + enums.join(', ')));\n  }\n}\n/** Helper to validate the type of a provided input. */\n\n\nfunction validateType(functionName, type, inputName, input) {\n  var valid = false;\n\n  if (type === 'object') {\n    valid = isPlainObject(input);\n  } else if (type === 'non-empty string') {\n    valid = typeof input === 'string' && input !== '';\n  } else {\n    valid = typeof input === type;\n  }\n\n  if (!valid) {\n    var description = valueDescription(input);\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires its \" + inputName + \" \" + (\"to be of type \" + type + \", but it was: \" + description));\n  }\n}\n/**\r\n * Returns true if it's a non-null object without a custom prototype\r\n * (i.e. excludes Array, Date, etc.).\r\n */\n\n\nfunction isPlainObject(input) {\n  return typeof input === 'object' && input !== null && (Object.getPrototypeOf(input) === Object.prototype || Object.getPrototypeOf(input) === null);\n}\n/** Returns a string describing the type / value of the provided input. */\n\n\nfunction valueDescription(input) {\n  if (input === undefined) {\n    return 'undefined';\n  } else if (input === null) {\n    return 'null';\n  } else if (typeof input === 'string') {\n    if (input.length > 20) {\n      input = input.substring(0, 20) + \"...\";\n    }\n\n    return JSON.stringify(input);\n  } else if (typeof input === 'number' || typeof input === 'boolean') {\n    return '' + input;\n  } else if (typeof input === 'object') {\n    if (input instanceof Array) {\n      return 'an array';\n    } else {\n      var customObjectName = tryGetCustomObjectType(input);\n\n      if (customObjectName) {\n        return \"a custom \" + customObjectName + \" object\";\n      } else {\n        return 'an object';\n      }\n    }\n  } else if (typeof input === 'function') {\n    return 'a function';\n  } else {\n    return fail('Unknown wrong type: ' + typeof input);\n  }\n}\n/** Hacky method to try to get the constructor name for an object. */\n\n\nfunction tryGetCustomObjectType(input) {\n  if (input.constructor) {\n    var funcNameRegex = /function\\s+([^\\s(]+)\\s*\\(/;\n    var results = funcNameRegex.exec(input.constructor.toString());\n\n    if (results && results.length > 1) {\n      return results[1];\n    }\n  }\n\n  return null;\n}\n/** Validates the provided argument is defined. */\n\n\nfunction validateDefined(functionName, position, argument) {\n  if (argument === undefined) {\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires a valid \" + ordinal(position) + \" \" + \"argument, but it was undefined.\");\n  }\n}\n/**\r\n * Validates the provided positional argument is an object, and its keys and\r\n * values match the expected keys and types provided in optionTypes.\r\n */\n\n\nfunction validateOptionNames(functionName, options, optionNames) {\n  forEach(options, function (key, _) {\n    if (optionNames.indexOf(key) < 0) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, \"Unknown option '\" + key + \"' passed to function \" + functionName + \"(). \" + 'Available options: ' + optionNames.join(', '));\n    }\n  });\n}\n/**\r\n * Helper method to throw an error that the provided argument did not pass\r\n * an instanceof check.\r\n */\n\n\nfunction invalidClassError(functionName, type, position, argument) {\n  var description = valueDescription(argument);\n  return new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires its \" + ordinal(position) + \" \" + (\"argument to be a \" + type + \", but it was: \" + description));\n}\n/** Converts a number to its english word representation */\n\n\nfunction ordinal(num) {\n  switch (num) {\n    case 1:\n      return 'first';\n\n    case 2:\n      return 'second';\n\n    case 3:\n      return 'third';\n\n    default:\n      return num + 'th';\n  }\n}\n/**\r\n * Formats the given word as plural conditionally given the preceding number.\r\n */\n\n\nfunction formatPlural(num, str) {\n  return num + \" \" + str + (num === 1 ? '' : 's');\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AutoId =\n/** @class */\nfunction () {\n  function AutoId() {}\n\n  AutoId.newId = function () {\n    // Alphanumeric characters\n    var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var autoId = '';\n\n    for (var i = 0; i < 20; i++) {\n      autoId += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n\n    assert(autoId.length === 20, 'Invalid auto ID: ' + autoId);\n    return autoId;\n  };\n\n  return AutoId;\n}();\n\nfunction primitiveComparator(left, right) {\n  if (left < right) {\n    return -1;\n  }\n\n  if (left > right) {\n    return 1;\n  }\n\n  return 0;\n}\n/** Helper to compare nullable (or undefined-able) objects using isEqual(). */\n\n\nfunction equals(left, right) {\n  if (left !== null && left !== undefined) {\n    return !!(right && left.isEqual(right));\n  } else {\n    // HACK: Explicitly cast since TypeScript's type narrowing apparently isn't\n    // smart enough.\n    return left === right;\n  }\n}\n/** Helper to compare arrays using isEqual(). */\n\n\nfunction arrayEquals(left, right) {\n  if (left.length !== right.length) {\n    return false;\n  }\n\n  for (var i = 0; i < left.length; i++) {\n    if (!left[i].isEqual(right[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * Returns the immediate lexicographically-following string. This is useful to\r\n * construct an inclusive range for indexeddb iterators.\r\n */\n\n\nfunction immediateSuccessor(s) {\n  // Return the input string, with an additional NUL byte appended.\n  return s + '\\0';\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Helper function to assert Uint8Array is available at runtime. */\n\n\nfunction assertUint8ArrayAvailable() {\n  if (typeof Uint8Array === 'undefined') {\n    throw new FirestoreError(Code.UNIMPLEMENTED, 'Uint8Arrays are not available in this environment.');\n  }\n}\n/** Helper function to assert Base64 functions are available at runtime. */\n\n\nfunction assertBase64Available() {\n  if (!PlatformSupport.getPlatform().base64Available) {\n    throw new FirestoreError(Code.UNIMPLEMENTED, 'Blobs are unavailable in Firestore in this environment.');\n  }\n}\n/**\r\n * Immutable class holding a blob (binary data).\r\n * This class is directly exposed in the public API.\r\n *\r\n * Note that while you can't hide the constructor in JavaScript code, we are\r\n * using the hack above to make sure no-one outside this module can call it.\r\n */\n\n\nvar Blob =\n/** @class */\nfunction () {\n  function Blob(binaryString) {\n    assertBase64Available();\n    this._binaryString = binaryString;\n  }\n\n  Blob.fromBase64String = function (base64) {\n    validateExactNumberOfArgs('Blob.fromBase64String', arguments, 1);\n    validateArgType('Blob.fromBase64String', 'string', 1, base64);\n    assertBase64Available();\n\n    try {\n      var binaryString = PlatformSupport.getPlatform().atob(base64);\n      return new Blob(binaryString);\n    } catch (e) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'Failed to construct Blob from Base64 string: ' + e);\n    }\n  };\n\n  Blob.fromUint8Array = function (array) {\n    validateExactNumberOfArgs('Blob.fromUint8Array', arguments, 1);\n    assertUint8ArrayAvailable();\n\n    if (!(array instanceof Uint8Array)) {\n      throw invalidClassError('Blob.fromUint8Array', 'Uint8Array', 1, array);\n    } // We can't call array.map directly because it expects the return type to\n    // be a Uint8Array, whereas we can convert it to a regular array by invoking\n    // map on the Array prototype.\n\n\n    var binaryString = Array.prototype.map.call(array, function (char) {\n      return String.fromCharCode(char);\n    }).join('');\n    return new Blob(binaryString);\n  };\n\n  Blob.prototype.toBase64 = function () {\n    validateExactNumberOfArgs('Blob.toBase64', arguments, 0);\n    assertBase64Available();\n    return PlatformSupport.getPlatform().btoa(this._binaryString);\n  };\n\n  Blob.prototype.toUint8Array = function () {\n    validateExactNumberOfArgs('Blob.toUint8Array', arguments, 0);\n    assertUint8ArrayAvailable();\n    var buffer = new Uint8Array(this._binaryString.length);\n\n    for (var i = 0; i < this._binaryString.length; i++) {\n      buffer[i] = this._binaryString.charCodeAt(i);\n    }\n\n    return buffer;\n  };\n\n  Blob.prototype.toString = function () {\n    return 'Blob(base64: ' + this.toBase64() + ')';\n  };\n\n  Blob.prototype.isEqual = function (other) {\n    return this._binaryString === other._binaryString;\n  };\n  /**\r\n   * Actually private to JS consumers of our API, so this function is prefixed\r\n   * with an underscore.\r\n   */\n\n\n  Blob.prototype._compareTo = function (other) {\n    return primitiveComparator(this._binaryString, other._binaryString);\n  };\n\n  return Blob;\n}(); // Public instance that disallows construction at runtime. This constructor is\n// used when exporting Blob on firebase.firestore.Blob and will be called Blob\n// publicly. Internally we still use Blob which has a type checked private\n// constructor. Note that Blob and PublicBlob can be used interchangeably in\n// instanceof checks.\n// For our internal TypeScript code PublicBlob doesn't exist as a type, and so\n// we need to use Blob as type and export it too.\n\n\nvar PublicBlob = makeConstructorPrivate(Blob, 'Use Blob.fromUint8Array() or Blob.fromBase64String() instead.');\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DatabaseInfo =\n/** @class */\nfunction () {\n  /**\r\n   * Constructs a DatabaseInfo using the provided host, databaseId and\r\n   * persistenceKey.\r\n   *\r\n   * @param databaseId The database to use.\r\n   * @param persistenceKey A unique identifier for this Firestore's local\r\n   * storage (used in conjunction with the databaseId).\r\n   * @param host The Firestore backend host to connect to.\r\n   * @param ssl Whether to use SSL when connecting.\r\n   * @param forceLongPolling Whether to use the forceLongPolling option\r\n   * when using WebChannel as the network transport.\r\n   */\n  function DatabaseInfo(databaseId, persistenceKey, host, ssl, forceLongPolling) {\n    this.databaseId = databaseId;\n    this.persistenceKey = persistenceKey;\n    this.host = host;\n    this.ssl = ssl;\n    this.forceLongPolling = forceLongPolling;\n  }\n\n  return DatabaseInfo;\n}();\n/** The default database name for a project. */\n\n\nvar DEFAULT_DATABASE_NAME = '(default)';\n/** Represents the database ID a Firestore client is associated with. */\n\nvar DatabaseId =\n/** @class */\nfunction () {\n  function DatabaseId(projectId, database) {\n    this.projectId = projectId;\n    this.database = database ? database : DEFAULT_DATABASE_NAME;\n  }\n\n  Object.defineProperty(DatabaseId.prototype, \"isDefaultDatabase\", {\n    get: function get() {\n      return this.database === DEFAULT_DATABASE_NAME;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  DatabaseId.prototype.isEqual = function (other) {\n    return other instanceof DatabaseId && other.projectId === this.projectId && other.database === this.database;\n  };\n\n  DatabaseId.prototype.compareTo = function (other) {\n    return primitiveComparator(this.projectId, other.projectId) || primitiveComparator(this.database, other.database);\n  };\n\n  return DatabaseId;\n}();\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * `ListenSequence` is a monotonic sequence. It is initialized with a minimum value to\r\n * exceed. All subsequent calls to next will return increasing values. If provided with a\r\n * `SequenceNumberSyncer`, it will additionally bump its next value when told of a new value, as\r\n * well as write out sequence numbers that it produces via `next()`.\r\n */\n\n\nvar ListenSequence =\n/** @class */\nfunction () {\n  function ListenSequence(previousValue, sequenceNumberSyncer) {\n    var _this = this;\n\n    this.previousValue = previousValue;\n\n    if (sequenceNumberSyncer) {\n      sequenceNumberSyncer.sequenceNumberHandler = function (sequenceNumber) {\n        return _this.setPreviousValue(sequenceNumber);\n      };\n\n      this.writeNewSequenceNumber = function (sequenceNumber) {\n        return sequenceNumberSyncer.writeSequenceNumber(sequenceNumber);\n      };\n    }\n  }\n\n  ListenSequence.prototype.setPreviousValue = function (externalPreviousValue) {\n    this.previousValue = Math.max(externalPreviousValue, this.previousValue);\n    return this.previousValue;\n  };\n\n  ListenSequence.prototype.next = function () {\n    var nextValue = ++this.previousValue;\n\n    if (this.writeNewSequenceNumber) {\n      this.writeNewSequenceNumber(nextValue);\n    }\n\n    return nextValue;\n  };\n\n  ListenSequence.INVALID = -1;\n  return ListenSequence;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DOCUMENT_KEY_NAME = '__name__';\n/**\r\n * Path represents an ordered sequence of string segments.\r\n */\n\nvar BasePath =\n/** @class */\nfunction () {\n  function BasePath(segments, offset, length) {\n    if (offset === undefined) {\n      offset = 0;\n    } else if (offset > segments.length) {\n      fail('offset ' + offset + ' out of range ' + segments.length);\n    }\n\n    if (length === undefined) {\n      length = segments.length - offset;\n    } else if (length > segments.length - offset) {\n      fail('length ' + length + ' out of range ' + (segments.length - offset));\n    }\n\n    this.segments = segments;\n    this.offset = offset;\n    this.len = length;\n  }\n\n  Object.defineProperty(BasePath.prototype, \"length\", {\n    get: function get() {\n      return this.len;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BasePath.prototype.isEqual = function (other) {\n    return BasePath.comparator(this, other) === 0;\n  };\n\n  BasePath.prototype.child = function (nameOrPath) {\n    var segments = this.segments.slice(this.offset, this.limit());\n\n    if (nameOrPath instanceof BasePath) {\n      nameOrPath.forEach(function (segment) {\n        segments.push(segment);\n      });\n    } else {\n      segments.push(nameOrPath);\n    }\n\n    return this.construct(segments);\n  };\n  /** The index of one past the last segment of the path. */\n\n\n  BasePath.prototype.limit = function () {\n    return this.offset + this.length;\n  };\n\n  BasePath.prototype.popFirst = function (size) {\n    size = size === undefined ? 1 : size;\n    assert(this.length >= size, \"Can't call popFirst() with less segments\");\n    return this.construct(this.segments, this.offset + size, this.length - size);\n  };\n\n  BasePath.prototype.popLast = function () {\n    assert(!this.isEmpty(), \"Can't call popLast() on empty path\");\n    return this.construct(this.segments, this.offset, this.length - 1);\n  };\n\n  BasePath.prototype.firstSegment = function () {\n    assert(!this.isEmpty(), \"Can't call firstSegment() on empty path\");\n    return this.segments[this.offset];\n  };\n\n  BasePath.prototype.lastSegment = function () {\n    return this.get(this.length - 1);\n  };\n\n  BasePath.prototype.get = function (index) {\n    assert(index < this.length, 'Index out of range');\n    return this.segments[this.offset + index];\n  };\n\n  BasePath.prototype.isEmpty = function () {\n    return this.length === 0;\n  };\n\n  BasePath.prototype.isPrefixOf = function (other) {\n    if (other.length < this.length) {\n      return false;\n    }\n\n    for (var i = 0; i < this.length; i++) {\n      if (this.get(i) !== other.get(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  BasePath.prototype.isImmediateParentOf = function (potentialChild) {\n    if (this.length + 1 !== potentialChild.length) {\n      return false;\n    }\n\n    for (var i = 0; i < this.length; i++) {\n      if (this.get(i) !== potentialChild.get(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  BasePath.prototype.forEach = function (fn) {\n    for (var i = this.offset, end = this.limit(); i < end; i++) {\n      fn(this.segments[i]);\n    }\n  };\n\n  BasePath.prototype.toArray = function () {\n    return this.segments.slice(this.offset, this.limit());\n  };\n\n  BasePath.comparator = function (p1, p2) {\n    var len = Math.min(p1.length, p2.length);\n\n    for (var i = 0; i < len; i++) {\n      var left = p1.get(i);\n      var right = p2.get(i);\n\n      if (left < right) {\n        return -1;\n      }\n\n      if (left > right) {\n        return 1;\n      }\n    }\n\n    if (p1.length < p2.length) {\n      return -1;\n    }\n\n    if (p1.length > p2.length) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  return BasePath;\n}();\n/**\r\n * A slash-separated path for navigating resources (documents and collections)\r\n * within Firestore.\r\n */\n\n\nvar ResourcePath =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ResourcePath, _super);\n\n  function ResourcePath() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ResourcePath.prototype.construct = function (segments, offset, length) {\n    return new ResourcePath(segments, offset, length);\n  };\n\n  ResourcePath.prototype.canonicalString = function () {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n    return this.toArray().join('/');\n  };\n\n  ResourcePath.prototype.toString = function () {\n    return this.canonicalString();\n  };\n  /**\r\n   * Creates a resource path from the given slash-delimited string.\r\n   */\n\n\n  ResourcePath.fromString = function (path) {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n    if (path.indexOf('//') >= 0) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid path (\" + path + \"). Paths must not contain // in them.\");\n    } // We may still have an empty segment at the beginning or end if they had a\n    // leading or trailing slash (which we allow).\n\n\n    var segments = path.split('/').filter(function (segment) {\n      return segment.length > 0;\n    });\n    return new ResourcePath(segments);\n  };\n\n  ResourcePath.EMPTY_PATH = new ResourcePath([]);\n  return ResourcePath;\n}(BasePath);\n\nvar identifierRegExp = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/** A dot-separated path for navigating sub-objects within a document. */\n\nvar FieldPath =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(FieldPath, _super);\n\n  function FieldPath() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FieldPath.prototype.construct = function (segments, offset, length) {\n    return new FieldPath(segments, offset, length);\n  };\n  /**\r\n   * Returns true if the string could be used as a segment in a field path\r\n   * without escaping.\r\n   */\n\n\n  FieldPath.isValidIdentifier = function (segment) {\n    return identifierRegExp.test(segment);\n  };\n\n  FieldPath.prototype.canonicalString = function () {\n    return this.toArray().map(function (str) {\n      str = str.replace('\\\\', '\\\\\\\\').replace('`', '\\\\`');\n\n      if (!FieldPath.isValidIdentifier(str)) {\n        str = '`' + str + '`';\n      }\n\n      return str;\n    }).join('.');\n  };\n\n  FieldPath.prototype.toString = function () {\n    return this.canonicalString();\n  };\n  /**\r\n   * Returns true if this field references the key of a document.\r\n   */\n\n\n  FieldPath.prototype.isKeyField = function () {\n    return this.length === 1 && this.get(0) === DOCUMENT_KEY_NAME;\n  };\n  /**\r\n   * The field designating the key of a document.\r\n   */\n\n\n  FieldPath.keyField = function () {\n    return new FieldPath([DOCUMENT_KEY_NAME]);\n  };\n  /**\r\n   * Parses a field string from the given server-formatted string.\r\n   *\r\n   * - Splitting the empty string is not allowed (for now at least).\r\n   * - Empty segments within the string (e.g. if there are two consecutive\r\n   *   separators) are not allowed.\r\n   *\r\n   * TODO(b/37244157): we should make this more strict. Right now, it allows\r\n   * non-identifier path components, even if they aren't escaped.\r\n   */\n\n\n  FieldPath.fromServerFormat = function (path) {\n    var segments = [];\n    var current = '';\n    var i = 0;\n\n    var addCurrentSegment = function addCurrentSegment() {\n      if (current.length === 0) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid field path (\" + path + \"). Paths must not be empty, begin \" + \"with '.', end with '.', or contain '..'\");\n      }\n\n      segments.push(current);\n      current = '';\n    };\n\n    var inBackticks = false;\n\n    while (i < path.length) {\n      var c = path[i];\n\n      if (c === '\\\\') {\n        if (i + 1 === path.length) {\n          throw new FirestoreError(Code.INVALID_ARGUMENT, 'Path has trailing escape character: ' + path);\n        }\n\n        var next = path[i + 1];\n\n        if (!(next === '\\\\' || next === '.' || next === '`')) {\n          throw new FirestoreError(Code.INVALID_ARGUMENT, 'Path has invalid escape sequence: ' + path);\n        }\n\n        current += next;\n        i += 2;\n      } else if (c === '`') {\n        inBackticks = !inBackticks;\n        i++;\n      } else if (c === '.' && !inBackticks) {\n        addCurrentSegment();\n        i++;\n      } else {\n        current += c;\n        i++;\n      }\n    }\n\n    addCurrentSegment();\n\n    if (inBackticks) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'Unterminated ` in path: ' + path);\n    }\n\n    return new FieldPath(segments);\n  };\n\n  FieldPath.EMPTY_PATH = new FieldPath([]);\n  return FieldPath;\n}(BasePath);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DocumentKey =\n/** @class */\nfunction () {\n  function DocumentKey(path) {\n    this.path = path;\n    assert(DocumentKey.isDocumentKey(path), 'Invalid DocumentKey with an odd number of segments: ' + path.toArray().join('/'));\n  }\n  /** Returns true if the document is in the specified collectionId. */\n\n\n  DocumentKey.prototype.hasCollectionId = function (collectionId) {\n    return this.path.length >= 2 && this.path.get(this.path.length - 2) === collectionId;\n  };\n\n  DocumentKey.prototype.isEqual = function (other) {\n    return other !== null && ResourcePath.comparator(this.path, other.path) === 0;\n  };\n\n  DocumentKey.prototype.toString = function () {\n    return this.path.toString();\n  };\n\n  DocumentKey.comparator = function (k1, k2) {\n    return ResourcePath.comparator(k1.path, k2.path);\n  };\n\n  DocumentKey.isDocumentKey = function (path) {\n    return path.length % 2 === 0;\n  };\n  /**\r\n   * Creates and returns a new document key with the given segments.\r\n   *\r\n   * @param path The segments of the path to the document\r\n   * @return A new instance of DocumentKey\r\n   */\n\n\n  DocumentKey.fromSegments = function (segments) {\n    return new DocumentKey(new ResourcePath(segments.slice()));\n  };\n  /**\r\n   * Creates and returns a new document key using '/' to split the string into\r\n   * segments.\r\n   *\r\n   * @param path The slash-separated path string to the document\r\n   * @return A new instance of DocumentKey\r\n   */\n\n\n  DocumentKey.fromPathString = function (path) {\n    return new DocumentKey(ResourcePath.fromString(path));\n  };\n\n  DocumentKey.EMPTY = new DocumentKey(new ResourcePath([]));\n  return DocumentKey;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Deferred =\n/** @class */\nfunction () {\n  function Deferred() {\n    var _this = this;\n\n    this.promise = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n  }\n\n  return Deferred;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wellknown \"timer\" IDs used when scheduling delayed operations on the\r\n * AsyncQueue. These IDs can then be used from tests to check for the presence\r\n * of operations or to run them early.\r\n *\r\n * The string values are used when encoding these timer IDs in JSON spec tests.\r\n */\n\n\nvar TimerId;\n\n(function (TimerId) {\n  /** All can be used with runDelayedOperationsEarly() to run all timers. */\n  TimerId[\"All\"] = \"all\";\n  /**\r\n   * The following 4 timers are used in persistent_stream.ts for the listen and\r\n   * write streams. The \"Idle\" timer is used to close the stream due to\r\n   * inactivity. The \"ConnectionBackoff\" timer is used to restart a stream once\r\n   * the appropriate backoff delay has elapsed.\r\n   */\n\n  TimerId[\"ListenStreamIdle\"] = \"listen_stream_idle\";\n  TimerId[\"ListenStreamConnectionBackoff\"] = \"listen_stream_connection_backoff\";\n  TimerId[\"WriteStreamIdle\"] = \"write_stream_idle\";\n  TimerId[\"WriteStreamConnectionBackoff\"] = \"write_stream_connection_backoff\";\n  /**\r\n   * A timer used in online_state_tracker.ts to transition from\r\n   * OnlineState.Unknown to Offline after a set timeout, rather than waiting\r\n   * indefinitely for success or failure.\r\n   */\n\n  TimerId[\"OnlineStateTimeout\"] = \"online_state_timeout\";\n  /**\r\n   * A timer used to update the client metadata in IndexedDb, which is used\r\n   * to determine the primary leaseholder.\r\n   */\n\n  TimerId[\"ClientMetadataRefresh\"] = \"client_metadata_refresh\";\n  /** A timer used to periodically attempt LRU Garbage collection */\n\n  TimerId[\"LruGarbageCollection\"] = \"lru_garbage_collection\";\n  /**\r\n   * A timer used to retry transactions. Since there can be multiple concurrent\r\n   * transactions, multiple of these may be in the queue at a given time.\r\n   */\n\n  TimerId[\"RetryTransaction\"] = \"retry_transaction\";\n})(TimerId || (TimerId = {}));\n/**\r\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\r\n *\r\n * It is created via DelayedOperation.createAndSchedule().\r\n *\r\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\r\n */\n\n\nvar DelayedOperation =\n/** @class */\nfunction () {\n  function DelayedOperation(asyncQueue, timerId, targetTimeMs, op, removalCallback) {\n    this.asyncQueue = asyncQueue;\n    this.timerId = timerId;\n    this.targetTimeMs = targetTimeMs;\n    this.op = op;\n    this.removalCallback = removalCallback;\n    this.deferred = new Deferred();\n    this.then = this.deferred.promise.then.bind(this.deferred.promise);\n    this.catch = this.deferred.promise.catch.bind(this.deferred.promise); // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n\n    this.deferred.promise.catch(function (err) {});\n  }\n  /**\r\n   * Creates and returns a DelayedOperation that has been scheduled to be\r\n   * executed on the provided asyncQueue after the provided delayMs.\r\n   *\r\n   * @param asyncQueue The queue to schedule the operation on.\r\n   * @param id A Timer ID identifying the type of operation this is.\r\n   * @param delayMs The delay (ms) before the operation should be scheduled.\r\n   * @param op The operation to run.\r\n   * @param removalCallback A callback to be called synchronously once the\r\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\r\n   *   from its delayedOperations list.\r\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\r\n   *   the DelayedOperation class public.\r\n   */\n\n\n  DelayedOperation.createAndSchedule = function (asyncQueue, timerId, delayMs, op, removalCallback) {\n    var targetTime = Date.now() + delayMs;\n    var delayedOp = new DelayedOperation(asyncQueue, timerId, targetTime, op, removalCallback);\n    delayedOp.start(delayMs);\n    return delayedOp;\n  };\n  /**\r\n   * Starts the timer. This is called immediately after construction by\r\n   * createAndSchedule().\r\n   */\n\n\n  DelayedOperation.prototype.start = function (delayMs) {\n    var _this = this;\n\n    this.timerHandle = setTimeout(function () {\n      return _this.handleDelayElapsed();\n    }, delayMs);\n  };\n  /**\r\n   * Queues the operation to run immediately (if it hasn't already been run or\r\n   * canceled).\r\n   */\n\n\n  DelayedOperation.prototype.skipDelay = function () {\n    return this.handleDelayElapsed();\n  };\n  /**\r\n   * Cancels the operation if it hasn't already been executed or canceled. The\r\n   * promise will be rejected.\r\n   *\r\n   * As long as the operation has not yet been run, calling cancel() provides a\r\n   * guarantee that the operation will not be run.\r\n   */\n\n\n  DelayedOperation.prototype.cancel = function (reason) {\n    if (this.timerHandle !== null) {\n      this.clearTimeout();\n      this.deferred.reject(new FirestoreError(Code.CANCELLED, 'Operation cancelled' + (reason ? ': ' + reason : '')));\n    }\n  };\n\n  DelayedOperation.prototype.handleDelayElapsed = function () {\n    var _this = this;\n\n    this.asyncQueue.enqueueAndForget(function () {\n      if (_this.timerHandle !== null) {\n        _this.clearTimeout();\n\n        return _this.op().then(function (result) {\n          return _this.deferred.resolve(result);\n        });\n      } else {\n        return Promise.resolve();\n      }\n    });\n  };\n\n  DelayedOperation.prototype.clearTimeout = function () {\n    if (this.timerHandle !== null) {\n      this.removalCallback(this);\n      clearTimeout(this.timerHandle);\n      this.timerHandle = null;\n    }\n  };\n\n  return DelayedOperation;\n}();\n\nvar AsyncQueue =\n/** @class */\nfunction () {\n  function AsyncQueue() {\n    // The last promise in the queue.\n    this.tail = Promise.resolve(); // Is this AsyncQueue being shut down? Once it is set to true, it will not\n    // be changed again.\n\n    this._isShuttingDown = false; // Operations scheduled to be queued in the future. Operations are\n    // automatically removed after they are run or canceled.\n\n    this.delayedOperations = []; // visible for testing\n\n    this.failure = null; // Flag set while there's an outstanding AsyncQueue operation, used for\n    // assertion sanity-checks.\n\n    this.operationInProgress = false; // List of TimerIds to fast-forward delays for.\n\n    this.timerIdsToSkip = [];\n  }\n\n  Object.defineProperty(AsyncQueue.prototype, \"isShuttingDown\", {\n    // Is this AsyncQueue being shut down? If true, this instance will not enqueue\n    // any new operations, Promises from enqueue requests will not resolve.\n    get: function get() {\n      return this._isShuttingDown;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Adds a new operation to the queue without waiting for it to complete (i.e.\r\n   * we ignore the Promise result).\r\n   */\n\n  AsyncQueue.prototype.enqueueAndForget = function (op) {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.enqueue(op);\n  };\n  /**\r\n   * Regardless if the queue has initialized shutdown, adds a new operation to the\r\n   * queue without waiting for it to complete (i.e. we ignore the Promise result).\r\n   */\n\n\n  AsyncQueue.prototype.enqueueAndForgetEvenAfterShutdown = function (op) {\n    this.verifyNotFailed(); // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n    this.enqueueInternal(op);\n  };\n  /**\r\n   * Regardless if the queue has initialized shutdown, adds a new operation to the\r\n   * queue.\r\n   */\n\n\n  AsyncQueue.prototype.enqueueEvenAfterShutdown = function (op) {\n    this.verifyNotFailed();\n    return this.enqueueInternal(op);\n  };\n  /**\r\n   * Adds a new operation to the queue and initialize the shut down of this queue.\r\n   * Returns a promise that will be resolved when the promise returned by the new\r\n   * operation is (with its value).\r\n   * Once this method is called, the only possible way to request running an operation\r\n   * is through `enqueueAndForgetEvenAfterShutdown`.\r\n   */\n\n\n  AsyncQueue.prototype.enqueueAndInitiateShutdown = function (op) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.verifyNotFailed();\n            if (!!this._isShuttingDown) return [3\n            /*break*/\n            , 2];\n            this._isShuttingDown = true;\n            return [4\n            /*yield*/\n            , this.enqueueEvenAfterShutdown(op)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Adds a new operation to the queue. Returns a promise that will be resolved\r\n   * when the promise returned by the new operation is (with its value).\r\n   */\n\n\n  AsyncQueue.prototype.enqueue = function (op) {\n    this.verifyNotFailed();\n\n    if (this._isShuttingDown) {\n      // Return a Promise which never resolves.\n      return new Promise(function (resolve) {});\n    }\n\n    return this.enqueueInternal(op);\n  };\n\n  AsyncQueue.prototype.enqueueInternal = function (op) {\n    var _this = this;\n\n    var newTail = this.tail.then(function () {\n      _this.operationInProgress = true;\n      return op().catch(function (error$1) {\n        _this.failure = error$1;\n        _this.operationInProgress = false;\n        var message = error$1.stack || error$1.message || '';\n        error('INTERNAL UNHANDLED ERROR: ', message); // Escape the promise chain and throw the error globally so that\n        // e.g. any global crash reporting library detects and reports it.\n        // (but not for simulated errors in our tests since this breaks mocha)\n\n        if (message.indexOf('Firestore Test Simulated Error') < 0) {\n          setTimeout(function () {\n            throw error$1;\n          }, 0);\n        } // Re-throw the error so that this.tail becomes a rejected Promise and\n        // all further attempts to chain (via .then) will just short-circuit\n        // and return the rejected Promise.\n\n\n        throw error$1;\n      }).then(function (result) {\n        _this.operationInProgress = false;\n        return result;\n      });\n    });\n    this.tail = newTail;\n    return newTail;\n  };\n  /**\r\n   * Schedules an operation to be queued on the AsyncQueue once the specified\r\n   * `delayMs` has elapsed. The returned CancelablePromise can be used to cancel\r\n   * the operation prior to its running.\r\n   */\n\n\n  AsyncQueue.prototype.enqueueAfterDelay = function (timerId, delayMs, op) {\n    var _this = this;\n\n    this.verifyNotFailed();\n    assert(delayMs >= 0, \"Attempted to schedule an operation with a negative delay of \" + delayMs); // Fast-forward delays for timerIds that have been overriden.\n\n    if (this.timerIdsToSkip.indexOf(timerId) > -1) {\n      delayMs = 0;\n    }\n\n    var delayedOp = DelayedOperation.createAndSchedule(this, timerId, delayMs, op, function (removedOp) {\n      return _this.removeDelayedOperation(removedOp);\n    });\n    this.delayedOperations.push(delayedOp);\n    return delayedOp;\n  };\n\n  AsyncQueue.prototype.verifyNotFailed = function () {\n    if (this.failure) {\n      fail('AsyncQueue is already failed: ' + (this.failure.stack || this.failure.message));\n    }\n  };\n  /**\r\n   * Verifies there's an operation currently in-progress on the AsyncQueue.\r\n   * Unfortunately we can't verify that the running code is in the promise chain\r\n   * of that operation, so this isn't a foolproof check, but it should be enough\r\n   * to catch some bugs.\r\n   */\n\n\n  AsyncQueue.prototype.verifyOperationInProgress = function () {\n    assert(this.operationInProgress, 'verifyOpInProgress() called when no op in progress on this queue.');\n  };\n  /**\r\n   * Waits until all currently queued tasks are finished executing. Delayed\r\n   * operations are not run.\r\n   */\n\n\n  AsyncQueue.prototype.drain = function () {\n    // It should still be possible to drain the queue after it is shutting down.\n    return this.enqueueEvenAfterShutdown(function () {\n      return Promise.resolve();\n    });\n  };\n  /**\r\n   * For Tests: Determine if a delayed operation with a particular TimerId\r\n   * exists.\r\n   */\n\n\n  AsyncQueue.prototype.containsDelayedOperation = function (timerId) {\n    for (var _i = 0, _a = this.delayedOperations; _i < _a.length; _i++) {\n      var op = _a[_i];\n\n      if (op.timerId === timerId) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\r\n   * For Tests: Runs some or all delayed operations early.\r\n   *\r\n   * @param lastTimerId Delayed operations up to and including this TimerId will\r\n   *  be drained. Throws if no such operation exists. Pass TimerId.All to run\r\n   *  all delayed operations.\r\n   * @returns a Promise that resolves once all operations have been run.\r\n   */\n\n\n  AsyncQueue.prototype.runDelayedOperationsEarly = function (lastTimerId) {\n    var _this = this; // Note that draining may generate more delayed ops, so we do that first.\n\n\n    return this.drain().then(function () {\n      assert(lastTimerId === TimerId.All || _this.containsDelayedOperation(lastTimerId), \"Attempted to drain to missing operation \" + lastTimerId); // Run ops in the same order they'd run if they ran naturally.\n\n      _this.delayedOperations.sort(function (a, b) {\n        return a.targetTimeMs - b.targetTimeMs;\n      });\n\n      for (var _i = 0, _a = _this.delayedOperations; _i < _a.length; _i++) {\n        var op = _a[_i];\n        op.skipDelay();\n\n        if (lastTimerId !== TimerId.All && op.timerId === lastTimerId) {\n          break;\n        }\n      }\n\n      return _this.drain();\n    });\n  };\n  /**\r\n   * For Tests: Skip all subsequent delays for a timer id.\r\n   */\n\n\n  AsyncQueue.prototype.skipDelaysForTimerId = function (timerId) {\n    this.timerIdsToSkip.push(timerId);\n  };\n  /** Called once a DelayedOperation is run or canceled. */\n\n\n  AsyncQueue.prototype.removeDelayedOperation = function (op) {\n    // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n    var index = this.delayedOperations.indexOf(op);\n    assert(index >= 0, 'Delayed operation not found.');\n    this.delayedOperations.splice(index, 1);\n  };\n\n  return AsyncQueue;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar escapeChar = \"\\x01\";\nvar encodedSeparatorChar = \"\\x01\";\nvar encodedNul = \"\\x10\";\nvar encodedEscape = \"\\x11\";\n/**\r\n * Encodes a resource path into a IndexedDb-compatible string form.\r\n */\n\nfunction encode(path) {\n  var result = '';\n\n  for (var i = 0; i < path.length; i++) {\n    if (result.length > 0) {\n      result = encodeSeparator(result);\n    }\n\n    result = encodeSegment(path.get(i), result);\n  }\n\n  return encodeSeparator(result);\n}\n/** Encodes a single segment of a resource path into the given result */\n\n\nfunction encodeSegment(segment, resultBuf) {\n  var result = resultBuf;\n  var length = segment.length;\n\n  for (var i = 0; i < length; i++) {\n    var c = segment.charAt(i);\n\n    switch (c) {\n      case '\\0':\n        result += escapeChar + encodedNul;\n        break;\n\n      case escapeChar:\n        result += escapeChar + encodedEscape;\n        break;\n\n      default:\n        result += c;\n    }\n  }\n\n  return result;\n}\n/** Encodes a path separator into the given result */\n\n\nfunction encodeSeparator(result) {\n  return result + escapeChar + encodedSeparatorChar;\n}\n/**\r\n * Decodes the given IndexedDb-compatible string form of a resource path into\r\n * a ResourcePath instance. Note that this method is not suitable for use with\r\n * decoding resource names from the server; those are One Platform format\r\n * strings.\r\n */\n\n\nfunction decode(path) {\n  // Event the empty path must encode as a path of at least length 2. A path\n  // with exactly 2 must be the empty path.\n  var length = path.length;\n  assert(length >= 2, 'Invalid path ' + path);\n\n  if (length === 2) {\n    assert(path.charAt(0) === escapeChar && path.charAt(1) === encodedSeparatorChar, 'Non-empty path ' + path + ' had length 2');\n    return ResourcePath.EMPTY_PATH;\n  } // Escape characters cannot exist past the second-to-last position in the\n  // source value.\n\n\n  var lastReasonableEscapeIndex = length - 2;\n  var segments = [];\n  var segmentBuilder = '';\n\n  for (var start = 0; start < length;) {\n    // The last two characters of a valid encoded path must be a separator, so\n    // there must be an end to this segment.\n    var end = path.indexOf(escapeChar, start);\n\n    if (end < 0 || end > lastReasonableEscapeIndex) {\n      fail('Invalid encoded resource path: \"' + path + '\"');\n    }\n\n    var next = path.charAt(end + 1);\n\n    switch (next) {\n      case encodedSeparatorChar:\n        var currentPiece = path.substring(start, end);\n        var segment = void 0;\n\n        if (segmentBuilder.length === 0) {\n          // Avoid copying for the common case of a segment that excludes \\0\n          // and \\001\n          segment = currentPiece;\n        } else {\n          segmentBuilder += currentPiece;\n          segment = segmentBuilder;\n          segmentBuilder = '';\n        }\n\n        segments.push(segment);\n        break;\n\n      case encodedNul:\n        segmentBuilder += path.substring(start, end);\n        segmentBuilder += '\\0';\n        break;\n\n      case encodedEscape:\n        // The escape character can be used in the output to encode itself.\n        segmentBuilder += path.substring(start, end + 1);\n        break;\n\n      default:\n        fail('Invalid encoded resource path: \"' + path + '\"');\n    }\n\n    start = end + 2;\n  }\n\n  return new ResourcePath(segments);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Timestamp =\n/** @class */\nfunction () {\n  function Timestamp(seconds, nanoseconds) {\n    this.seconds = seconds;\n    this.nanoseconds = nanoseconds;\n\n    if (nanoseconds < 0) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'Timestamp nanoseconds out of range: ' + nanoseconds);\n    }\n\n    if (nanoseconds >= 1e9) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'Timestamp nanoseconds out of range: ' + nanoseconds);\n    } // Midnight at the beginning of 1/1/1 is the earliest Firestore supports.\n\n\n    if (seconds < -62135596800) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'Timestamp seconds out of range: ' + seconds);\n    } // This will break in the year 10,000.\n\n\n    if (seconds >= 253402300800) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'Timestamp seconds out of range: ' + seconds);\n    }\n  }\n\n  Timestamp.now = function () {\n    return Timestamp.fromMillis(Date.now());\n  };\n\n  Timestamp.fromDate = function (date) {\n    return Timestamp.fromMillis(date.getTime());\n  };\n\n  Timestamp.fromMillis = function (milliseconds) {\n    var seconds = Math.floor(milliseconds / 1000);\n    var nanos = (milliseconds - seconds * 1000) * 1e6;\n    return new Timestamp(seconds, nanos);\n  };\n\n  Timestamp.prototype.toDate = function () {\n    return new Date(this.toMillis());\n  };\n\n  Timestamp.prototype.toMillis = function () {\n    return this.seconds * 1000 + this.nanoseconds / 1e6;\n  };\n\n  Timestamp.prototype._compareTo = function (other) {\n    if (this.seconds === other.seconds) {\n      return primitiveComparator(this.nanoseconds, other.nanoseconds);\n    }\n\n    return primitiveComparator(this.seconds, other.seconds);\n  };\n\n  Timestamp.prototype.isEqual = function (other) {\n    return other.seconds === this.seconds && other.nanoseconds === this.nanoseconds;\n  };\n\n  Timestamp.prototype.toString = function () {\n    return 'Timestamp(seconds=' + this.seconds + ', nanoseconds=' + this.nanoseconds + ')';\n  };\n\n  return Timestamp;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A version of a document in Firestore. This corresponds to the version\r\n * timestamp, such as update_time or read_time.\r\n */\n\n\nvar SnapshotVersion =\n/** @class */\nfunction () {\n  function SnapshotVersion(timestamp) {\n    this.timestamp = timestamp;\n  } // TODO(b/34176344): Once we no longer need to use the old alpha protos,\n  // delete this constructor and use a timestamp-backed version everywhere.\n\n\n  SnapshotVersion.fromMicroseconds = function (value) {\n    var seconds = Math.floor(value / 1e6);\n    var nanos = value % 1e6 * 1e3;\n    return new SnapshotVersion(new Timestamp(seconds, nanos));\n  };\n\n  SnapshotVersion.fromTimestamp = function (value) {\n    return new SnapshotVersion(value);\n  };\n\n  SnapshotVersion.forDeletedDoc = function () {\n    return SnapshotVersion.MIN;\n  };\n\n  SnapshotVersion.prototype.compareTo = function (other) {\n    return this.timestamp._compareTo(other.timestamp);\n  };\n\n  SnapshotVersion.prototype.isEqual = function (other) {\n    return this.timestamp.isEqual(other.timestamp);\n  };\n  /** Returns a number representation of the version for use in spec tests. */\n\n\n  SnapshotVersion.prototype.toMicroseconds = function () {\n    // Convert to microseconds.\n    return this.timestamp.seconds * 1e6 + this.timestamp.nanoseconds / 1000;\n  };\n\n  SnapshotVersion.prototype.toString = function () {\n    return 'SnapshotVersion(' + this.timestamp.toString() + ')';\n  };\n\n  SnapshotVersion.prototype.toTimestamp = function () {\n    return this.timestamp;\n  };\n\n  SnapshotVersion.MIN = new SnapshotVersion(new Timestamp(0, 0));\n  return SnapshotVersion;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  function SortedMap(comparator, root) {\n    this.comparator = comparator;\n    this.root = root ? root : LLRBNode.EMPTY;\n  } // Returns a copy of the map, with the specified key/value added or replaced.\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator, this.root.insert(key, value, this.comparator).copy(null, null, LLRBNode.BLACK, null, null));\n  }; // Returns a copy of the map, with the specified key removed.\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator, this.root.remove(key, this.comparator).copy(null, null, LLRBNode.BLACK, null, null));\n  }; // Returns the value of the node with the given key, or null.\n\n\n  SortedMap.prototype.get = function (key) {\n    var node = this.root;\n\n    while (!node.isEmpty()) {\n      var cmp = this.comparator(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  }; // Returns the index of the element in this sorted map, or -1 if it doesn't\n  // exist.\n\n\n  SortedMap.prototype.indexOf = function (key) {\n    // Number of nodes that were pruned when descending right\n    var prunedNodes = 0;\n    var node = this.root;\n\n    while (!node.isEmpty()) {\n      var cmp = this.comparator(key, node.key);\n\n      if (cmp === 0) {\n        return prunedNodes + node.left.size;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else {\n        // Count all nodes left of the node plus the node itself\n        prunedNodes += node.left.size + 1;\n        node = node.right;\n      }\n    } // Node not found\n\n\n    return -1;\n  };\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root.isEmpty();\n  };\n\n  Object.defineProperty(SortedMap.prototype, \"size\", {\n    // Returns the total number of nodes in the map.\n    get: function get() {\n      return this.root.size;\n    },\n    enumerable: true,\n    configurable: true\n  }); // Returns the minimum key in the map.\n\n  SortedMap.prototype.minKey = function () {\n    return this.root.minKey();\n  }; // Returns the maximum key in the map.\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root.maxKey();\n  }; // Traverses the map in key order and calls the specified action function\n  // for each key/value pair. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root.inorderTraversal(action);\n  };\n\n  SortedMap.prototype.forEach = function (fn) {\n    this.inorderTraversal(function (k, v) {\n      fn(k, v);\n      return false;\n    });\n  };\n\n  SortedMap.prototype.toString = function () {\n    var descriptions = [];\n    this.inorderTraversal(function (k, v) {\n      descriptions.push(k + \":\" + v);\n      return false;\n    });\n    return \"{\" + descriptions.join(', ') + \"}\";\n  }; // Traverses the map in reverse key order and calls the specified action\n  // function for each key/value pair. If action returns true, traversal is\n  // aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root.reverseTraversal(action);\n  }; // Returns an iterator over the SortedMap.\n\n\n  SortedMap.prototype.getIterator = function () {\n    return new SortedMapIterator(this.root, null, this.comparator, false);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key) {\n    return new SortedMapIterator(this.root, key, this.comparator, false);\n  };\n\n  SortedMap.prototype.getReverseIterator = function () {\n    return new SortedMapIterator(this.root, null, this.comparator, true);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key) {\n    return new SortedMapIterator(this.root, key, this.comparator, true);\n  };\n\n  return SortedMap;\n}(); // end SortedMap\n// An iterator over an LLRBNode.\n\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  function SortedMapIterator(node, startKey, comparator, isReverse) {\n    this.isReverse = isReverse;\n    this.nodeStack = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack,\n        // but stop iterating;\n        this.nodeStack.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move\n        // to the next one\n        this.nodeStack.push(node);\n\n        if (this.isReverse) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    assert(this.nodeStack.length > 0, 'getNext() called on iterator when hasNext() is false.');\n    var node = this.nodeStack.pop();\n    var result = {\n      key: node.key,\n      value: node.value\n    };\n\n    if (this.isReverse) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack[this.nodeStack.length - 1];\n    return {\n      key: node.key,\n      value: node.value\n    };\n  };\n\n  return SortedMapIterator;\n}(); // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : LLRBNode.EMPTY;\n    this.right = right != null ? right : LLRBNode.EMPTY;\n    this.size = this.left.size + 1 + this.right.size;\n  } // Returns a copy of the current node, optionally replacing pieces of it.\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  }; // Traverses the tree in key order and calls the specified action function\n  // for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || action(this.key, this.value) || this.right.inorderTraversal(action);\n  }; // Traverses the tree in reverse key order and calls the specified action\n  // function for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  }; // Returns the minimum node in the tree.\n\n\n  LLRBNode.prototype.min = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min();\n    }\n  }; // Returns the maximum key in the tree.\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min().key;\n  }; // Returns the maximum key in the tree.\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }; // Returns new tree, with the key/value added.\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var n = this;\n    var cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp();\n  };\n\n  LLRBNode.prototype.removeMin = function () {\n    if (this.left.isEmpty()) {\n      return LLRBNode.EMPTY;\n    }\n\n    var n = this;\n\n    if (!n.left.isRed() && !n.left.left.isRed()) {\n      n = n.moveRedLeft();\n    }\n\n    n = n.copy(null, null, null, n.left.removeMin(), null);\n    return n.fixUp();\n  }; // Returns new tree, with the specified item removed.\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var smallest;\n    var n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed() && !n.left.left.isRed()) {\n        n = n.moveRedLeft();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed()) {\n        n = n.rotateRight();\n      }\n\n      if (!n.right.isEmpty() && !n.right.isRed() && !n.right.left.isRed()) {\n        n = n.moveRedRight();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return LLRBNode.EMPTY;\n        } else {\n          smallest = n.right.min();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp();\n  };\n\n  LLRBNode.prototype.isRed = function () {\n    return this.color;\n  }; // Returns new tree after performing any needed rotations.\n\n\n  LLRBNode.prototype.fixUp = function () {\n    var n = this;\n\n    if (n.right.isRed() && !n.left.isRed()) {\n      n = n.rotateLeft();\n    }\n\n    if (n.left.isRed() && n.left.left.isRed()) {\n      n = n.rotateRight();\n    }\n\n    if (n.left.isRed() && n.right.isRed()) {\n      n = n.colorFlip();\n    }\n\n    return n;\n  };\n\n  LLRBNode.prototype.moveRedLeft = function () {\n    var n = this.colorFlip();\n\n    if (n.right.left.isRed()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight());\n      n = n.rotateLeft();\n      n = n.colorFlip();\n    }\n\n    return n;\n  };\n\n  LLRBNode.prototype.moveRedRight = function () {\n    var n = this.colorFlip();\n\n    if (n.left.left.isRed()) {\n      n = n.rotateRight();\n      n = n.colorFlip();\n    }\n\n    return n;\n  };\n\n  LLRBNode.prototype.rotateLeft = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n\n  LLRBNode.prototype.rotateRight = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n\n  LLRBNode.prototype.colorFlip = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }; // For testing.\n\n\n  LLRBNode.prototype.checkMaxDepth = function () {\n    var blackDepth = this.check();\n\n    if (Math.pow(2.0, blackDepth) <= this.size + 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }; // In a balanced RB tree, the black-depth (number of black nodes) from root to\n  // leaves is equal on both sides.  This function verifies that or asserts.\n\n\n  LLRBNode.prototype.check = function () {\n    if (this.isRed() && this.left.isRed()) {\n      throw fail('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed()) {\n      throw fail('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    var blackDepth = this.left.check();\n\n    if (blackDepth !== this.right.check()) {\n      throw fail('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed() ? 0 : 1);\n    }\n  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any, Empty node is shared between all LLRB trees.\n\n\n  LLRBNode.EMPTY = null;\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}(); // end LLRBNode\n// Represents an empty node (a leaf node in the Red-Black Tree).\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {\n    this.size = 0;\n  }\n\n  Object.defineProperty(LLRBEmptyNode.prototype, \"key\", {\n    get: function get() {\n      throw fail('LLRBEmptyNode has no key.');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LLRBEmptyNode.prototype, \"value\", {\n    get: function get() {\n      throw fail('LLRBEmptyNode has no value.');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LLRBEmptyNode.prototype, \"color\", {\n    get: function get() {\n      throw fail('LLRBEmptyNode has no color.');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LLRBEmptyNode.prototype, \"left\", {\n    get: function get() {\n      throw fail('LLRBEmptyNode has no left child.');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LLRBEmptyNode.prototype, \"right\", {\n    get: function get() {\n      throw fail('LLRBEmptyNode has no right child.');\n    },\n    enumerable: true,\n    configurable: true\n  }); // Returns a copy of the current node.\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  }; // Returns a copy of the tree, with the specified key/value added.\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value);\n  }; // Returns a copy of the tree, with the specified key removed.\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.isRed = function () {\n    return false;\n  }; // For testing.\n\n\n  LLRBEmptyNode.prototype.checkMaxDepth = function () {\n    return true;\n  };\n\n  LLRBEmptyNode.prototype.check = function () {\n    return 0;\n  };\n\n  return LLRBEmptyNode;\n}(); // end LLRBEmptyNode\n\n\nLLRBNode.EMPTY = new LLRBEmptyNode();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * SortedSet is an immutable (copy-on-write) collection that holds elements\r\n * in order specified by the provided comparator.\r\n *\r\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\r\n * be equal!\r\n */\n\nvar SortedSet =\n/** @class */\nfunction () {\n  function SortedSet(comparator) {\n    this.comparator = comparator;\n    this.data = new SortedMap(this.comparator);\n  }\n  /**\r\n   * Creates a SortedSet from the keys of the map.\r\n   * This is currently implemented as an O(n) copy.\r\n   */\n\n\n  SortedSet.fromMapKeys = function (map) {\n    var keys = new SortedSet(map.comparator);\n    map.forEach(function (key) {\n      keys = keys.add(key);\n    });\n    return keys;\n  };\n\n  SortedSet.prototype.has = function (elem) {\n    return this.data.get(elem) !== null;\n  };\n\n  SortedSet.prototype.first = function () {\n    return this.data.minKey();\n  };\n\n  SortedSet.prototype.last = function () {\n    return this.data.maxKey();\n  };\n\n  Object.defineProperty(SortedSet.prototype, \"size\", {\n    get: function get() {\n      return this.data.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SortedSet.prototype.indexOf = function (elem) {\n    return this.data.indexOf(elem);\n  };\n  /** Iterates elements in order defined by \"comparator\" */\n\n\n  SortedSet.prototype.forEach = function (cb) {\n    this.data.inorderTraversal(function (k, v) {\n      cb(k);\n      return false;\n    });\n  };\n  /** Iterates over `elem`s such that: range[0] <= elem < range[1]. */\n\n\n  SortedSet.prototype.forEachInRange = function (range, cb) {\n    var iter = this.data.getIteratorFrom(range[0]);\n\n    while (iter.hasNext()) {\n      var elem = iter.getNext();\n\n      if (this.comparator(elem.key, range[1]) >= 0) {\n        return;\n      }\n\n      cb(elem.key);\n    }\n  };\n  /**\r\n   * Iterates over `elem`s such that: start <= elem until false is returned.\r\n   */\n\n\n  SortedSet.prototype.forEachWhile = function (cb, start) {\n    var iter;\n\n    if (start !== undefined) {\n      iter = this.data.getIteratorFrom(start);\n    } else {\n      iter = this.data.getIterator();\n    }\n\n    while (iter.hasNext()) {\n      var elem = iter.getNext();\n      var result = cb(elem.key);\n\n      if (!result) {\n        return;\n      }\n    }\n  };\n  /** Finds the least element greater than or equal to `elem`. */\n\n\n  SortedSet.prototype.firstAfterOrEqual = function (elem) {\n    var iter = this.data.getIteratorFrom(elem);\n    return iter.hasNext() ? iter.getNext().key : null;\n  };\n\n  SortedSet.prototype.getIterator = function () {\n    return new SortedSetIterator(this.data.getIterator());\n  };\n\n  SortedSet.prototype.getIteratorFrom = function (key) {\n    return new SortedSetIterator(this.data.getIteratorFrom(key));\n  };\n  /** Inserts or updates an element */\n\n\n  SortedSet.prototype.add = function (elem) {\n    return this.copy(this.data.remove(elem).insert(elem, true));\n  };\n  /** Deletes an element */\n\n\n  SortedSet.prototype.delete = function (elem) {\n    if (!this.has(elem)) {\n      return this;\n    }\n\n    return this.copy(this.data.remove(elem));\n  };\n\n  SortedSet.prototype.isEmpty = function () {\n    return this.data.isEmpty();\n  };\n\n  SortedSet.prototype.unionWith = function (other) {\n    var result = this;\n    other.forEach(function (elem) {\n      result = result.add(elem);\n    });\n    return result;\n  };\n\n  SortedSet.prototype.isEqual = function (other) {\n    if (!(other instanceof SortedSet)) {\n      return false;\n    }\n\n    if (this.size !== other.size) {\n      return false;\n    }\n\n    var thisIt = this.data.getIterator();\n    var otherIt = other.data.getIterator();\n\n    while (thisIt.hasNext()) {\n      var thisElem = thisIt.getNext().key;\n      var otherElem = otherIt.getNext().key;\n\n      if (this.comparator(thisElem, otherElem) !== 0) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  SortedSet.prototype.toArray = function () {\n    var res = [];\n    this.forEach(function (targetId) {\n      res.push(targetId);\n    });\n    return res;\n  };\n\n  SortedSet.prototype.toString = function () {\n    var result = [];\n    this.forEach(function (elem) {\n      return result.push(elem);\n    });\n    return 'SortedSet(' + result.toString() + ')';\n  };\n\n  SortedSet.prototype.copy = function (data) {\n    var result = new SortedSet(this.comparator);\n    result.data = data;\n    return result;\n  };\n\n  return SortedSet;\n}();\n\nvar SortedSetIterator =\n/** @class */\nfunction () {\n  function SortedSetIterator(iter) {\n    this.iter = iter;\n  }\n\n  SortedSetIterator.prototype.getNext = function () {\n    return this.iter.getNext().key;\n  };\n\n  SortedSetIterator.prototype.hasNext = function () {\n    return this.iter.hasNext();\n  };\n\n  return SortedSetIterator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar EMPTY_MAYBE_DOCUMENT_MAP = new SortedMap(DocumentKey.comparator);\n\nfunction maybeDocumentMap() {\n  return EMPTY_MAYBE_DOCUMENT_MAP;\n}\n\nfunction nullableMaybeDocumentMap() {\n  return maybeDocumentMap();\n}\n\nvar EMPTY_DOCUMENT_MAP = new SortedMap(DocumentKey.comparator);\n\nfunction documentMap() {\n  return EMPTY_DOCUMENT_MAP;\n}\n\nvar EMPTY_DOCUMENT_VERSION_MAP = new SortedMap(DocumentKey.comparator);\n\nfunction documentVersionMap() {\n  return EMPTY_DOCUMENT_VERSION_MAP;\n}\n\nvar EMPTY_DOCUMENT_KEY_SET = new SortedSet(DocumentKey.comparator);\n\nfunction documentKeySet() {\n  var keys = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    keys[_i] = arguments[_i];\n  }\n\n  var set = EMPTY_DOCUMENT_KEY_SET;\n\n  for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\n    var key = keys_1[_a];\n    set = set.add(key);\n  }\n\n  return set;\n}\n\nvar EMPTY_TARGET_ID_SET = new SortedSet(primitiveComparator);\n\nfunction targetIdSet() {\n  return EMPTY_TARGET_ID_SET;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar BATCHID_UNKNOWN = -1;\n/**\r\n * A batch of mutations that will be sent as one unit to the backend.\r\n */\n\nvar MutationBatch =\n/** @class */\nfunction () {\n  /**\r\n   * @param batchId The unique ID of this mutation batch.\r\n   * @param localWriteTime The original write time of this mutation.\r\n   * @param baseMutations Mutations that are used to populate the base\r\n   * values when this mutation is applied locally. This can be used to locally\r\n   * overwrite values that are persisted in the remote document cache. Base\r\n   * mutations are never sent to the backend.\r\n   * @param mutations The user-provided mutations in this mutation batch.\r\n   * User-provided mutations are applied both locally and remotely on the\r\n   * backend.\r\n   */\n  function MutationBatch(batchId, localWriteTime, baseMutations, mutations) {\n    this.batchId = batchId;\n    this.localWriteTime = localWriteTime;\n    this.baseMutations = baseMutations;\n    this.mutations = mutations;\n    assert(mutations.length > 0, 'Cannot create an empty mutation batch');\n  }\n  /**\r\n   * Applies all the mutations in this MutationBatch to the specified document\r\n   * to create a new remote document\r\n   *\r\n   * @param docKey The key of the document to apply mutations to.\r\n   * @param maybeDoc The document to apply mutations to.\r\n   * @param batchResult The result of applying the MutationBatch to the\r\n   * backend.\r\n   */\n\n\n  MutationBatch.prototype.applyToRemoteDocument = function (docKey, maybeDoc, batchResult) {\n    if (maybeDoc) {\n      assert(maybeDoc.key.isEqual(docKey), \"applyToRemoteDocument: key \" + docKey + \" should match maybeDoc key\\n        \" + maybeDoc.key);\n    }\n\n    var mutationResults = batchResult.mutationResults;\n    assert(mutationResults.length === this.mutations.length, \"Mismatch between mutations length\\n      (\" + this.mutations.length + \") and mutation results length\\n      (\" + mutationResults.length + \").\");\n\n    for (var i = 0; i < this.mutations.length; i++) {\n      var mutation = this.mutations[i];\n\n      if (mutation.key.isEqual(docKey)) {\n        var mutationResult = mutationResults[i];\n        maybeDoc = mutation.applyToRemoteDocument(maybeDoc, mutationResult);\n      }\n    }\n\n    return maybeDoc;\n  };\n  /**\r\n   * Computes the local view of a document given all the mutations in this\r\n   * batch.\r\n   *\r\n   * @param docKey The key of the document to apply mutations to.\r\n   * @param maybeDoc The document to apply mutations to.\r\n   */\n\n\n  MutationBatch.prototype.applyToLocalView = function (docKey, maybeDoc) {\n    if (maybeDoc) {\n      assert(maybeDoc.key.isEqual(docKey), \"applyToLocalDocument: key \" + docKey + \" should match maybeDoc key\\n        \" + maybeDoc.key);\n    } // First, apply the base state. This allows us to apply non-idempotent\n    // transform against a consistent set of values.\n\n\n    for (var _i = 0, _a = this.baseMutations; _i < _a.length; _i++) {\n      var mutation = _a[_i];\n\n      if (mutation.key.isEqual(docKey)) {\n        maybeDoc = mutation.applyToLocalView(maybeDoc, maybeDoc, this.localWriteTime);\n      }\n    }\n\n    var baseDoc = maybeDoc; // Second, apply all user-provided mutations.\n\n    for (var _b = 0, _c = this.mutations; _b < _c.length; _b++) {\n      var mutation = _c[_b];\n\n      if (mutation.key.isEqual(docKey)) {\n        maybeDoc = mutation.applyToLocalView(maybeDoc, baseDoc, this.localWriteTime);\n      }\n    }\n\n    return maybeDoc;\n  };\n  /**\r\n   * Computes the local view for all provided documents given the mutations in\r\n   * this batch.\r\n   */\n\n\n  MutationBatch.prototype.applyToLocalDocumentSet = function (maybeDocs) {\n    var _this = this; // TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations\n    // directly (as done in `applyToLocalView()`), we can reduce the complexity\n    // to O(n).\n\n\n    var mutatedDocuments = maybeDocs;\n    this.mutations.forEach(function (m) {\n      var mutatedDocument = _this.applyToLocalView(m.key, maybeDocs.get(m.key));\n\n      if (mutatedDocument) {\n        mutatedDocuments = mutatedDocuments.insert(m.key, mutatedDocument);\n      }\n    });\n    return mutatedDocuments;\n  };\n\n  MutationBatch.prototype.keys = function () {\n    return this.mutations.reduce(function (keys, m) {\n      return keys.add(m.key);\n    }, documentKeySet());\n  };\n\n  MutationBatch.prototype.isEqual = function (other) {\n    return this.batchId === other.batchId && arrayEquals(this.mutations, other.mutations) && arrayEquals(this.baseMutations, other.baseMutations);\n  };\n\n  return MutationBatch;\n}();\n/** The result of applying a mutation batch to the backend. */\n\n\nvar MutationBatchResult =\n/** @class */\nfunction () {\n  function MutationBatchResult(batch, commitVersion, mutationResults, streamToken,\n  /**\r\n   * A pre-computed mapping from each mutated document to the resulting\r\n   * version.\r\n   */\n  docVersions) {\n    this.batch = batch;\n    this.commitVersion = commitVersion;\n    this.mutationResults = mutationResults;\n    this.streamToken = streamToken;\n    this.docVersions = docVersions;\n  }\n  /**\r\n   * Creates a new MutationBatchResult for the given batch and results. There\r\n   * must be one result for each mutation in the batch. This static factory\r\n   * caches a document=>version mapping (docVersions).\r\n   */\n\n\n  MutationBatchResult.from = function (batch, commitVersion, results, streamToken) {\n    assert(batch.mutations.length === results.length, 'Mutations sent ' + batch.mutations.length + ' must equal results received ' + results.length);\n    var versionMap = documentVersionMap();\n    var mutations = batch.mutations;\n\n    for (var i = 0; i < mutations.length; i++) {\n      versionMap = versionMap.insert(mutations[i].key, results[i].version);\n    }\n\n    return new MutationBatchResult(batch, commitVersion, results, streamToken, versionMap);\n  };\n\n  return MutationBatchResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * PersistencePromise<> is essentially a re-implementation of Promise<> except\r\n * it has a .next() method instead of .then() and .next() and .catch() callbacks\r\n * are executed synchronously when a PersistencePromise resolves rather than\r\n * asynchronously (Promise<> implementations use setImmediate() or similar).\r\n *\r\n * This is necessary to interoperate with IndexedDB which will automatically\r\n * commit transactions if control is returned to the event loop without\r\n * synchronously initiating another operation on the transaction.\r\n *\r\n * NOTE: .then() and .catch() only allow a single consumer, unlike normal\r\n * Promises.\r\n */\n\n\nvar PersistencePromise =\n/** @class */\nfunction () {\n  function PersistencePromise(callback) {\n    var _this = this; // NOTE: next/catchCallback will always point to our own wrapper functions,\n    // not the user's raw next() or catch() callbacks.\n\n\n    this.nextCallback = null;\n    this.catchCallback = null; // When the operation resolves, we'll set result or error and mark isDone.\n\n    this.result = undefined;\n    this.error = undefined;\n    this.isDone = false; // Set to true when .then() or .catch() are called and prevents additional\n    // chaining.\n\n    this.callbackAttached = false;\n    callback(function (value) {\n      _this.isDone = true;\n      _this.result = value;\n\n      if (_this.nextCallback) {\n        // value should be defined unless T is Void, but we can't express\n        // that in the type system.\n        _this.nextCallback(value);\n      }\n    }, function (error) {\n      _this.isDone = true;\n      _this.error = error;\n\n      if (_this.catchCallback) {\n        _this.catchCallback(error);\n      }\n    });\n  }\n\n  PersistencePromise.prototype.catch = function (fn) {\n    return this.next(undefined, fn);\n  };\n\n  PersistencePromise.prototype.next = function (nextFn, catchFn) {\n    var _this = this;\n\n    if (this.callbackAttached) {\n      fail('Called next() or catch() twice for PersistencePromise');\n    }\n\n    this.callbackAttached = true;\n\n    if (this.isDone) {\n      if (!this.error) {\n        return this.wrapSuccess(nextFn, this.result);\n      } else {\n        return this.wrapFailure(catchFn, this.error);\n      }\n    } else {\n      return new PersistencePromise(function (resolve, reject) {\n        _this.nextCallback = function (value) {\n          _this.wrapSuccess(nextFn, value).next(resolve, reject);\n        };\n\n        _this.catchCallback = function (error) {\n          _this.wrapFailure(catchFn, error).next(resolve, reject);\n        };\n      });\n    }\n  };\n\n  PersistencePromise.prototype.toPromise = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this.next(resolve, reject);\n    });\n  };\n\n  PersistencePromise.prototype.wrapUserFunction = function (fn) {\n    try {\n      var result = fn();\n\n      if (result instanceof PersistencePromise) {\n        return result;\n      } else {\n        return PersistencePromise.resolve(result);\n      }\n    } catch (e) {\n      return PersistencePromise.reject(e);\n    }\n  };\n\n  PersistencePromise.prototype.wrapSuccess = function (nextFn, value) {\n    if (nextFn) {\n      return this.wrapUserFunction(function () {\n        return nextFn(value);\n      });\n    } else {\n      // If there's no nextFn, then R must be the same as T\n      return PersistencePromise.resolve(value);\n    }\n  };\n\n  PersistencePromise.prototype.wrapFailure = function (catchFn, error) {\n    if (catchFn) {\n      return this.wrapUserFunction(function () {\n        return catchFn(error);\n      });\n    } else {\n      return PersistencePromise.reject(error);\n    }\n  };\n\n  PersistencePromise.resolve = function (result) {\n    return new PersistencePromise(function (resolve, reject) {\n      resolve(result);\n    });\n  };\n\n  PersistencePromise.reject = function (error) {\n    return new PersistencePromise(function (resolve, reject) {\n      reject(error);\n    });\n  };\n\n  PersistencePromise.waitFor = function ( // eslint-disable-next-line @typescript-eslint/no-explicit-any, Accept all Promise types in waitFor().\n  all) {\n    return new PersistencePromise(function (resolve, reject) {\n      var expectedCount = 0;\n      var resolvedCount = 0;\n      var done = false;\n      all.forEach(function (element) {\n        ++expectedCount;\n        element.next(function () {\n          ++resolvedCount;\n\n          if (done && resolvedCount === expectedCount) {\n            resolve();\n          }\n        }, function (err) {\n          return reject(err);\n        });\n      });\n      done = true;\n\n      if (resolvedCount === expectedCount) {\n        resolve();\n      }\n    });\n  };\n  /**\r\n   * Given an array of predicate functions that asynchronously evaluate to a\r\n   * boolean, implements a short-circuiting `or` between the results. Predicates\r\n   * will be evaluated until one of them returns `true`, then stop. The final\r\n   * result will be whether any of them returned `true`.\r\n   */\n\n\n  PersistencePromise.or = function (predicates) {\n    var p = PersistencePromise.resolve(false);\n\n    var _loop_1 = function _loop_1(predicate) {\n      p = p.next(function (isTrue) {\n        if (isTrue) {\n          return PersistencePromise.resolve(isTrue);\n        } else {\n          return predicate();\n        }\n      });\n    };\n\n    for (var _i = 0, predicates_1 = predicates; _i < predicates_1.length; _i++) {\n      var predicate = predicates_1[_i];\n\n      _loop_1(predicate);\n    }\n\n    return p;\n  };\n\n  PersistencePromise.forEach = function (collection, f) {\n    var _this = this;\n\n    var promises = [];\n    collection.forEach(function (r, s) {\n      promises.push(f.call(_this, r, s));\n    });\n    return this.waitFor(promises);\n  };\n\n  return PersistencePromise;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** A mutation queue for a specific user, backed by IndexedDB. */\n\n\nvar IndexedDbMutationQueue =\n/** @class */\nfunction () {\n  function IndexedDbMutationQueue(\n  /**\r\n   * The normalized userId (e.g. null UID => \"\" userId) used to store /\r\n   * retrieve mutations.\r\n   */\n  userId, serializer, indexManager, referenceDelegate) {\n    this.userId = userId;\n    this.serializer = serializer;\n    this.indexManager = indexManager;\n    this.referenceDelegate = referenceDelegate;\n    /**\r\n     * Caches the document keys for pending mutation batches. If the mutation\r\n     * has been removed from IndexedDb, the cached value may continue to\r\n     * be used to retrieve the batch's document keys. To remove a cached value\r\n     * locally, `removeCachedMutationKeys()` should be invoked either directly\r\n     * or through `removeMutationBatches()`.\r\n     *\r\n     * With multi-tab, when the primary client acknowledges or rejects a mutation,\r\n     * this cache is used by secondary clients to invalidate the local\r\n     * view of the documents that were previously affected by the mutation.\r\n     */\n    // PORTING NOTE: Multi-tab only.\n\n    this.documentKeysByBatchId = {};\n  }\n  /**\r\n   * Creates a new mutation queue for the given user.\r\n   * @param user The user for which to create a mutation queue.\r\n   * @param serializer The serializer to use when persisting to IndexedDb.\r\n   */\n\n\n  IndexedDbMutationQueue.forUser = function (user, serializer, indexManager, referenceDelegate) {\n    // TODO(mcg): Figure out what constraints there are on userIDs\n    // In particular, are there any reserved characters? are empty ids allowed?\n    // For the moment store these together in the same mutations table assuming\n    // that empty userIDs aren't allowed.\n    assert(user.uid !== '', 'UserID must not be an empty string.');\n    var userId = user.isAuthenticated() ? user.uid : '';\n    return new IndexedDbMutationQueue(userId, serializer, indexManager, referenceDelegate);\n  };\n\n  IndexedDbMutationQueue.prototype.checkEmpty = function (transaction) {\n    var empty = true;\n    var range = IDBKeyRange.bound([this.userId, Number.NEGATIVE_INFINITY], [this.userId, Number.POSITIVE_INFINITY]);\n    return mutationsStore(transaction).iterate({\n      index: DbMutationBatch.userMutationsIndex,\n      range: range\n    }, function (key, value, control) {\n      empty = false;\n      control.done();\n    }).next(function () {\n      return empty;\n    });\n  };\n\n  IndexedDbMutationQueue.prototype.acknowledgeBatch = function (transaction, batch, streamToken) {\n    return this.getMutationQueueMetadata(transaction).next(function (metadata) {\n      metadata.lastStreamToken = convertStreamToken(streamToken);\n      return mutationQueuesStore(transaction).put(metadata);\n    });\n  };\n\n  IndexedDbMutationQueue.prototype.getLastStreamToken = function (transaction) {\n    return this.getMutationQueueMetadata(transaction).next(function (metadata) {\n      return metadata.lastStreamToken;\n    });\n  };\n\n  IndexedDbMutationQueue.prototype.setLastStreamToken = function (transaction, streamToken) {\n    return this.getMutationQueueMetadata(transaction).next(function (metadata) {\n      metadata.lastStreamToken = convertStreamToken(streamToken);\n      return mutationQueuesStore(transaction).put(metadata);\n    });\n  };\n\n  IndexedDbMutationQueue.prototype.addMutationBatch = function (transaction, localWriteTime, baseMutations, mutations) {\n    var _this = this;\n\n    var documentStore = documentMutationsStore(transaction);\n    var mutationStore = mutationsStore(transaction); // The IndexedDb implementation in Chrome (and Firefox) does not handle\n    // compound indices that include auto-generated keys correctly. To ensure\n    // that the index entry is added correctly in all browsers, we perform two\n    // writes: The first write is used to retrieve the next auto-generated Batch\n    // ID, and the second write populates the index and stores the actual\n    // mutation batch.\n    // See: https://bugs.chromium.org/p/chromium/issues/detail?id=701972\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, We write an empty object to obtain key\n\n    return mutationStore.add({}).next(function (batchId) {\n      assert(typeof batchId === 'number', 'Auto-generated key is not a number');\n      var batch = new MutationBatch(batchId, localWriteTime, baseMutations, mutations);\n\n      var dbBatch = _this.serializer.toDbMutationBatch(_this.userId, batch);\n\n      _this.documentKeysByBatchId[batchId] = batch.keys();\n      var promises = [];\n\n      for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {\n        var mutation = mutations_1[_i];\n        var indexKey = DbDocumentMutation.key(_this.userId, mutation.key.path, batchId);\n        promises.push(mutationStore.put(dbBatch));\n        promises.push(documentStore.put(indexKey, DbDocumentMutation.PLACEHOLDER));\n        promises.push(_this.indexManager.addToCollectionParentIndex(transaction, mutation.key.path.popLast()));\n      }\n\n      return PersistencePromise.waitFor(promises).next(function () {\n        return batch;\n      });\n    });\n  };\n\n  IndexedDbMutationQueue.prototype.lookupMutationBatch = function (transaction, batchId) {\n    var _this = this;\n\n    return mutationsStore(transaction).get(batchId).next(function (dbBatch) {\n      if (dbBatch) {\n        assert(dbBatch.userId === _this.userId, \"Unexpected user '\" + dbBatch.userId + \"' for mutation batch \" + batchId);\n        return _this.serializer.fromDbMutationBatch(dbBatch);\n      }\n\n      return null;\n    });\n  };\n\n  IndexedDbMutationQueue.prototype.lookupMutationKeys = function (transaction, batchId) {\n    var _this = this;\n\n    if (this.documentKeysByBatchId[batchId]) {\n      return PersistencePromise.resolve(this.documentKeysByBatchId[batchId]);\n    } else {\n      return this.lookupMutationBatch(transaction, batchId).next(function (batch) {\n        if (batch) {\n          var keys = batch.keys();\n          _this.documentKeysByBatchId[batchId] = keys;\n          return keys;\n        } else {\n          return null;\n        }\n      });\n    }\n  };\n\n  IndexedDbMutationQueue.prototype.getNextMutationBatchAfterBatchId = function (transaction, batchId) {\n    var _this = this;\n\n    var nextBatchId = batchId + 1;\n    var range = IDBKeyRange.lowerBound([this.userId, nextBatchId]);\n    var foundBatch = null;\n    return mutationsStore(transaction).iterate({\n      index: DbMutationBatch.userMutationsIndex,\n      range: range\n    }, function (key, dbBatch, control) {\n      if (dbBatch.userId === _this.userId) {\n        assert(dbBatch.batchId >= nextBatchId, 'Should have found mutation after ' + nextBatchId);\n        foundBatch = _this.serializer.fromDbMutationBatch(dbBatch);\n      }\n\n      control.done();\n    }).next(function () {\n      return foundBatch;\n    });\n  };\n\n  IndexedDbMutationQueue.prototype.getHighestUnacknowledgedBatchId = function (transaction) {\n    var range = IDBKeyRange.upperBound([this.userId, Number.POSITIVE_INFINITY]);\n    var batchId = BATCHID_UNKNOWN;\n    return mutationsStore(transaction).iterate({\n      index: DbMutationBatch.userMutationsIndex,\n      range: range,\n      reverse: true\n    }, function (key, dbBatch, control) {\n      batchId = dbBatch.batchId;\n      control.done();\n    }).next(function () {\n      return batchId;\n    });\n  };\n\n  IndexedDbMutationQueue.prototype.getAllMutationBatches = function (transaction) {\n    var _this = this;\n\n    var range = IDBKeyRange.bound([this.userId, BATCHID_UNKNOWN], [this.userId, Number.POSITIVE_INFINITY]);\n    return mutationsStore(transaction).loadAll(DbMutationBatch.userMutationsIndex, range).next(function (dbBatches) {\n      return dbBatches.map(function (dbBatch) {\n        return _this.serializer.fromDbMutationBatch(dbBatch);\n      });\n    });\n  };\n\n  IndexedDbMutationQueue.prototype.getAllMutationBatchesAffectingDocumentKey = function (transaction, documentKey) {\n    var _this = this; // Scan the document-mutation index starting with a prefix starting with\n    // the given documentKey.\n\n\n    var indexPrefix = DbDocumentMutation.prefixForPath(this.userId, documentKey.path);\n    var indexStart = IDBKeyRange.lowerBound(indexPrefix);\n    var results = [];\n    return documentMutationsStore(transaction).iterate({\n      range: indexStart\n    }, function (indexKey, _, control) {\n      var userID = indexKey[0],\n          encodedPath = indexKey[1],\n          batchId = indexKey[2]; // Only consider rows matching exactly the specific key of\n      // interest. Note that because we order by path first, and we\n      // order terminators before path separators, we'll encounter all\n      // the index rows for documentKey contiguously. In particular, all\n      // the rows for documentKey will occur before any rows for\n      // documents nested in a subcollection beneath documentKey so we\n      // can stop as soon as we hit any such row.\n\n      var path = decode(encodedPath);\n\n      if (userID !== _this.userId || !documentKey.path.isEqual(path)) {\n        control.done();\n        return;\n      } // Look up the mutation batch in the store.\n\n\n      return mutationsStore(transaction).get(batchId).next(function (mutation) {\n        if (!mutation) {\n          throw fail('Dangling document-mutation reference found: ' + indexKey + ' which points to ' + batchId);\n        }\n\n        assert(mutation.userId === _this.userId, \"Unexpected user '\" + mutation.userId + \"' for mutation batch \" + batchId);\n        results.push(_this.serializer.fromDbMutationBatch(mutation));\n      });\n    }).next(function () {\n      return results;\n    });\n  };\n\n  IndexedDbMutationQueue.prototype.getAllMutationBatchesAffectingDocumentKeys = function (transaction, documentKeys) {\n    var _this = this;\n\n    var uniqueBatchIDs = new SortedSet(primitiveComparator);\n    var promises = [];\n    documentKeys.forEach(function (documentKey) {\n      var indexStart = DbDocumentMutation.prefixForPath(_this.userId, documentKey.path);\n      var range = IDBKeyRange.lowerBound(indexStart);\n      var promise = documentMutationsStore(transaction).iterate({\n        range: range\n      }, function (indexKey, _, control) {\n        var userID = indexKey[0],\n            encodedPath = indexKey[1],\n            batchID = indexKey[2]; // Only consider rows matching exactly the specific key of\n        // interest. Note that because we order by path first, and we\n        // order terminators before path separators, we'll encounter all\n        // the index rows for documentKey contiguously. In particular, all\n        // the rows for documentKey will occur before any rows for\n        // documents nested in a subcollection beneath documentKey so we\n        // can stop as soon as we hit any such row.\n\n        var path = decode(encodedPath);\n\n        if (userID !== _this.userId || !documentKey.path.isEqual(path)) {\n          control.done();\n          return;\n        }\n\n        uniqueBatchIDs = uniqueBatchIDs.add(batchID);\n      });\n      promises.push(promise);\n    });\n    return PersistencePromise.waitFor(promises).next(function () {\n      return _this.lookupMutationBatches(transaction, uniqueBatchIDs);\n    });\n  };\n\n  IndexedDbMutationQueue.prototype.getAllMutationBatchesAffectingQuery = function (transaction, query) {\n    var _this = this;\n\n    assert(!query.isDocumentQuery(), \"Document queries shouldn't go down this path\");\n    assert(!query.isCollectionGroupQuery(), 'CollectionGroup queries should be handled in LocalDocumentsView');\n    var queryPath = query.path;\n    var immediateChildrenLength = queryPath.length + 1; // TODO(mcg): Actually implement a single-collection query\n    //\n    // This is actually executing an ancestor query, traversing the whole\n    // subtree below the collection which can be horrifically inefficient for\n    // some structures. The right way to solve this is to implement the full\n    // value index, but that's not in the cards in the near future so this is\n    // the best we can do for the moment.\n    //\n    // Since we don't yet index the actual properties in the mutations, our\n    // current approach is to just return all mutation batches that affect\n    // documents in the collection being queried.\n\n    var indexPrefix = DbDocumentMutation.prefixForPath(this.userId, queryPath);\n    var indexStart = IDBKeyRange.lowerBound(indexPrefix); // Collect up unique batchIDs encountered during a scan of the index. Use a\n    // SortedSet to accumulate batch IDs so they can be traversed in order in a\n    // scan of the main table.\n\n    var uniqueBatchIDs = new SortedSet(primitiveComparator);\n    return documentMutationsStore(transaction).iterate({\n      range: indexStart\n    }, function (indexKey, _, control) {\n      var userID = indexKey[0],\n          encodedPath = indexKey[1],\n          batchID = indexKey[2];\n      var path = decode(encodedPath);\n\n      if (userID !== _this.userId || !queryPath.isPrefixOf(path)) {\n        control.done();\n        return;\n      } // Rows with document keys more than one segment longer than the\n      // query path can't be matches. For example, a query on 'rooms'\n      // can't match the document /rooms/abc/messages/xyx.\n      // TODO(mcg): we'll need a different scanner when we implement\n      // ancestor queries.\n\n\n      if (path.length !== immediateChildrenLength) {\n        return;\n      }\n\n      uniqueBatchIDs = uniqueBatchIDs.add(batchID);\n    }).next(function () {\n      return _this.lookupMutationBatches(transaction, uniqueBatchIDs);\n    });\n  };\n\n  IndexedDbMutationQueue.prototype.lookupMutationBatches = function (transaction, batchIDs) {\n    var _this = this;\n\n    var results = [];\n    var promises = []; // TODO(rockwood): Implement this using iterate.\n\n    batchIDs.forEach(function (batchId) {\n      promises.push(mutationsStore(transaction).get(batchId).next(function (mutation) {\n        if (mutation === null) {\n          throw fail('Dangling document-mutation reference found, ' + 'which points to ' + batchId);\n        }\n\n        assert(mutation.userId === _this.userId, \"Unexpected user '\" + mutation.userId + \"' for mutation batch \" + batchId);\n        results.push(_this.serializer.fromDbMutationBatch(mutation));\n      }));\n    });\n    return PersistencePromise.waitFor(promises).next(function () {\n      return results;\n    });\n  };\n\n  IndexedDbMutationQueue.prototype.removeMutationBatch = function (transaction, batch) {\n    var _this = this;\n\n    return removeMutationBatch(transaction.simpleDbTransaction, this.userId, batch).next(function (removedDocuments) {\n      _this.removeCachedMutationKeys(batch.batchId);\n\n      return PersistencePromise.forEach(removedDocuments, function (key) {\n        return _this.referenceDelegate.removeMutationReference(transaction, key);\n      });\n    });\n  };\n\n  IndexedDbMutationQueue.prototype.removeCachedMutationKeys = function (batchId) {\n    delete this.documentKeysByBatchId[batchId];\n  };\n\n  IndexedDbMutationQueue.prototype.performConsistencyCheck = function (txn) {\n    var _this = this;\n\n    return this.checkEmpty(txn).next(function (empty) {\n      if (!empty) {\n        return PersistencePromise.resolve();\n      } // Verify that there are no entries in the documentMutations index if\n      // the queue is empty.\n\n\n      var startRange = IDBKeyRange.lowerBound(DbDocumentMutation.prefixForUser(_this.userId));\n      var danglingMutationReferences = [];\n      return documentMutationsStore(txn).iterate({\n        range: startRange\n      }, function (key, _, control) {\n        var userID = key[0];\n\n        if (userID !== _this.userId) {\n          control.done();\n          return;\n        } else {\n          var path = decode(key[1]);\n          danglingMutationReferences.push(path);\n        }\n      }).next(function () {\n        assert(danglingMutationReferences.length === 0, 'Document leak -- detected dangling mutation references when queue is empty. ' + 'Dangling keys: ' + danglingMutationReferences.map(function (p) {\n          return p.canonicalString();\n        }));\n      });\n    });\n  };\n\n  IndexedDbMutationQueue.prototype.containsKey = function (txn, key) {\n    return mutationQueueContainsKey(txn, this.userId, key);\n  }; // PORTING NOTE: Multi-tab only (state is held in memory in other clients).\n\n  /** Returns the mutation queue's metadata from IndexedDb. */\n\n\n  IndexedDbMutationQueue.prototype.getMutationQueueMetadata = function (transaction) {\n    var _this = this;\n\n    return mutationQueuesStore(transaction).get(this.userId).next(function (metadata) {\n      return metadata || new DbMutationQueue(_this.userId, BATCHID_UNKNOWN,\n      /*lastStreamToken=*/\n      '');\n    });\n  };\n\n  return IndexedDbMutationQueue;\n}();\n/**\r\n * @return true if the mutation queue for the given user contains a pending\r\n *         mutation for the given key.\r\n */\n\n\nfunction mutationQueueContainsKey(txn, userId, key) {\n  var indexKey = DbDocumentMutation.prefixForPath(userId, key.path);\n  var encodedPath = indexKey[1];\n  var startRange = IDBKeyRange.lowerBound(indexKey);\n  var containsKey = false;\n  return documentMutationsStore(txn).iterate({\n    range: startRange,\n    keysOnly: true\n  }, function (key, value, control) {\n    var userID = key[0],\n        keyPath = key[1],\n\n    /*batchID*/\n    _ = key[2];\n\n    if (userID === userId && keyPath === encodedPath) {\n      containsKey = true;\n    }\n\n    control.done();\n  }).next(function () {\n    return containsKey;\n  });\n}\n/** Returns true if any mutation queue contains the given document. */\n\n\nfunction mutationQueuesContainKey(txn, docKey) {\n  var found = false;\n  return mutationQueuesStore(txn).iterateSerial(function (userId) {\n    return mutationQueueContainsKey(txn, userId, docKey).next(function (containsKey) {\n      if (containsKey) {\n        found = true;\n      }\n\n      return PersistencePromise.resolve(!containsKey);\n    });\n  }).next(function () {\n    return found;\n  });\n}\n/**\r\n * Delete a mutation batch and the associated document mutations.\r\n * @return A PersistencePromise of the document mutations that were removed.\r\n */\n\n\nfunction removeMutationBatch(txn, userId, batch) {\n  var mutationStore = txn.store(DbMutationBatch.store);\n  var indexTxn = txn.store(DbDocumentMutation.store);\n  var promises = [];\n  var range = IDBKeyRange.only(batch.batchId);\n  var numDeleted = 0;\n  var removePromise = mutationStore.iterate({\n    range: range\n  }, function (key, value, control) {\n    numDeleted++;\n    return control.delete();\n  });\n  promises.push(removePromise.next(function () {\n    assert(numDeleted === 1, 'Dangling document-mutation reference found: Missing batch ' + batch.batchId);\n  }));\n  var removedDocuments = [];\n\n  for (var _i = 0, _a = batch.mutations; _i < _a.length; _i++) {\n    var mutation = _a[_i];\n    var indexKey = DbDocumentMutation.key(userId, mutation.key.path, batch.batchId);\n    promises.push(indexTxn.delete(indexKey));\n    removedDocuments.push(mutation.key);\n  }\n\n  return PersistencePromise.waitFor(promises).next(function () {\n    return removedDocuments;\n  });\n}\n\nfunction convertStreamToken(token) {\n  if (token instanceof Uint8Array) {\n    // TODO(b/78771403): Convert tokens to strings during deserialization\n    assert(process.env.USE_MOCK_PERSISTENCE === 'YES', 'Persisting non-string stream tokens is only supported with mock persistence.');\n    return token.toString();\n  } else {\n    return token;\n  }\n}\n/**\r\n * Helper to get a typed SimpleDbStore for the mutations object store.\r\n */\n\n\nfunction mutationsStore(txn) {\n  return IndexedDbPersistence.getStore(txn, DbMutationBatch.store);\n}\n/**\r\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\r\n */\n\n\nfunction documentMutationsStore(txn) {\n  return IndexedDbPersistence.getStore(txn, DbDocumentMutation.store);\n}\n/**\r\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\r\n */\n\n\nfunction mutationQueuesStore(txn) {\n  return IndexedDbPersistence.getStore(txn, DbMutationQueue.store);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RESERVED_BITS = 1;\nvar GeneratorIds;\n\n(function (GeneratorIds) {\n  GeneratorIds[GeneratorIds[\"QueryCache\"] = 0] = \"QueryCache\";\n  GeneratorIds[GeneratorIds[\"SyncEngine\"] = 1] = \"SyncEngine\"; // The target IDs for limbo detection are odd (end in 1).\n})(GeneratorIds || (GeneratorIds = {}));\n/**\r\n * Generates monotonically increasing target IDs for sending targets to the\r\n * watch stream.\r\n *\r\n * The client constructs two generators, one for the query cache (via\r\n * forQueryCache()), and one for limbo documents (via forSyncEngine()). These\r\n * two generators produce non-overlapping IDs (by using even and odd IDs\r\n * respectively).\r\n *\r\n * By separating the target ID space, the query cache can generate target IDs\r\n * that persist across client restarts, while sync engine can independently\r\n * generate in-memory target IDs that are transient and can be reused after a\r\n * restart.\r\n */\n// TODO(mrschmidt): Explore removing this class in favor of generating these IDs\n// directly in SyncEngine and LocalStore.\n\n\nvar TargetIdGenerator =\n/** @class */\nfunction () {\n  /**\r\n   * Instantiates a new TargetIdGenerator. If a seed is provided, the generator\r\n   * will use the seed value as the next target ID.\r\n   */\n  function TargetIdGenerator(generatorId, seed) {\n    this.generatorId = generatorId;\n    assert((generatorId & RESERVED_BITS) === generatorId, \"Generator ID \" + generatorId + \" contains more than \" + RESERVED_BITS + \" reserved bits\");\n    this.seek(seed !== undefined ? seed : this.generatorId);\n  }\n\n  TargetIdGenerator.prototype.next = function () {\n    var nextId = this.nextId;\n    this.nextId += 1 << RESERVED_BITS;\n    return nextId;\n  };\n  /**\r\n   * Returns the ID that follows the given ID. Subsequent calls to `next()`\r\n   * use the newly returned target ID as their base.\r\n   */\n  // PORTING NOTE: Multi-tab only.\n\n\n  TargetIdGenerator.prototype.after = function (targetId) {\n    this.seek(targetId + (1 << RESERVED_BITS));\n    return this.next();\n  };\n\n  TargetIdGenerator.prototype.seek = function (targetId) {\n    assert((targetId & RESERVED_BITS) === this.generatorId, 'Cannot supply target ID from different generator ID');\n    this.nextId = targetId;\n  };\n\n  TargetIdGenerator.forQueryCache = function () {\n    // We seed the query cache generator to return '2' as its first ID, as there\n    // is no differentiation in the protocol layer between an unset number and\n    // the number '0'. If we were to sent a target with target ID '0', the\n    // backend would consider it unset and replace it with its own ID.\n    var targetIdGenerator = new TargetIdGenerator(GeneratorIds.QueryCache, 2);\n    return targetIdGenerator;\n  };\n\n  TargetIdGenerator.forSyncEngine = function () {\n    // Sync engine assigns target IDs for limbo document detection.\n    return new TargetIdGenerator(GeneratorIds.SyncEngine);\n  };\n\n  return TargetIdGenerator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_TAG = 'SimpleDb';\n/**\r\n * Provides a wrapper around IndexedDb with a simplified interface that uses\r\n * Promise-like return values to chain operations. Real promises cannot be used\r\n * since .then() continuations are executed asynchronously (e.g. via\r\n * .setImmediate), which would cause IndexedDB to end the transaction.\r\n * See PersistencePromise for more details.\r\n */\n\nvar SimpleDb =\n/** @class */\nfunction () {\n  function SimpleDb(db) {\n    this.db = db;\n    var iOSVersion = SimpleDb.getIOSVersion(util.getUA()); // NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the\n    // bug we're checking for should exist in iOS >= 12.2 and < 13, but for\n    // whatever reason it's much harder to hit after 12.2 so we only proactively\n    // log on 12.2.\n\n    if (iOSVersion === 12.2) {\n      error('Firestore persistence suffers from a bug in iOS 12.2 ' + 'Safari that may cause your app to stop working. See ' + 'https://stackoverflow.com/q/56496296/110915 for details ' + 'and a potential workaround.');\n    }\n  }\n  /**\r\n   * Opens the specified database, creating or upgrading it if necessary.\r\n   *\r\n   * Note that `version` must not be a downgrade. IndexedDB does not support downgrading the schema\r\n   * version. We currently do not support any way to do versioning outside of IndexedDB's versioning\r\n   * mechanism, as only version-upgrade transactions are allowed to do things like create\r\n   * objectstores.\r\n   */\n\n\n  SimpleDb.openOrCreate = function (name, version, schemaConverter) {\n    assert(SimpleDb.isAvailable(), 'IndexedDB not supported in current environment.');\n    debug(LOG_TAG, 'Opening database:', name);\n    return new PersistencePromise(function (resolve, reject) {\n      // TODO(mikelehen): Investigate browser compatibility.\n      // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\n      // suggests IE9 and older WebKit browsers handle upgrade\n      // differently. They expect setVersion, as described here:\n      // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion\n      var request = window.indexedDB.open(name, version);\n\n      request.onsuccess = function (event) {\n        var db = event.target.result;\n        resolve(new SimpleDb(db));\n      };\n\n      request.onblocked = function () {\n        reject(new FirestoreError(Code.FAILED_PRECONDITION, 'Cannot upgrade IndexedDB schema while another tab is open. ' + 'Close all tabs that access Firestore and reload this page to proceed.'));\n      };\n\n      request.onerror = function (event) {\n        var error = event.target.error;\n\n        if (error.name === 'VersionError') {\n          reject(new FirestoreError(Code.FAILED_PRECONDITION, 'A newer version of the Firestore SDK was previously used and so the persisted ' + 'data is not compatible with the version of the SDK you are now using. The SDK ' + 'will operate with persistence disabled. If you need persistence, please ' + 're-upgrade to a newer version of the SDK or else clear the persisted IndexedDB ' + 'data for your app to start fresh.'));\n        } else {\n          reject(error);\n        }\n      };\n\n      request.onupgradeneeded = function (event) {\n        debug(LOG_TAG, 'Database \"' + name + '\" requires upgrade from version:', event.oldVersion);\n        var db = event.target.result; // We are provided a version upgrade transaction from the request, so\n        // we wrap that in a SimpleDbTransaction to allow use of our friendlier\n        // API for schema migration operations.\n\n        var txn = new SimpleDbTransaction(request.transaction);\n        schemaConverter.createOrUpgrade(db, txn, event.oldVersion, SCHEMA_VERSION).next(function () {\n          debug(LOG_TAG, 'Database upgrade to version ' + SCHEMA_VERSION + ' complete');\n        });\n      };\n    }).toPromise();\n  };\n  /** Deletes the specified database. */\n\n\n  SimpleDb.delete = function (name) {\n    debug(LOG_TAG, 'Removing database:', name);\n    return wrapRequest(window.indexedDB.deleteDatabase(name)).toPromise();\n  };\n  /** Returns true if IndexedDB is available in the current environment. */\n\n\n  SimpleDb.isAvailable = function () {\n    if (typeof window === 'undefined' || window.indexedDB == null) {\n      return false;\n    } // We extensively use indexed array values and compound keys,\n    // which IE and Edge do not support. However, they still have indexedDB\n    // defined on the window, so we need to check for them here and make sure\n    // to return that persistence is not enabled for those browsers.\n    // For tracking support of this feature, see here:\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/\n    // If we are running in Node using the IndexedDBShim, `window` is defined,\n    // but `window.navigator` is not. In this case, we support IndexedDB and\n    // return `true`.\n\n\n    if (window.navigator === undefined) {\n      return process.env.USE_MOCK_PERSISTENCE === 'YES';\n    } // Check the UA string to find out the browser.\n\n\n    var ua = util.getUA(); // IE 10\n    // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n    // IE 11\n    // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n    // Edge\n    // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,\n    // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n    // iOS Safari: Disable for users running iOS version < 10.\n\n    var iOSVersion = SimpleDb.getIOSVersion(ua);\n    var isUnsupportedIOS = 0 < iOSVersion && iOSVersion < 10; // Android browser: Disable for userse running version < 4.5.\n\n    var androidVersion = SimpleDb.getAndroidVersion(ua);\n    var isUnsupportedAndroid = 0 < androidVersion && androidVersion < 4.5;\n\n    if (ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0 || isUnsupportedIOS || isUnsupportedAndroid) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  /** Helper to get a typed SimpleDbStore from a transaction. */\n\n\n  SimpleDb.getStore = function (txn, store) {\n    return txn.store(store);\n  }; // visible for testing\n\n  /** Parse User Agent to determine iOS version. Returns -1 if not found. */\n\n\n  SimpleDb.getIOSVersion = function (ua) {\n    var iOSVersionRegex = ua.match(/i(?:phone|pad|pod) os ([\\d_]+)/i);\n    var version = iOSVersionRegex ? iOSVersionRegex[1].split('_').slice(0, 2).join('.') : '-1';\n    return Number(version);\n  }; // visible for testing\n\n  /** Parse User Agent to determine Android version. Returns -1 if not found. */\n\n\n  SimpleDb.getAndroidVersion = function (ua) {\n    var androidVersionRegex = ua.match(/Android ([\\d.]+)/i);\n    var version = androidVersionRegex ? androidVersionRegex[1].split('.').slice(0, 2).join('.') : '-1';\n    return Number(version);\n  };\n\n  SimpleDb.prototype.setVersionChangeListener = function (versionChangeListener) {\n    this.db.onversionchange = function (event) {\n      return versionChangeListener(event);\n    };\n  };\n\n  SimpleDb.prototype.runTransaction = function (mode, objectStores, transactionFn) {\n    var transaction = SimpleDbTransaction.open(this.db, mode, objectStores);\n    var transactionFnResult = transactionFn(transaction).catch(function (error) {\n      // Abort the transaction if there was an error.\n      transaction.abort(error); // We cannot actually recover, and calling `abort()` will cause the transaction's\n      // completion promise to be rejected. This in turn means that we won't use\n      // `transactionFnResult` below. We return a rejection here so that we don't add the\n      // possibility of returning `void` to the type of `transactionFnResult`.\n\n      return PersistencePromise.reject(error);\n    }).toPromise(); // As noted above, errors are propagated by aborting the transaction. So\n    // we swallow any error here to avoid the browser logging it as unhandled.\n\n    transactionFnResult.catch(function () {}); // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to\n    // fire), but still return the original transactionFnResult back to the\n    // caller.\n\n    return transaction.completionPromise.then(function () {\n      return transactionFnResult;\n    });\n  };\n\n  SimpleDb.prototype.close = function () {\n    this.db.close();\n  };\n\n  return SimpleDb;\n}();\n/**\r\n * A controller for iterating over a key range or index. It allows an iterate\r\n * callback to delete the currently-referenced object, or jump to a new key\r\n * within the key range or index.\r\n */\n\n\nvar IterationController =\n/** @class */\nfunction () {\n  function IterationController(dbCursor) {\n    this.dbCursor = dbCursor;\n    this.shouldStop = false;\n    this.nextKey = null;\n  }\n\n  Object.defineProperty(IterationController.prototype, \"isDone\", {\n    get: function get() {\n      return this.shouldStop;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IterationController.prototype, \"skipToKey\", {\n    get: function get() {\n      return this.nextKey;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IterationController.prototype, \"cursor\", {\n    set: function set(value) {\n      this.dbCursor = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * This function can be called to stop iteration at any point.\r\n   */\n\n  IterationController.prototype.done = function () {\n    this.shouldStop = true;\n  };\n  /**\r\n   * This function can be called to skip to that next key, which could be\r\n   * an index or a primary key.\r\n   */\n\n\n  IterationController.prototype.skip = function (key) {\n    this.nextKey = key;\n  };\n  /**\r\n   * Delete the current cursor value from the object store.\r\n   *\r\n   * NOTE: You CANNOT do this with a keysOnly query.\r\n   */\n\n\n  IterationController.prototype.delete = function () {\n    return wrapRequest(this.dbCursor.delete());\n  };\n\n  return IterationController;\n}();\n/**\r\n * Wraps an IDBTransaction and exposes a store() method to get a handle to a\r\n * specific object store.\r\n */\n\n\nvar SimpleDbTransaction =\n/** @class */\nfunction () {\n  function SimpleDbTransaction(transaction) {\n    var _this = this;\n\n    this.transaction = transaction;\n    this.aborted = false;\n    /**\r\n     * A promise that resolves with the result of the IndexedDb transaction.\r\n     */\n\n    this.completionDeferred = new Deferred();\n\n    this.transaction.oncomplete = function () {\n      _this.completionDeferred.resolve();\n    };\n\n    this.transaction.onabort = function () {\n      if (transaction.error) {\n        _this.completionDeferred.reject(transaction.error);\n      } else {\n        _this.completionDeferred.resolve();\n      }\n    };\n\n    this.transaction.onerror = function (event) {\n      var error = checkForAndReportiOSError(event.target.error);\n\n      _this.completionDeferred.reject(error);\n    };\n  }\n\n  SimpleDbTransaction.open = function (db, mode, objectStoreNames) {\n    return new SimpleDbTransaction(db.transaction(objectStoreNames, mode));\n  };\n\n  Object.defineProperty(SimpleDbTransaction.prototype, \"completionPromise\", {\n    get: function get() {\n      return this.completionDeferred.promise;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SimpleDbTransaction.prototype.abort = function (error) {\n    if (error) {\n      this.completionDeferred.reject(error);\n    }\n\n    if (!this.aborted) {\n      debug(LOG_TAG, 'Aborting transaction:', error ? error.message : 'Client-initiated abort');\n      this.aborted = true;\n      this.transaction.abort();\n    }\n  };\n  /**\r\n   * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All\r\n   * operations performed on the SimpleDbStore happen within the context of this\r\n   * transaction and it cannot be used anymore once the transaction is\r\n   * completed.\r\n   *\r\n   * Note that we can't actually enforce that the KeyType and ValueType are\r\n   * correct, but they allow type safety through the rest of the consuming code.\r\n   */\n\n\n  SimpleDbTransaction.prototype.store = function (storeName) {\n    var store = this.transaction.objectStore(storeName);\n    assert(!!store, 'Object store not part of transaction: ' + storeName);\n    return new SimpleDbStore(store);\n  };\n\n  return SimpleDbTransaction;\n}();\n/**\r\n * A wrapper around an IDBObjectStore providing an API that:\r\n *\r\n * 1) Has generic KeyType / ValueType parameters to provide strongly-typed\r\n * methods for acting against the object store.\r\n * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every\r\n * method return a PersistencePromise instead.\r\n * 3) Provides a higher-level API to avoid needing to do excessive wrapping of\r\n * intermediate IndexedDB types (IDBCursorWithValue, etc.)\r\n */\n\n\nvar SimpleDbStore =\n/** @class */\nfunction () {\n  function SimpleDbStore(store) {\n    this.store = store;\n  }\n\n  SimpleDbStore.prototype.put = function (keyOrValue, value) {\n    var request;\n\n    if (value !== undefined) {\n      debug(LOG_TAG, 'PUT', this.store.name, keyOrValue, value);\n      request = this.store.put(value, keyOrValue);\n    } else {\n      debug(LOG_TAG, 'PUT', this.store.name, '<auto-key>', keyOrValue);\n      request = this.store.put(keyOrValue);\n    }\n\n    return wrapRequest(request);\n  };\n  /**\r\n   * Adds a new value into an Object Store and returns the new key. Similar to\r\n   * IndexedDb's `add()`, this method will fail on primary key collisions.\r\n   *\r\n   * @param value The object to write.\r\n   * @return The key of the value to add.\r\n   */\n\n\n  SimpleDbStore.prototype.add = function (value) {\n    debug(LOG_TAG, 'ADD', this.store.name, value, value);\n    var request = this.store.add(value);\n    return wrapRequest(request);\n  };\n  /**\r\n   * Gets the object with the specified key from the specified store, or null\r\n   * if no object exists with the specified key.\r\n   *\r\n   * @key The key of the object to get.\r\n   * @return The object with the specified key or null if no object exists.\r\n   */\n\n\n  SimpleDbStore.prototype.get = function (key) {\n    var _this = this;\n\n    var request = this.store.get(key); // eslint-disable-next-line @typescript-eslint/no-explicit-any, We're doing an unsafe cast to ValueType.\n\n    return wrapRequest(request).next(function (result) {\n      // Normalize nonexistence to null.\n      if (result === undefined) {\n        result = null;\n      }\n\n      debug(LOG_TAG, 'GET', _this.store.name, key, result);\n      return result;\n    });\n  };\n\n  SimpleDbStore.prototype.delete = function (key) {\n    debug(LOG_TAG, 'DELETE', this.store.name, key);\n    var request = this.store.delete(key);\n    return wrapRequest(request);\n  };\n  /**\r\n   * If we ever need more of the count variants, we can add overloads. For now,\r\n   * all we need is to count everything in a store.\r\n   *\r\n   * Returns the number of rows in the store.\r\n   */\n\n\n  SimpleDbStore.prototype.count = function () {\n    debug(LOG_TAG, 'COUNT', this.store.name);\n    var request = this.store.count();\n    return wrapRequest(request);\n  };\n\n  SimpleDbStore.prototype.loadAll = function (indexOrRange, range) {\n    var cursor = this.cursor(this.options(indexOrRange, range));\n    var results = [];\n    return this.iterateCursor(cursor, function (key, value) {\n      results.push(value);\n    }).next(function () {\n      return results;\n    });\n  };\n\n  SimpleDbStore.prototype.deleteAll = function (indexOrRange, range) {\n    debug(LOG_TAG, 'DELETE ALL', this.store.name);\n    var options = this.options(indexOrRange, range);\n    options.keysOnly = false;\n    var cursor = this.cursor(options);\n    return this.iterateCursor(cursor, function (key, value, control) {\n      // NOTE: Calling delete() on a cursor is documented as more efficient than\n      // calling delete() on an object store with a single key\n      // (https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/delete),\n      // however, this requires us *not* to use a keysOnly cursor\n      // (https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/delete). We\n      // may want to compare the performance of each method.\n      return control.delete();\n    });\n  };\n\n  SimpleDbStore.prototype.iterate = function (optionsOrCallback, callback) {\n    var options;\n\n    if (!callback) {\n      options = {};\n      callback = optionsOrCallback;\n    } else {\n      options = optionsOrCallback;\n    }\n\n    var cursor = this.cursor(options);\n    return this.iterateCursor(cursor, callback);\n  };\n  /**\r\n   * Iterates over a store, but waits for the given callback to complete for\r\n   * each entry before iterating the next entry. This allows the callback to do\r\n   * asynchronous work to determine if this iteration should continue.\r\n   *\r\n   * The provided callback should return `true` to continue iteration, and\r\n   * `false` otherwise.\r\n   */\n\n\n  SimpleDbStore.prototype.iterateSerial = function (callback) {\n    var cursorRequest = this.cursor({});\n    return new PersistencePromise(function (resolve, reject) {\n      cursorRequest.onerror = function (event) {\n        var error = checkForAndReportiOSError(event.target.error);\n        reject(error);\n      };\n\n      cursorRequest.onsuccess = function (event) {\n        var cursor = event.target.result;\n\n        if (!cursor) {\n          resolve();\n          return;\n        }\n\n        callback(cursor.primaryKey, cursor.value).next(function (shouldContinue) {\n          if (shouldContinue) {\n            cursor.continue();\n          } else {\n            resolve();\n          }\n        });\n      };\n    });\n  };\n\n  SimpleDbStore.prototype.iterateCursor = function (cursorRequest, fn) {\n    var results = [];\n    return new PersistencePromise(function (resolve, reject) {\n      cursorRequest.onerror = function (event) {\n        reject(event.target.error);\n      };\n\n      cursorRequest.onsuccess = function (event) {\n        var cursor = event.target.result;\n\n        if (!cursor) {\n          resolve();\n          return;\n        }\n\n        var controller = new IterationController(cursor);\n        var userResult = fn(cursor.primaryKey, cursor.value, controller);\n\n        if (userResult instanceof PersistencePromise) {\n          var userPromise = userResult.catch(function (err) {\n            controller.done();\n            return PersistencePromise.reject(err);\n          });\n          results.push(userPromise);\n        }\n\n        if (controller.isDone) {\n          resolve();\n        } else if (controller.skipToKey === null) {\n          cursor.continue();\n        } else {\n          cursor.continue(controller.skipToKey);\n        }\n      };\n    }).next(function () {\n      return PersistencePromise.waitFor(results);\n    });\n  };\n\n  SimpleDbStore.prototype.options = function (indexOrRange, range) {\n    var indexName = undefined;\n\n    if (indexOrRange !== undefined) {\n      if (typeof indexOrRange === 'string') {\n        indexName = indexOrRange;\n      } else {\n        assert(range === undefined, '3rd argument must not be defined if 2nd is a range.');\n        range = indexOrRange;\n      }\n    }\n\n    return {\n      index: indexName,\n      range: range\n    };\n  };\n\n  SimpleDbStore.prototype.cursor = function (options) {\n    var direction = 'next';\n\n    if (options.reverse) {\n      direction = 'prev';\n    }\n\n    if (options.index) {\n      var index = this.store.index(options.index);\n\n      if (options.keysOnly) {\n        return index.openKeyCursor(options.range, direction);\n      } else {\n        return index.openCursor(options.range, direction);\n      }\n    } else {\n      return this.store.openCursor(options.range, direction);\n    }\n  };\n\n  return SimpleDbStore;\n}();\n/**\r\n * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror\r\n * handlers to resolve / reject the PersistencePromise as appropriate.\r\n */\n\n\nfunction wrapRequest(request) {\n  return new PersistencePromise(function (resolve, reject) {\n    request.onsuccess = function (event) {\n      var result = event.target.result;\n      resolve(result);\n    };\n\n    request.onerror = function (event) {\n      var error = checkForAndReportiOSError(event.target.error);\n      reject(error);\n    };\n  });\n} // Guard so we only report the error once.\n\n\nvar reportedIOSError = false;\n\nfunction checkForAndReportiOSError(error) {\n  var iOSVersion = SimpleDb.getIOSVersion(util.getUA());\n\n  if (iOSVersion >= 12.2 && iOSVersion < 13) {\n    var IOS_ERROR = 'An internal error was encountered in the Indexed Database server';\n\n    if (error.message.indexOf(IOS_ERROR) >= 0) {\n      // Wrap error in a more descriptive one.\n      var newError_1 = new FirestoreError('internal', \"IOS_INDEXEDDB_BUG1: IndexedDb has thrown '\" + IOS_ERROR + \"'. This is likely \" + \"due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 \" + \"for details and a potential workaround.\");\n\n      if (!reportedIOSError) {\n        reportedIOSError = true; // Throw a global exception outside of this promise chain, for the user to\n        // potentially catch.\n\n        setTimeout(function () {\n          throw newError_1;\n        }, 0);\n      }\n\n      return newError_1;\n    }\n  }\n\n  return error;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar IndexedDbQueryCache =\n/** @class */\nfunction () {\n  function IndexedDbQueryCache(referenceDelegate, serializer) {\n    this.referenceDelegate = referenceDelegate;\n    this.serializer = serializer; // PORTING NOTE: We don't cache global metadata for the query cache, since\n    // some of it (in particular `highestTargetId`) can be modified by secondary\n    // tabs. We could perhaps be more granular (and e.g. still cache\n    // `lastRemoteSnapshotVersion` in memory) but for simplicity we currently go\n    // to IndexedDb whenever we need to read metadata. We can revisit if it turns\n    // out to have a meaningful performance impact.\n\n    this.targetIdGenerator = TargetIdGenerator.forQueryCache();\n  }\n\n  IndexedDbQueryCache.prototype.allocateTargetId = function (transaction) {\n    var _this = this;\n\n    return this.retrieveMetadata(transaction).next(function (metadata) {\n      metadata.highestTargetId = _this.targetIdGenerator.after(metadata.highestTargetId);\n      return _this.saveMetadata(transaction, metadata).next(function () {\n        return metadata.highestTargetId;\n      });\n    });\n  };\n\n  IndexedDbQueryCache.prototype.getLastRemoteSnapshotVersion = function (transaction) {\n    return this.retrieveMetadata(transaction).next(function (metadata) {\n      return SnapshotVersion.fromTimestamp(new Timestamp(metadata.lastRemoteSnapshotVersion.seconds, metadata.lastRemoteSnapshotVersion.nanoseconds));\n    });\n  };\n\n  IndexedDbQueryCache.prototype.getHighestSequenceNumber = function (transaction) {\n    return getHighestListenSequenceNumber(transaction.simpleDbTransaction);\n  };\n\n  IndexedDbQueryCache.prototype.setTargetsMetadata = function (transaction, highestListenSequenceNumber, lastRemoteSnapshotVersion) {\n    var _this = this;\n\n    return this.retrieveMetadata(transaction).next(function (metadata) {\n      metadata.highestListenSequenceNumber = highestListenSequenceNumber;\n\n      if (lastRemoteSnapshotVersion) {\n        metadata.lastRemoteSnapshotVersion = lastRemoteSnapshotVersion.toTimestamp();\n      }\n\n      if (highestListenSequenceNumber > metadata.highestListenSequenceNumber) {\n        metadata.highestListenSequenceNumber = highestListenSequenceNumber;\n      }\n\n      return _this.saveMetadata(transaction, metadata);\n    });\n  };\n\n  IndexedDbQueryCache.prototype.addQueryData = function (transaction, queryData) {\n    var _this = this;\n\n    return this.saveQueryData(transaction, queryData).next(function () {\n      return _this.retrieveMetadata(transaction).next(function (metadata) {\n        metadata.targetCount += 1;\n\n        _this.updateMetadataFromQueryData(queryData, metadata);\n\n        return _this.saveMetadata(transaction, metadata);\n      });\n    });\n  };\n\n  IndexedDbQueryCache.prototype.updateQueryData = function (transaction, queryData) {\n    return this.saveQueryData(transaction, queryData);\n  };\n\n  IndexedDbQueryCache.prototype.removeQueryData = function (transaction, queryData) {\n    var _this = this;\n\n    return this.removeMatchingKeysForTargetId(transaction, queryData.targetId).next(function () {\n      return targetsStore(transaction).delete(queryData.targetId);\n    }).next(function () {\n      return _this.retrieveMetadata(transaction);\n    }).next(function (metadata) {\n      assert(metadata.targetCount > 0, 'Removing from an empty query cache');\n      metadata.targetCount -= 1;\n      return _this.saveMetadata(transaction, metadata);\n    });\n  };\n  /**\r\n   * Drops any targets with sequence number less than or equal to the upper bound, excepting those\r\n   * present in `activeTargetIds`. Document associations for the removed targets are also removed.\r\n   * Returns the number of targets removed.\r\n   */\n\n\n  IndexedDbQueryCache.prototype.removeTargets = function (txn, upperBound, activeTargetIds) {\n    var _this = this;\n\n    var count = 0;\n    var promises = [];\n    return targetsStore(txn).iterate(function (key, value) {\n      var queryData = _this.serializer.fromDbTarget(value);\n\n      if (queryData.sequenceNumber <= upperBound && activeTargetIds[queryData.targetId] === undefined) {\n        count++;\n        promises.push(_this.removeQueryData(txn, queryData));\n      }\n    }).next(function () {\n      return PersistencePromise.waitFor(promises);\n    }).next(function () {\n      return count;\n    });\n  };\n  /**\r\n   * Call provided function with each `QueryData` that we have cached.\r\n   */\n\n\n  IndexedDbQueryCache.prototype.forEachTarget = function (txn, f) {\n    var _this = this;\n\n    return targetsStore(txn).iterate(function (key, value) {\n      var queryData = _this.serializer.fromDbTarget(value);\n\n      f(queryData);\n    });\n  };\n\n  IndexedDbQueryCache.prototype.retrieveMetadata = function (transaction) {\n    return retrieveMetadata(transaction.simpleDbTransaction);\n  };\n\n  IndexedDbQueryCache.prototype.saveMetadata = function (transaction, metadata) {\n    return globalTargetStore(transaction).put(DbTargetGlobal.key, metadata);\n  };\n\n  IndexedDbQueryCache.prototype.saveQueryData = function (transaction, queryData) {\n    return targetsStore(transaction).put(this.serializer.toDbTarget(queryData));\n  };\n  /**\r\n   * In-place updates the provided metadata to account for values in the given\r\n   * QueryData. Saving is done separately. Returns true if there were any\r\n   * changes to the metadata.\r\n   */\n\n\n  IndexedDbQueryCache.prototype.updateMetadataFromQueryData = function (queryData, metadata) {\n    var updated = false;\n\n    if (queryData.targetId > metadata.highestTargetId) {\n      metadata.highestTargetId = queryData.targetId;\n      updated = true;\n    }\n\n    if (queryData.sequenceNumber > metadata.highestListenSequenceNumber) {\n      metadata.highestListenSequenceNumber = queryData.sequenceNumber;\n      updated = true;\n    }\n\n    return updated;\n  };\n\n  IndexedDbQueryCache.prototype.getQueryCount = function (transaction) {\n    return this.retrieveMetadata(transaction).next(function (metadata) {\n      return metadata.targetCount;\n    });\n  };\n\n  IndexedDbQueryCache.prototype.getQueryData = function (transaction, query) {\n    var _this = this; // Iterating by the canonicalId may yield more than one result because\n    // canonicalId values are not required to be unique per target. This query\n    // depends on the queryTargets index to be efficient.\n\n\n    var canonicalId = query.canonicalId();\n    var range = IDBKeyRange.bound([canonicalId, Number.NEGATIVE_INFINITY], [canonicalId, Number.POSITIVE_INFINITY]);\n    var result = null;\n    return targetsStore(transaction).iterate({\n      range: range,\n      index: DbTarget.queryTargetsIndexName\n    }, function (key, value, control) {\n      var found = _this.serializer.fromDbTarget(value); // After finding a potential match, check that the query is\n      // actually equal to the requested query.\n\n\n      if (query.isEqual(found.query)) {\n        result = found;\n        control.done();\n      }\n    }).next(function () {\n      return result;\n    });\n  };\n\n  IndexedDbQueryCache.prototype.addMatchingKeys = function (txn, keys, targetId) {\n    var _this = this; // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n    // IndexedDb.\n\n\n    var promises = [];\n    var store = documentTargetStore(txn);\n    keys.forEach(function (key) {\n      var path = encode(key.path);\n      promises.push(store.put(new DbTargetDocument(targetId, path)));\n      promises.push(_this.referenceDelegate.addReference(txn, key));\n    });\n    return PersistencePromise.waitFor(promises);\n  };\n\n  IndexedDbQueryCache.prototype.removeMatchingKeys = function (txn, keys, targetId) {\n    var _this = this; // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n    // IndexedDb.\n\n\n    var store = documentTargetStore(txn);\n    return PersistencePromise.forEach(keys, function (key) {\n      var path = encode(key.path);\n      return PersistencePromise.waitFor([store.delete([targetId, path]), _this.referenceDelegate.removeReference(txn, key)]);\n    });\n  };\n\n  IndexedDbQueryCache.prototype.removeMatchingKeysForTargetId = function (txn, targetId) {\n    var store = documentTargetStore(txn);\n    var range = IDBKeyRange.bound([targetId], [targetId + 1],\n    /*lowerOpen=*/\n    false,\n    /*upperOpen=*/\n    true);\n    return store.delete(range);\n  };\n\n  IndexedDbQueryCache.prototype.getMatchingKeysForTargetId = function (txn, targetId) {\n    var range = IDBKeyRange.bound([targetId], [targetId + 1],\n    /*lowerOpen=*/\n    false,\n    /*upperOpen=*/\n    true);\n    var store = documentTargetStore(txn);\n    var result = documentKeySet();\n    return store.iterate({\n      range: range,\n      keysOnly: true\n    }, function (key, _, control) {\n      var path = decode(key[1]);\n      var docKey = new DocumentKey(path);\n      result = result.add(docKey);\n    }).next(function () {\n      return result;\n    });\n  };\n\n  IndexedDbQueryCache.prototype.containsKey = function (txn, key) {\n    var path = encode(key.path);\n    var range = IDBKeyRange.bound([path], [immediateSuccessor(path)],\n    /*lowerOpen=*/\n    false,\n    /*upperOpen=*/\n    true);\n    var count = 0;\n    return documentTargetStore(txn).iterate({\n      index: DbTargetDocument.documentTargetsIndex,\n      keysOnly: true,\n      range: range\n    }, function (_a, _, control) {\n      var targetId = _a[0],\n          path = _a[1]; // Having a sentinel row for a document does not count as containing that document;\n      // For the query cache, containing the document means the document is part of some\n      // target.\n\n      if (targetId !== 0) {\n        count++;\n        control.done();\n      }\n    }).next(function () {\n      return count > 0;\n    });\n  };\n\n  IndexedDbQueryCache.prototype.getQueryDataForTarget = function (transaction, targetId) {\n    var _this = this;\n\n    return targetsStore(transaction).get(targetId).next(function (found) {\n      if (found) {\n        return _this.serializer.fromDbTarget(found);\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return IndexedDbQueryCache;\n}();\n/**\r\n * Helper to get a typed SimpleDbStore for the queries object store.\r\n */\n\n\nfunction targetsStore(txn) {\n  return IndexedDbPersistence.getStore(txn, DbTarget.store);\n}\n/**\r\n * Helper to get a typed SimpleDbStore for the target globals object store.\r\n */\n\n\nfunction globalTargetStore(txn) {\n  return IndexedDbPersistence.getStore(txn, DbTargetGlobal.store);\n}\n\nfunction retrieveMetadata(txn) {\n  var globalStore = SimpleDb.getStore(txn, DbTargetGlobal.store);\n  return globalStore.get(DbTargetGlobal.key).next(function (metadata) {\n    assert(metadata !== null, 'Missing metadata row.');\n    return metadata;\n  });\n}\n\nfunction getHighestListenSequenceNumber(txn) {\n  return retrieveMetadata(txn).next(function (targetGlobal) {\n    return targetGlobal.highestListenSequenceNumber;\n  });\n}\n/**\r\n * Helper to get a typed SimpleDbStore for the document target object store.\r\n */\n\n\nfunction documentTargetStore(txn) {\n  return IndexedDbPersistence.getStore(txn, DbTargetDocument.store);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides a set of fields that can be used to partially patch a document.\r\n * FieldMask is used in conjunction with ObjectValue.\r\n * Examples:\r\n *   foo - Overwrites foo entirely with the provided value. If foo is not\r\n *         present in the companion ObjectValue, the field is deleted.\r\n *   foo.bar - Overwrites only the field bar of the object foo.\r\n *             If foo is not an object, foo is replaced with an object\r\n *             containing foo\r\n */\n\n\nvar FieldMask =\n/** @class */\nfunction () {\n  function FieldMask(fields) {\n    this.fields = fields; // TODO(dimond): validation of FieldMask\n  }\n\n  FieldMask.fromSet = function (fields) {\n    return new FieldMask(fields);\n  };\n\n  FieldMask.fromArray = function (fields) {\n    var fieldsAsSet = new SortedSet(FieldPath.comparator);\n    fields.forEach(function (fieldPath) {\n      return fieldsAsSet = fieldsAsSet.add(fieldPath);\n    });\n    return new FieldMask(fieldsAsSet);\n  };\n  /**\r\n   * Verifies that `fieldPath` is included by at least one field in this field\r\n   * mask.\r\n   *\r\n   * This is an O(n) operation, where `n` is the size of the field mask.\r\n   */\n\n\n  FieldMask.prototype.covers = function (fieldPath) {\n    var found = false;\n    this.fields.forEach(function (fieldMaskPath) {\n      if (fieldMaskPath.isPrefixOf(fieldPath)) {\n        found = true;\n      }\n    });\n    return found;\n  };\n\n  FieldMask.prototype.isEqual = function (other) {\n    return this.fields.isEqual(other.fields);\n  };\n\n  return FieldMask;\n}();\n/** A field path and the TransformOperation to perform upon it. */\n\n\nvar FieldTransform =\n/** @class */\nfunction () {\n  function FieldTransform(field, transform) {\n    this.field = field;\n    this.transform = transform;\n  }\n\n  FieldTransform.prototype.isEqual = function (other) {\n    return this.field.isEqual(other.field) && this.transform.isEqual(other.transform);\n  };\n\n  return FieldTransform;\n}();\n/** The result of successfully applying a mutation to the backend. */\n\n\nvar MutationResult =\n/** @class */\nfunction () {\n  function MutationResult(\n  /**\r\n   * The version at which the mutation was committed:\r\n   *\r\n   * - For most operations, this is the updateTime in the WriteResult.\r\n   * - For deletes, the commitTime of the WriteResponse (because deletes are\r\n   *   not stored and have no updateTime).\r\n   *\r\n   * Note that these versions can be different: No-op writes will not change\r\n   * the updateTime even though the commitTime advances.\r\n   */\n  version,\n  /**\r\n   * The resulting fields returned from the backend after a\r\n   * TransformMutation has been committed. Contains one FieldValue for each\r\n   * FieldTransform that was in the mutation.\r\n   *\r\n   * Will be null if the mutation was not a TransformMutation.\r\n   */\n  transformResults) {\n    this.version = version;\n    this.transformResults = transformResults;\n  }\n\n  return MutationResult;\n}();\n\nvar MutationType;\n\n(function (MutationType) {\n  MutationType[MutationType[\"Set\"] = 0] = \"Set\";\n  MutationType[MutationType[\"Patch\"] = 1] = \"Patch\";\n  MutationType[MutationType[\"Transform\"] = 2] = \"Transform\";\n  MutationType[MutationType[\"Delete\"] = 3] = \"Delete\";\n})(MutationType || (MutationType = {}));\n/**\r\n * Encodes a precondition for a mutation. This follows the model that the\r\n * backend accepts with the special case of an explicit \"empty\" precondition\r\n * (meaning no precondition).\r\n */\n\n\nvar Precondition =\n/** @class */\nfunction () {\n  function Precondition(updateTime, exists) {\n    this.updateTime = updateTime;\n    this.exists = exists;\n    assert(updateTime === undefined || exists === undefined, 'Precondition can specify \"exists\" or \"updateTime\" but not both');\n  }\n  /** Creates a new Precondition with an exists flag. */\n\n\n  Precondition.exists = function (exists) {\n    return new Precondition(undefined, exists);\n  };\n  /** Creates a new Precondition based on a version a document exists at. */\n\n\n  Precondition.updateTime = function (version) {\n    return new Precondition(version);\n  };\n\n  Object.defineProperty(Precondition.prototype, \"isNone\", {\n    /** Returns whether this Precondition is empty. */\n    get: function get() {\n      return this.updateTime === undefined && this.exists === undefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns true if the preconditions is valid for the given document\r\n   * (or null if no document is available).\r\n   */\n\n  Precondition.prototype.isValidFor = function (maybeDoc) {\n    if (this.updateTime !== undefined) {\n      return maybeDoc instanceof Document && maybeDoc.version.isEqual(this.updateTime);\n    } else if (this.exists !== undefined) {\n      return this.exists === maybeDoc instanceof Document;\n    } else {\n      assert(this.isNone, 'Precondition should be empty');\n      return true;\n    }\n  };\n\n  Precondition.prototype.isEqual = function (other) {\n    return equals(this.updateTime, other.updateTime) && this.exists === other.exists;\n  };\n\n  Precondition.NONE = new Precondition();\n  return Precondition;\n}();\n/**\r\n * A mutation describes a self-contained change to a document. Mutations can\r\n * create, replace, delete, and update subsets of documents.\r\n *\r\n * Mutations not only act on the value of the document but also it version.\r\n *\r\n * For local mutations (mutations that haven't been committed yet), we preserve\r\n * the existing version for Set, Patch, and Transform mutations. For Delete\r\n * mutations, we reset the version to 0.\r\n *\r\n * Here's the expected transition table.\r\n *\r\n * MUTATION           APPLIED TO            RESULTS IN\r\n *\r\n * SetMutation        Document(v3)          Document(v3)\r\n * SetMutation        NoDocument(v3)        Document(v0)\r\n * SetMutation        null                  Document(v0)\r\n * PatchMutation      Document(v3)          Document(v3)\r\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\r\n * PatchMutation      null                  null\r\n * TransformMutation  Document(v3)          Document(v3)\r\n * TransformMutation  NoDocument(v3)        NoDocument(v3)\r\n * TransformMutation  null                  null\r\n * DeleteMutation     Document(v3)          NoDocument(v0)\r\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\r\n * DeleteMutation     null                  NoDocument(v0)\r\n *\r\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\r\n * the resulting version for Set, Patch, and Transform mutations. As deletes\r\n * have no explicit update time, we use the commitTime of the WriteResponse for\r\n * Delete mutations.\r\n *\r\n * If a mutation is acknowledged by the backend but fails the precondition check\r\n * locally, we return an `UnknownDocument` and rely on Watch to send us the\r\n * updated version.\r\n *\r\n * Note that TransformMutations don't create Documents (in the case of being\r\n * applied to a NoDocument), even though they would on the backend. This is\r\n * because the client always combines the TransformMutation with a SetMutation\r\n * or PatchMutation and we only want to apply the transform if the prior\r\n * mutation resulted in a Document (always true for a SetMutation, but not\r\n * necessarily for a PatchMutation).\r\n *\r\n * ## Subclassing Notes\r\n *\r\n * Subclasses of Mutation need to implement applyToRemoteDocument() and\r\n * applyToLocalView() to implement the actual behavior of applying the mutation\r\n * to some source document.\r\n */\n\n\nvar Mutation =\n/** @class */\nfunction () {\n  function Mutation() {}\n\n  Mutation.prototype.verifyKeyMatches = function (maybeDoc) {\n    if (maybeDoc != null) {\n      assert(maybeDoc.key.isEqual(this.key), 'Can only apply a mutation to a document with the same key');\n    }\n  };\n  /**\r\n   * Returns the version from the given document for use as the result of a\r\n   * mutation. Mutations are defined to return the version of the base document\r\n   * only if it is an existing document. Deleted and unknown documents have a\r\n   * post-mutation version of SnapshotVersion.MIN.\r\n   */\n\n\n  Mutation.getPostMutationVersion = function (maybeDoc) {\n    if (maybeDoc instanceof Document) {\n      return maybeDoc.version;\n    } else {\n      return SnapshotVersion.MIN;\n    }\n  };\n\n  return Mutation;\n}();\n/**\r\n * A mutation that creates or replaces the document at the given key with the\r\n * object value contents.\r\n */\n\n\nvar SetMutation =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(SetMutation, _super);\n\n  function SetMutation(key, value, precondition) {\n    var _this = _super.call(this) || this;\n\n    _this.key = key;\n    _this.value = value;\n    _this.precondition = precondition;\n    _this.type = MutationType.Set;\n    return _this;\n  }\n\n  SetMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\n    this.verifyKeyMatches(maybeDoc);\n    assert(mutationResult.transformResults == null, 'Transform results received by SetMutation.'); // Unlike applyToLocalView, if we're applying a mutation to a remote\n    // document the server has accepted the mutation so the precondition must\n    // have held.\n\n    var version = mutationResult.version;\n    return new Document(this.key, version, {\n      hasCommittedMutations: true\n    }, this.value);\n  };\n\n  SetMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\n    this.verifyKeyMatches(maybeDoc);\n\n    if (!this.precondition.isValidFor(maybeDoc)) {\n      return maybeDoc;\n    }\n\n    var version = Mutation.getPostMutationVersion(maybeDoc);\n    return new Document(this.key, version, {\n      hasLocalMutations: true\n    }, this.value);\n  };\n\n  SetMutation.prototype.extractBaseValue = function (maybeDoc) {\n    return null;\n  };\n\n  SetMutation.prototype.isEqual = function (other) {\n    return other instanceof SetMutation && this.key.isEqual(other.key) && this.value.isEqual(other.value) && this.precondition.isEqual(other.precondition);\n  };\n\n  return SetMutation;\n}(Mutation);\n/**\r\n * A mutation that modifies fields of the document at the given key with the\r\n * given values. The values are applied through a field mask:\r\n *\r\n *  * When a field is in both the mask and the values, the corresponding field\r\n *    is updated.\r\n *  * When a field is in neither the mask nor the values, the corresponding\r\n *    field is unmodified.\r\n *  * When a field is in the mask but not in the values, the corresponding field\r\n *    is deleted.\r\n *  * When a field is not in the mask but is in the values, the values map is\r\n *    ignored.\r\n */\n\n\nvar PatchMutation =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(PatchMutation, _super);\n\n  function PatchMutation(key, data, fieldMask, precondition) {\n    var _this = _super.call(this) || this;\n\n    _this.key = key;\n    _this.data = data;\n    _this.fieldMask = fieldMask;\n    _this.precondition = precondition;\n    _this.type = MutationType.Patch;\n    return _this;\n  }\n\n  PatchMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\n    this.verifyKeyMatches(maybeDoc);\n    assert(mutationResult.transformResults == null, 'Transform results received by PatchMutation.');\n\n    if (!this.precondition.isValidFor(maybeDoc)) {\n      // Since the mutation was not rejected, we know that the  precondition\n      // matched on the backend. We therefore must not have the expected version\n      // of the document in our cache and return an UnknownDocument with the\n      // known updateTime.\n      return new UnknownDocument(this.key, mutationResult.version);\n    }\n\n    var newData = this.patchDocument(maybeDoc);\n    return new Document(this.key, mutationResult.version, {\n      hasCommittedMutations: true\n    }, newData);\n  };\n\n  PatchMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\n    this.verifyKeyMatches(maybeDoc);\n\n    if (!this.precondition.isValidFor(maybeDoc)) {\n      return maybeDoc;\n    }\n\n    var version = Mutation.getPostMutationVersion(maybeDoc);\n    var newData = this.patchDocument(maybeDoc);\n    return new Document(this.key, version, {\n      hasLocalMutations: true\n    }, newData);\n  };\n\n  PatchMutation.prototype.extractBaseValue = function (maybeDoc) {\n    return null;\n  };\n\n  PatchMutation.prototype.isEqual = function (other) {\n    return other instanceof PatchMutation && this.key.isEqual(other.key) && this.fieldMask.isEqual(other.fieldMask) && this.precondition.isEqual(other.precondition);\n  };\n  /**\r\n   * Patches the data of document if available or creates a new document. Note\r\n   * that this does not check whether or not the precondition of this patch\r\n   * holds.\r\n   */\n\n\n  PatchMutation.prototype.patchDocument = function (maybeDoc) {\n    var data;\n\n    if (maybeDoc instanceof Document) {\n      data = maybeDoc.data();\n    } else {\n      data = ObjectValue.EMPTY;\n    }\n\n    return this.patchObject(data);\n  };\n\n  PatchMutation.prototype.patchObject = function (data) {\n    var _this = this;\n\n    this.fieldMask.fields.forEach(function (fieldPath) {\n      if (!fieldPath.isEmpty()) {\n        var newValue = _this.data.field(fieldPath);\n\n        if (newValue !== null) {\n          data = data.set(fieldPath, newValue);\n        } else {\n          data = data.delete(fieldPath);\n        }\n      }\n    });\n    return data;\n  };\n\n  return PatchMutation;\n}(Mutation);\n/**\r\n * A mutation that modifies specific fields of the document with transform\r\n * operations. Currently the only supported transform is a server timestamp, but\r\n * IP Address, increment(n), etc. could be supported in the future.\r\n *\r\n * It is somewhat similar to a PatchMutation in that it patches specific fields\r\n * and has no effect when applied to a null or NoDocument (see comment on\r\n * Mutation for rationale).\r\n */\n\n\nvar TransformMutation =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(TransformMutation, _super);\n\n  function TransformMutation(key, fieldTransforms) {\n    var _this = _super.call(this) || this;\n\n    _this.key = key;\n    _this.fieldTransforms = fieldTransforms;\n    _this.type = MutationType.Transform; // NOTE: We set a precondition of exists: true as a safety-check, since we\n    // always combine TransformMutations with a SetMutation or PatchMutation which\n    // (if successful) should end up with an existing document.\n\n    _this.precondition = Precondition.exists(true);\n    return _this;\n  }\n\n  TransformMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\n    this.verifyKeyMatches(maybeDoc);\n    assert(mutationResult.transformResults != null, 'Transform results missing for TransformMutation.');\n\n    if (!this.precondition.isValidFor(maybeDoc)) {\n      // Since the mutation was not rejected, we know that the  precondition\n      // matched on the backend. We therefore must not have the expected version\n      // of the document in our cache and return an UnknownDocument with the\n      // known updateTime.\n      return new UnknownDocument(this.key, mutationResult.version);\n    }\n\n    var doc = this.requireDocument(maybeDoc);\n    var transformResults = this.serverTransformResults(maybeDoc, mutationResult.transformResults);\n    var version = mutationResult.version;\n    var newData = this.transformObject(doc.data(), transformResults);\n    return new Document(this.key, version, {\n      hasCommittedMutations: true\n    }, newData);\n  };\n\n  TransformMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\n    this.verifyKeyMatches(maybeDoc);\n\n    if (!this.precondition.isValidFor(maybeDoc)) {\n      return maybeDoc;\n    }\n\n    var doc = this.requireDocument(maybeDoc);\n    var transformResults = this.localTransformResults(localWriteTime, maybeDoc, baseDoc);\n    var newData = this.transformObject(doc.data(), transformResults);\n    return new Document(this.key, doc.version, {\n      hasLocalMutations: true\n    }, newData);\n  };\n\n  TransformMutation.prototype.extractBaseValue = function (maybeDoc) {\n    var baseObject = null;\n\n    for (var _i = 0, _a = this.fieldTransforms; _i < _a.length; _i++) {\n      var fieldTransform = _a[_i];\n      var existingValue = maybeDoc instanceof Document ? maybeDoc.field(fieldTransform.field) : undefined;\n      var coercedValue = fieldTransform.transform.computeBaseValue(existingValue || null);\n\n      if (coercedValue != null) {\n        if (baseObject == null) {\n          baseObject = ObjectValue.EMPTY.set(fieldTransform.field, coercedValue);\n        } else {\n          baseObject = baseObject.set(fieldTransform.field, coercedValue);\n        }\n      }\n    }\n\n    return baseObject;\n  };\n\n  TransformMutation.prototype.isEqual = function (other) {\n    return other instanceof TransformMutation && this.key.isEqual(other.key) && arrayEquals(this.fieldTransforms, other.fieldTransforms) && this.precondition.isEqual(other.precondition);\n  };\n  /**\r\n   * Asserts that the given MaybeDocument is actually a Document and verifies\r\n   * that it matches the key for this mutation. Since we only support\r\n   * transformations with precondition exists this method is guaranteed to be\r\n   * safe.\r\n   */\n\n\n  TransformMutation.prototype.requireDocument = function (maybeDoc) {\n    assert(maybeDoc instanceof Document, 'Unknown MaybeDocument type ' + maybeDoc);\n    var doc = maybeDoc;\n    assert(doc.key.isEqual(this.key), 'Can only transform a document with the same key');\n    return doc;\n  };\n  /**\r\n   * Creates a list of \"transform results\" (a transform result is a field value\r\n   * representing the result of applying a transform) for use after a\r\n   * TransformMutation has been acknowledged by the server.\r\n   *\r\n   * @param baseDoc The document prior to applying this mutation batch.\r\n   * @param serverTransformResults The transform results received by the server.\r\n   * @return The transform results list.\r\n   */\n\n\n  TransformMutation.prototype.serverTransformResults = function (baseDoc, serverTransformResults) {\n    var transformResults = [];\n    assert(this.fieldTransforms.length === serverTransformResults.length, \"server transform result count (\" + serverTransformResults.length + \") \" + (\"should match field transform count (\" + this.fieldTransforms.length + \")\"));\n\n    for (var i = 0; i < serverTransformResults.length; i++) {\n      var fieldTransform = this.fieldTransforms[i];\n      var transform = fieldTransform.transform;\n      var previousValue = null;\n\n      if (baseDoc instanceof Document) {\n        previousValue = baseDoc.field(fieldTransform.field);\n      }\n\n      transformResults.push(transform.applyToRemoteDocument(previousValue, serverTransformResults[i]));\n    }\n\n    return transformResults;\n  };\n  /**\r\n   * Creates a list of \"transform results\" (a transform result is a field value\r\n   * representing the result of applying a transform) for use when applying a\r\n   * TransformMutation locally.\r\n   *\r\n   * @param localWriteTime The local time of the transform mutation (used to\r\n   *     generate ServerTimestampValues).\r\n   * @param maybeDoc The current state of the document after applying all\r\n   *     previous mutations.\r\n   * @param baseDoc The document prior to applying this mutation batch.\r\n   * @return The transform results list.\r\n   */\n\n\n  TransformMutation.prototype.localTransformResults = function (localWriteTime, maybeDoc, baseDoc) {\n    var transformResults = [];\n\n    for (var _i = 0, _a = this.fieldTransforms; _i < _a.length; _i++) {\n      var fieldTransform = _a[_i];\n      var transform = fieldTransform.transform;\n      var previousValue = null;\n\n      if (maybeDoc instanceof Document) {\n        previousValue = maybeDoc.field(fieldTransform.field);\n      }\n\n      if (previousValue === null && baseDoc instanceof Document) {\n        // If the current document does not contain a value for the mutated\n        // field, use the value that existed before applying this mutation\n        // batch. This solves an edge case where a PatchMutation clears the\n        // values in a nested map before the TransformMutation is applied.\n        previousValue = baseDoc.field(fieldTransform.field);\n      }\n\n      transformResults.push(transform.applyToLocalView(previousValue, localWriteTime));\n    }\n\n    return transformResults;\n  };\n\n  TransformMutation.prototype.transformObject = function (data, transformResults) {\n    assert(transformResults.length === this.fieldTransforms.length, 'TransformResults length mismatch.');\n\n    for (var i = 0; i < this.fieldTransforms.length; i++) {\n      var fieldTransform = this.fieldTransforms[i];\n      var fieldPath = fieldTransform.field;\n      data = data.set(fieldPath, transformResults[i]);\n    }\n\n    return data;\n  };\n\n  return TransformMutation;\n}(Mutation);\n/** A mutation that deletes the document at the given key. */\n\n\nvar DeleteMutation =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(DeleteMutation, _super);\n\n  function DeleteMutation(key, precondition) {\n    var _this = _super.call(this) || this;\n\n    _this.key = key;\n    _this.precondition = precondition;\n    _this.type = MutationType.Delete;\n    return _this;\n  }\n\n  DeleteMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\n    this.verifyKeyMatches(maybeDoc);\n    assert(mutationResult.transformResults == null, 'Transform results received by DeleteMutation.'); // Unlike applyToLocalView, if we're applying a mutation to a remote\n    // document the server has accepted the mutation so the precondition must\n    // have held.\n\n    return new NoDocument(this.key, mutationResult.version, {\n      hasCommittedMutations: true\n    });\n  };\n\n  DeleteMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\n    this.verifyKeyMatches(maybeDoc);\n\n    if (!this.precondition.isValidFor(maybeDoc)) {\n      return maybeDoc;\n    }\n\n    if (maybeDoc) {\n      assert(maybeDoc.key.isEqual(this.key), 'Can only apply mutation to document with same key');\n    }\n\n    return new NoDocument(this.key, SnapshotVersion.forDeletedDoc());\n  };\n\n  DeleteMutation.prototype.extractBaseValue = function (maybeDoc) {\n    return null;\n  };\n\n  DeleteMutation.prototype.isEqual = function (other) {\n    return other instanceof DeleteMutation && this.key.isEqual(other.key) && this.precondition.isEqual(other.precondition);\n  };\n\n  return DeleteMutation;\n}(Mutation);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TypeOrder;\n\n(function (TypeOrder) {\n  // This order is defined by the backend.\n  TypeOrder[TypeOrder[\"NullValue\"] = 0] = \"NullValue\";\n  TypeOrder[TypeOrder[\"BooleanValue\"] = 1] = \"BooleanValue\";\n  TypeOrder[TypeOrder[\"NumberValue\"] = 2] = \"NumberValue\";\n  TypeOrder[TypeOrder[\"TimestampValue\"] = 3] = \"TimestampValue\";\n  TypeOrder[TypeOrder[\"StringValue\"] = 4] = \"StringValue\";\n  TypeOrder[TypeOrder[\"BlobValue\"] = 5] = \"BlobValue\";\n  TypeOrder[TypeOrder[\"RefValue\"] = 6] = \"RefValue\";\n  TypeOrder[TypeOrder[\"GeoPointValue\"] = 7] = \"GeoPointValue\";\n  TypeOrder[TypeOrder[\"ArrayValue\"] = 8] = \"ArrayValue\";\n  TypeOrder[TypeOrder[\"ObjectValue\"] = 9] = \"ObjectValue\";\n})(TypeOrder || (TypeOrder = {}));\n/** Defines the return value for pending server timestamps. */\n\n\nvar ServerTimestampBehavior;\n\n(function (ServerTimestampBehavior) {\n  ServerTimestampBehavior[ServerTimestampBehavior[\"Default\"] = 0] = \"Default\";\n  ServerTimestampBehavior[ServerTimestampBehavior[\"Estimate\"] = 1] = \"Estimate\";\n  ServerTimestampBehavior[ServerTimestampBehavior[\"Previous\"] = 2] = \"Previous\";\n})(ServerTimestampBehavior || (ServerTimestampBehavior = {}));\n/** Holds properties that define field value deserialization options. */\n\n\nvar FieldValueOptions =\n/** @class */\nfunction () {\n  function FieldValueOptions(serverTimestampBehavior, timestampsInSnapshots) {\n    this.serverTimestampBehavior = serverTimestampBehavior;\n    this.timestampsInSnapshots = timestampsInSnapshots;\n  }\n\n  FieldValueOptions.fromSnapshotOptions = function (options, timestampsInSnapshots) {\n    switch (options.serverTimestamps) {\n      case 'estimate':\n        return new FieldValueOptions(ServerTimestampBehavior.Estimate, timestampsInSnapshots);\n\n      case 'previous':\n        return new FieldValueOptions(ServerTimestampBehavior.Previous, timestampsInSnapshots);\n\n      case 'none': // Fall-through intended.\n\n      case undefined:\n        return new FieldValueOptions(ServerTimestampBehavior.Default, timestampsInSnapshots);\n\n      default:\n        return fail('fromSnapshotOptions() called with invalid options.');\n    }\n  };\n\n  return FieldValueOptions;\n}();\n/**\r\n * A field value represents a datatype as stored by Firestore.\r\n */\n\n\nvar FieldValue =\n/** @class */\nfunction () {\n  function FieldValue() {}\n\n  FieldValue.prototype.toString = function () {\n    var val = this.value();\n    return val === null ? 'null' : val.toString();\n  };\n\n  FieldValue.prototype.defaultCompareTo = function (other) {\n    assert(this.typeOrder !== other.typeOrder, 'Default compareTo should not be used for values of same type.');\n    var cmp = primitiveComparator(this.typeOrder, other.typeOrder);\n    return cmp;\n  };\n\n  return FieldValue;\n}();\n\nvar NullValue =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(NullValue, _super);\n\n  function NullValue() {\n    var _this = _super.call(this) || this;\n\n    _this.typeOrder = TypeOrder.NullValue; // internalValue is unused but we add it to work around\n    // https://github.com/Microsoft/TypeScript/issues/15585\n\n    _this.internalValue = null;\n    return _this;\n  }\n\n  NullValue.prototype.value = function (options) {\n    return null;\n  };\n\n  NullValue.prototype.isEqual = function (other) {\n    return other instanceof NullValue;\n  };\n\n  NullValue.prototype.compareTo = function (other) {\n    if (other instanceof NullValue) {\n      return 0;\n    }\n\n    return this.defaultCompareTo(other);\n  };\n\n  NullValue.INSTANCE = new NullValue();\n  return NullValue;\n}(FieldValue);\n\nvar BooleanValue =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(BooleanValue, _super);\n\n  function BooleanValue(internalValue) {\n    var _this = _super.call(this) || this;\n\n    _this.internalValue = internalValue;\n    _this.typeOrder = TypeOrder.BooleanValue;\n    return _this;\n  }\n\n  BooleanValue.prototype.value = function (options) {\n    return this.internalValue;\n  };\n\n  BooleanValue.prototype.isEqual = function (other) {\n    return other instanceof BooleanValue && this.internalValue === other.internalValue;\n  };\n\n  BooleanValue.prototype.compareTo = function (other) {\n    if (other instanceof BooleanValue) {\n      return primitiveComparator(this, other);\n    }\n\n    return this.defaultCompareTo(other);\n  };\n\n  BooleanValue.of = function (value) {\n    return value ? BooleanValue.TRUE : BooleanValue.FALSE;\n  };\n\n  BooleanValue.TRUE = new BooleanValue(true);\n  BooleanValue.FALSE = new BooleanValue(false);\n  return BooleanValue;\n}(FieldValue);\n/** Base class for IntegerValue and DoubleValue. */\n\n\nvar NumberValue =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(NumberValue, _super);\n\n  function NumberValue(internalValue) {\n    var _this = _super.call(this) || this;\n\n    _this.internalValue = internalValue;\n    _this.typeOrder = TypeOrder.NumberValue;\n    return _this;\n  }\n\n  NumberValue.prototype.value = function (options) {\n    return this.internalValue;\n  };\n\n  NumberValue.prototype.compareTo = function (other) {\n    if (other instanceof NumberValue) {\n      return numericComparator(this.internalValue, other.internalValue);\n    }\n\n    return this.defaultCompareTo(other);\n  };\n\n  return NumberValue;\n}(FieldValue);\n/** Utility function to compare doubles (using Firestore semantics for NaN). */\n\n\nfunction numericComparator(left, right) {\n  if (left < right) {\n    return -1;\n  } else if (left > right) {\n    return 1;\n  } else if (left === right) {\n    return 0;\n  } else {\n    // one or both are NaN.\n    if (isNaN(left)) {\n      return isNaN(right) ? 0 : -1;\n    } else {\n      return 1;\n    }\n  }\n}\n/**\r\n * Utility function to check numbers for equality using Firestore semantics\r\n * (NaN === NaN, -0.0 !== 0.0).\r\n */\n\n\nfunction numericEquals(left, right) {\n  // Implemented based on Object.is() polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  if (left === right) {\n    // +0 != -0\n    return left !== 0 || 1 / left === 1 / right;\n  } else {\n    // NaN == NaN\n    return left !== left && right !== right;\n  }\n}\n\nvar IntegerValue =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(IntegerValue, _super);\n\n  function IntegerValue() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  IntegerValue.prototype.isEqual = function (other) {\n    // NOTE: DoubleValue and IntegerValue instances may compareTo() the same,\n    // but that doesn't make them equal via isEqual().\n    if (other instanceof IntegerValue) {\n      return numericEquals(this.internalValue, other.internalValue);\n    } else {\n      return false;\n    }\n  };\n\n  return IntegerValue;\n}(NumberValue);\n\nvar DoubleValue =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(DoubleValue, _super);\n\n  function DoubleValue() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DoubleValue.prototype.isEqual = function (other) {\n    // NOTE: DoubleValue and IntegerValue instances may compareTo() the same,\n    // but that doesn't make them equal via isEqual().\n    if (other instanceof DoubleValue) {\n      return numericEquals(this.internalValue, other.internalValue);\n    } else {\n      return false;\n    }\n  };\n\n  DoubleValue.NAN = new DoubleValue(NaN);\n  DoubleValue.POSITIVE_INFINITY = new DoubleValue(Infinity);\n  DoubleValue.NEGATIVE_INFINITY = new DoubleValue(-Infinity);\n  return DoubleValue;\n}(NumberValue); // TODO(b/37267885): Add truncation support\n\n\nvar StringValue =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(StringValue, _super);\n\n  function StringValue(internalValue) {\n    var _this = _super.call(this) || this;\n\n    _this.internalValue = internalValue;\n    _this.typeOrder = TypeOrder.StringValue;\n    return _this;\n  }\n\n  StringValue.prototype.value = function (options) {\n    return this.internalValue;\n  };\n\n  StringValue.prototype.isEqual = function (other) {\n    return other instanceof StringValue && this.internalValue === other.internalValue;\n  };\n\n  StringValue.prototype.compareTo = function (other) {\n    if (other instanceof StringValue) {\n      return primitiveComparator(this.internalValue, other.internalValue);\n    }\n\n    return this.defaultCompareTo(other);\n  };\n\n  return StringValue;\n}(FieldValue);\n\nvar TimestampValue =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(TimestampValue, _super);\n\n  function TimestampValue(internalValue) {\n    var _this = _super.call(this) || this;\n\n    _this.internalValue = internalValue;\n    _this.typeOrder = TypeOrder.TimestampValue;\n    return _this;\n  }\n\n  TimestampValue.prototype.value = function (options) {\n    if (!options || options.timestampsInSnapshots) {\n      return this.internalValue;\n    } else {\n      return this.internalValue.toDate();\n    }\n  };\n\n  TimestampValue.prototype.isEqual = function (other) {\n    return other instanceof TimestampValue && this.internalValue.isEqual(other.internalValue);\n  };\n\n  TimestampValue.prototype.compareTo = function (other) {\n    if (other instanceof TimestampValue) {\n      return this.internalValue._compareTo(other.internalValue);\n    } else if (other instanceof ServerTimestampValue) {\n      // Concrete timestamps come before server timestamps.\n      return -1;\n    } else {\n      return this.defaultCompareTo(other);\n    }\n  };\n\n  return TimestampValue;\n}(FieldValue);\n/**\r\n * Represents a locally-applied ServerTimestamp.\r\n *\r\n * Notes:\r\n * - ServerTimestampValue instances are created as the result of applying a\r\n *   TransformMutation (see TransformMutation.applyTo()). They can only exist in\r\n *   the local view of a document. Therefore they do not need to be parsed or\r\n *   serialized.\r\n * - When evaluated locally (e.g. for snapshot.data()), they by default\r\n *   evaluate to `null`. This behavior can be configured by passing custom\r\n *   FieldValueOptions to value().\r\n * - With respect to other ServerTimestampValues, they sort by their\r\n *   localWriteTime.\r\n */\n\n\nvar ServerTimestampValue =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ServerTimestampValue, _super);\n\n  function ServerTimestampValue(localWriteTime, previousValue) {\n    var _this = _super.call(this) || this;\n\n    _this.localWriteTime = localWriteTime;\n    _this.previousValue = previousValue;\n    _this.typeOrder = TypeOrder.TimestampValue;\n    return _this;\n  }\n\n  ServerTimestampValue.prototype.value = function (options) {\n    if (options && options.serverTimestampBehavior === ServerTimestampBehavior.Estimate) {\n      return new TimestampValue(this.localWriteTime).value(options);\n    } else if (options && options.serverTimestampBehavior === ServerTimestampBehavior.Previous) {\n      return this.previousValue ? this.previousValue.value(options) : null;\n    } else {\n      return null;\n    }\n  };\n\n  ServerTimestampValue.prototype.isEqual = function (other) {\n    return other instanceof ServerTimestampValue && this.localWriteTime.isEqual(other.localWriteTime);\n  };\n\n  ServerTimestampValue.prototype.compareTo = function (other) {\n    if (other instanceof ServerTimestampValue) {\n      return this.localWriteTime._compareTo(other.localWriteTime);\n    } else if (other instanceof TimestampValue) {\n      // Server timestamps come after all concrete timestamps.\n      return 1;\n    } else {\n      return this.defaultCompareTo(other);\n    }\n  };\n\n  ServerTimestampValue.prototype.toString = function () {\n    return '<ServerTimestamp localTime=' + this.localWriteTime.toString() + '>';\n  };\n\n  return ServerTimestampValue;\n}(FieldValue);\n\nvar BlobValue =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(BlobValue, _super);\n\n  function BlobValue(internalValue) {\n    var _this = _super.call(this) || this;\n\n    _this.internalValue = internalValue;\n    _this.typeOrder = TypeOrder.BlobValue;\n    return _this;\n  }\n\n  BlobValue.prototype.value = function (options) {\n    return this.internalValue;\n  };\n\n  BlobValue.prototype.isEqual = function (other) {\n    return other instanceof BlobValue && this.internalValue.isEqual(other.internalValue);\n  };\n\n  BlobValue.prototype.compareTo = function (other) {\n    if (other instanceof BlobValue) {\n      return this.internalValue._compareTo(other.internalValue);\n    }\n\n    return this.defaultCompareTo(other);\n  };\n\n  return BlobValue;\n}(FieldValue);\n\nvar RefValue =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(RefValue, _super);\n\n  function RefValue(databaseId, key) {\n    var _this = _super.call(this) || this;\n\n    _this.databaseId = databaseId;\n    _this.key = key;\n    _this.typeOrder = TypeOrder.RefValue;\n    return _this;\n  }\n\n  RefValue.prototype.value = function (options) {\n    return this.key;\n  };\n\n  RefValue.prototype.isEqual = function (other) {\n    if (other instanceof RefValue) {\n      return this.key.isEqual(other.key) && this.databaseId.isEqual(other.databaseId);\n    } else {\n      return false;\n    }\n  };\n\n  RefValue.prototype.compareTo = function (other) {\n    if (other instanceof RefValue) {\n      var cmp = this.databaseId.compareTo(other.databaseId);\n      return cmp !== 0 ? cmp : DocumentKey.comparator(this.key, other.key);\n    }\n\n    return this.defaultCompareTo(other);\n  };\n\n  return RefValue;\n}(FieldValue);\n\nvar GeoPointValue =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(GeoPointValue, _super);\n\n  function GeoPointValue(internalValue) {\n    var _this = _super.call(this) || this;\n\n    _this.internalValue = internalValue;\n    _this.typeOrder = TypeOrder.GeoPointValue;\n    return _this;\n  }\n\n  GeoPointValue.prototype.value = function (options) {\n    return this.internalValue;\n  };\n\n  GeoPointValue.prototype.isEqual = function (other) {\n    return other instanceof GeoPointValue && this.internalValue.isEqual(other.internalValue);\n  };\n\n  GeoPointValue.prototype.compareTo = function (other) {\n    if (other instanceof GeoPointValue) {\n      return this.internalValue._compareTo(other.internalValue);\n    }\n\n    return this.defaultCompareTo(other);\n  };\n\n  return GeoPointValue;\n}(FieldValue);\n\nvar ObjectValue =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ObjectValue, _super);\n\n  function ObjectValue(internalValue) {\n    var _this = _super.call(this) || this;\n\n    _this.internalValue = internalValue;\n    _this.typeOrder = TypeOrder.ObjectValue;\n    return _this;\n  }\n\n  ObjectValue.prototype.value = function (options) {\n    var result = {};\n    this.internalValue.inorderTraversal(function (key, val) {\n      result[key] = val.value(options);\n    });\n    return result;\n  };\n\n  ObjectValue.prototype.forEach = function (action) {\n    this.internalValue.inorderTraversal(action);\n  };\n\n  ObjectValue.prototype.isEqual = function (other) {\n    if (other instanceof ObjectValue) {\n      var it1 = this.internalValue.getIterator();\n      var it2 = other.internalValue.getIterator();\n\n      while (it1.hasNext() && it2.hasNext()) {\n        var next1 = it1.getNext();\n        var next2 = it2.getNext();\n\n        if (next1.key !== next2.key || !next1.value.isEqual(next2.value)) {\n          return false;\n        }\n      }\n\n      return !it1.hasNext() && !it2.hasNext();\n    }\n\n    return false;\n  };\n\n  ObjectValue.prototype.compareTo = function (other) {\n    if (other instanceof ObjectValue) {\n      var it1 = this.internalValue.getIterator();\n      var it2 = other.internalValue.getIterator();\n\n      while (it1.hasNext() && it2.hasNext()) {\n        var next1 = it1.getNext();\n        var next2 = it2.getNext();\n        var cmp = primitiveComparator(next1.key, next2.key) || next1.value.compareTo(next2.value);\n\n        if (cmp) {\n          return cmp;\n        }\n      } // Only equal if both iterators are exhausted\n\n\n      return primitiveComparator(it1.hasNext(), it2.hasNext());\n    } else {\n      return this.defaultCompareTo(other);\n    }\n  };\n\n  ObjectValue.prototype.set = function (path, to) {\n    assert(!path.isEmpty(), 'Cannot set field for empty path on ObjectValue');\n\n    if (path.length === 1) {\n      return this.setChild(path.firstSegment(), to);\n    } else {\n      var child = this.child(path.firstSegment());\n\n      if (!(child instanceof ObjectValue)) {\n        child = ObjectValue.EMPTY;\n      }\n\n      var newChild = child.set(path.popFirst(), to);\n      return this.setChild(path.firstSegment(), newChild);\n    }\n  };\n\n  ObjectValue.prototype.delete = function (path) {\n    assert(!path.isEmpty(), 'Cannot delete field for empty path on ObjectValue');\n\n    if (path.length === 1) {\n      return new ObjectValue(this.internalValue.remove(path.firstSegment()));\n    } else {\n      // nested field\n      var child = this.child(path.firstSegment());\n\n      if (child instanceof ObjectValue) {\n        var newChild = child.delete(path.popFirst());\n        return new ObjectValue(this.internalValue.insert(path.firstSegment(), newChild));\n      } else {\n        // Don't actually change a primitive value to an object for a delete\n        return this;\n      }\n    }\n  };\n\n  ObjectValue.prototype.contains = function (path) {\n    return this.field(path) !== null;\n  };\n\n  ObjectValue.prototype.field = function (path) {\n    assert(!path.isEmpty(), \"Can't get field of empty path\");\n    var field = this;\n    path.forEach(function (pathSegment) {\n      if (field instanceof ObjectValue) {\n        field = field.internalValue.get(pathSegment);\n      } else {\n        field = null;\n      }\n    });\n    return field;\n  };\n  /**\r\n   * Returns a FieldMask built from all FieldPaths starting from this ObjectValue,\r\n   * including paths from nested objects.\r\n   */\n\n\n  ObjectValue.prototype.fieldMask = function () {\n    var fields = new SortedSet(FieldPath.comparator);\n    this.internalValue.forEach(function (key, value) {\n      var currentPath = new FieldPath([key]);\n\n      if (value instanceof ObjectValue) {\n        var nestedMask = value.fieldMask();\n        var nestedFields = nestedMask.fields;\n\n        if (nestedFields.isEmpty()) {\n          // Preserve the empty map by adding it to the FieldMask.\n          fields = fields.add(currentPath);\n        } else {\n          // For nested and non-empty ObjectValues, add the FieldPath of the\n          // leaf nodes.\n          nestedFields.forEach(function (nestedPath) {\n            fields = fields.add(currentPath.child(nestedPath));\n          });\n        }\n      } else {\n        fields = fields.add(currentPath);\n      }\n    });\n    return FieldMask.fromSet(fields);\n  };\n\n  ObjectValue.prototype.toString = function () {\n    return this.internalValue.toString();\n  };\n\n  ObjectValue.prototype.child = function (childName) {\n    return this.internalValue.get(childName) || undefined;\n  };\n\n  ObjectValue.prototype.setChild = function (childName, value) {\n    return new ObjectValue(this.internalValue.insert(childName, value));\n  };\n\n  ObjectValue.EMPTY = new ObjectValue(new SortedMap(primitiveComparator));\n  return ObjectValue;\n}(FieldValue);\n\nvar ArrayValue =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ArrayValue, _super);\n\n  function ArrayValue(internalValue) {\n    var _this = _super.call(this) || this;\n\n    _this.internalValue = internalValue;\n    _this.typeOrder = TypeOrder.ArrayValue;\n    return _this;\n  }\n\n  ArrayValue.prototype.value = function (options) {\n    return this.internalValue.map(function (v) {\n      return v.value(options);\n    });\n  };\n  /**\r\n   * Returns true if the given value is contained in this array.\r\n   */\n\n\n  ArrayValue.prototype.contains = function (value) {\n    for (var _i = 0, _a = this.internalValue; _i < _a.length; _i++) {\n      var element = _a[_i];\n\n      if (element.isEqual(value)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  ArrayValue.prototype.forEach = function (action) {\n    this.internalValue.forEach(action);\n  };\n\n  ArrayValue.prototype.isEqual = function (other) {\n    if (other instanceof ArrayValue) {\n      if (this.internalValue.length !== other.internalValue.length) {\n        return false;\n      }\n\n      for (var i = 0; i < this.internalValue.length; i++) {\n        if (!this.internalValue[i].isEqual(other.internalValue[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  ArrayValue.prototype.compareTo = function (other) {\n    if (other instanceof ArrayValue) {\n      var minLength = Math.min(this.internalValue.length, other.internalValue.length);\n\n      for (var i = 0; i < minLength; i++) {\n        var cmp = this.internalValue[i].compareTo(other.internalValue[i]);\n\n        if (cmp) {\n          return cmp;\n        }\n      }\n\n      return primitiveComparator(this.internalValue.length, other.internalValue.length);\n    } else {\n      return this.defaultCompareTo(other);\n    }\n  };\n\n  ArrayValue.prototype.toString = function () {\n    var descriptions = this.internalValue.map(function (v) {\n      return v.toString();\n    });\n    return \"[\" + descriptions.join(',') + \"]\";\n  };\n\n  return ArrayValue;\n}(FieldValue);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The result of a lookup for a given path may be an existing document or a\r\n * marker that this document does not exist at a given version.\r\n */\n\n\nvar MaybeDocument =\n/** @class */\nfunction () {\n  function MaybeDocument(key, version) {\n    this.key = key;\n    this.version = version;\n  }\n\n  MaybeDocument.compareByKey = function (d1, d2) {\n    return DocumentKey.comparator(d1.key, d2.key);\n  };\n\n  return MaybeDocument;\n}();\n/**\r\n * Represents a document in Firestore with a key, version, data and whether the\r\n * data has local mutations applied to it.\r\n */\n\n\nvar Document =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Document, _super);\n\n  function Document(key, version, options, objectValue, proto, converter) {\n    var _this = _super.call(this, key, version) || this;\n\n    _this.objectValue = objectValue;\n    _this.proto = proto;\n    _this.converter = converter;\n    assert(_this.objectValue !== undefined || _this.proto !== undefined && _this.converter !== undefined, 'If objectValue is not defined, proto and converter need to be set.');\n    _this.hasLocalMutations = !!options.hasLocalMutations;\n    _this.hasCommittedMutations = !!options.hasCommittedMutations;\n    return _this;\n  }\n\n  Document.prototype.field = function (path) {\n    if (this.objectValue) {\n      return this.objectValue.field(path);\n    } else {\n      if (!this.fieldValueCache) {\n        // TODO(b/136090445): Remove the cache when `getField` is no longer\n        // called during Query ordering.\n        this.fieldValueCache = new Map();\n      }\n\n      var canonicalPath = path.canonicalString();\n      var fieldValue = this.fieldValueCache.get(canonicalPath);\n\n      if (fieldValue === undefined) {\n        // Instead of deserializing the full Document proto, we only\n        // deserialize the value at the requested field path. This speeds up\n        // Query execution as query filters can discard documents based on a\n        // single field.\n        var protoValue = this.getProtoField(path);\n\n        if (protoValue === undefined) {\n          fieldValue = null;\n        } else {\n          fieldValue = this.converter(protoValue);\n        }\n\n        this.fieldValueCache.set(canonicalPath, fieldValue);\n      }\n\n      return fieldValue;\n    }\n  };\n\n  Document.prototype.data = function () {\n    var _this = this;\n\n    if (!this.objectValue) {\n      var result_1 = ObjectValue.EMPTY;\n      forEach(this.proto.fields || {}, function (key, value) {\n        result_1 = result_1.set(new FieldPath([key]), _this.converter(value));\n      });\n      this.objectValue = result_1; // Once objectValue is computed, values inside the fieldValueCache are no\n      // longer accessed.\n\n      this.fieldValueCache = undefined;\n    }\n\n    return this.objectValue;\n  };\n\n  Document.prototype.value = function () {\n    return this.data().value();\n  };\n\n  Document.prototype.isEqual = function (other) {\n    return other instanceof Document && this.key.isEqual(other.key) && this.version.isEqual(other.version) && this.hasLocalMutations === other.hasLocalMutations && this.hasCommittedMutations === other.hasCommittedMutations && this.data().isEqual(other.data());\n  };\n\n  Document.prototype.toString = function () {\n    return \"Document(\" + this.key + \", \" + this.version + \", \" + this.data().toString() + \", \" + (\"{hasLocalMutations: \" + this.hasLocalMutations + \"}), \") + (\"{hasCommittedMutations: \" + this.hasCommittedMutations + \"})\");\n  };\n\n  Object.defineProperty(Document.prototype, \"hasPendingWrites\", {\n    get: function get() {\n      return this.hasLocalMutations || this.hasCommittedMutations;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns the nested Protobuf value for 'path`. Can only be called if\r\n   * `proto` was provided at construction time.\r\n   */\n\n  Document.prototype.getProtoField = function (path) {\n    assert(this.proto !== undefined, 'Can only call getProtoField() when proto is defined');\n    var protoValue = this.proto.fields ? this.proto.fields[path.firstSegment()] : undefined;\n\n    for (var i = 1; i < path.length; ++i) {\n      if (!protoValue || !protoValue.mapValue || !protoValue.mapValue.fields) {\n        return undefined;\n      }\n\n      protoValue = protoValue.mapValue.fields[path.get(i)];\n    }\n\n    return protoValue;\n  };\n\n  Document.compareByField = function (field, d1, d2) {\n    var v1 = d1.field(field);\n    var v2 = d2.field(field);\n\n    if (v1 !== null && v2 !== null) {\n      return v1.compareTo(v2);\n    } else {\n      return fail(\"Trying to compare documents on fields that don't exist\");\n    }\n  };\n\n  return Document;\n}(MaybeDocument);\n/**\r\n * A class representing a deleted document.\r\n * Version is set to 0 if we don't point to any specific time, otherwise it\r\n * denotes time we know it didn't exist at.\r\n */\n\n\nvar NoDocument =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(NoDocument, _super);\n\n  function NoDocument(key, version, options) {\n    var _this = _super.call(this, key, version) || this;\n\n    _this.hasCommittedMutations = !!(options && options.hasCommittedMutations);\n    return _this;\n  }\n\n  NoDocument.prototype.toString = function () {\n    return \"NoDocument(\" + this.key + \", \" + this.version + \")\";\n  };\n\n  Object.defineProperty(NoDocument.prototype, \"hasPendingWrites\", {\n    get: function get() {\n      return this.hasCommittedMutations;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NoDocument.prototype.isEqual = function (other) {\n    return other instanceof NoDocument && other.hasCommittedMutations === this.hasCommittedMutations && other.version.isEqual(this.version) && other.key.isEqual(this.key);\n  };\n\n  return NoDocument;\n}(MaybeDocument);\n/**\r\n * A class representing an existing document whose data is unknown (e.g. a\r\n * document that was updated without a known base document).\r\n */\n\n\nvar UnknownDocument =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(UnknownDocument, _super);\n\n  function UnknownDocument() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  UnknownDocument.prototype.toString = function () {\n    return \"UnknownDocument(\" + this.key + \", \" + this.version + \")\";\n  };\n\n  Object.defineProperty(UnknownDocument.prototype, \"hasPendingWrites\", {\n    get: function get() {\n      return true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  UnknownDocument.prototype.isEqual = function (other) {\n    return other instanceof UnknownDocument && other.version.isEqual(this.version) && other.key.isEqual(this.key);\n  };\n\n  return UnknownDocument;\n}(MaybeDocument);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A map implementation that uses objects as keys. Objects must implement the\r\n * Equatable interface and must be immutable. Entries in the map are stored\r\n * together with the key being produced from the mapKeyFn. This map\r\n * automatically handles collisions of keys.\r\n */\n\n\nvar ObjectMap =\n/** @class */\nfunction () {\n  function ObjectMap(mapKeyFn) {\n    this.mapKeyFn = mapKeyFn;\n    /**\r\n     * The inner map for a key -> value pair. Due to the possibility of\r\n     * collisions we keep a list of entries that we do a linear search through\r\n     * to find an actual match. Note that collisions should be rare, so we still\r\n     * expect near constant time lookups in practice.\r\n     */\n\n    this.inner = {};\n  }\n  /** Get a value for this key, or undefined if it does not exist. */\n\n\n  ObjectMap.prototype.get = function (key) {\n    var id = this.mapKeyFn(key);\n    var matches = this.inner[id];\n\n    if (matches === undefined) {\n      return undefined;\n    }\n\n    for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {\n      var _a = matches_1[_i],\n          otherKey = _a[0],\n          value = _a[1];\n\n      if (otherKey.isEqual(key)) {\n        return value;\n      }\n    }\n\n    return undefined;\n  };\n\n  ObjectMap.prototype.has = function (key) {\n    return this.get(key) !== undefined;\n  };\n  /** Put this key and value in the map. */\n\n\n  ObjectMap.prototype.set = function (key, value) {\n    var id = this.mapKeyFn(key);\n    var matches = this.inner[id];\n\n    if (matches === undefined) {\n      this.inner[id] = [[key, value]];\n      return;\n    }\n\n    for (var i = 0; i < matches.length; i++) {\n      if (matches[i][0].isEqual(key)) {\n        matches[i] = [key, value];\n        return;\n      }\n    }\n\n    matches.push([key, value]);\n  };\n  /**\r\n   * Remove this key from the map. Returns a boolean if anything was deleted.\r\n   */\n\n\n  ObjectMap.prototype.delete = function (key) {\n    var id = this.mapKeyFn(key);\n    var matches = this.inner[id];\n\n    if (matches === undefined) {\n      return false;\n    }\n\n    for (var i = 0; i < matches.length; i++) {\n      if (matches[i][0].isEqual(key)) {\n        if (matches.length === 1) {\n          delete this.inner[id];\n        } else {\n          matches.splice(i, 1);\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  ObjectMap.prototype.forEach = function (fn) {\n    forEach(this.inner, function (_, entries) {\n      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n        var _a = entries_1[_i],\n            k = _a[0],\n            v = _a[1];\n        fn(k, v);\n      }\n    });\n  };\n\n  ObjectMap.prototype.isEmpty = function () {\n    return isEmpty(this.inner);\n  };\n\n  return ObjectMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory buffer of entries to be written to a RemoteDocumentCache.\r\n * It can be used to batch up a set of changes to be written to the cache, but\r\n * additionally supports reading entries back with the `getEntry()` method,\r\n * falling back to the underlying RemoteDocumentCache if no entry is\r\n * buffered.\r\n *\r\n * Entries added to the cache *must* be read first. This is to facilitate\r\n * calculating the size delta of the pending changes.\r\n *\r\n * PORTING NOTE: This class was implemented then removed from other platforms.\r\n * If byte-counting ends up being needed on the other platforms, consider\r\n * porting this class as part of that implementation work.\r\n */\n\n\nvar RemoteDocumentChangeBuffer =\n/** @class */\nfunction () {\n  function RemoteDocumentChangeBuffer() {\n    // A mapping of document key to the new cache entry that should be written (or null if any\n    // existing cache entry should be removed).\n    this.changes = new ObjectMap(function (key) {\n      return key.toString();\n    });\n    this.changesApplied = false;\n  }\n  /**\r\n   * Buffers a `RemoteDocumentCache.addEntry()` call.\r\n   *\r\n   * You can only modify documents that have already been retrieved via\r\n   * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\r\n   */\n\n\n  RemoteDocumentChangeBuffer.prototype.addEntry = function (maybeDocument) {\n    this.assertNotApplied();\n    this.changes.set(maybeDocument.key, maybeDocument);\n  };\n  /**\r\n   * Buffers a `RemoteDocumentCache.removeEntry()` call.\r\n   *\r\n   * You can only remove documents that have already been retrieved via\r\n   * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\r\n   */\n\n\n  RemoteDocumentChangeBuffer.prototype.removeEntry = function (key) {\n    this.assertNotApplied();\n    this.changes.set(key, null);\n  };\n  /**\r\n   * Looks up an entry in the cache. The buffered changes will first be checked,\r\n   * and if no buffered change applies, this will forward to\r\n   * `RemoteDocumentCache.getEntry()`.\r\n   *\r\n   * @param transaction The transaction in which to perform any persistence\r\n   *     operations.\r\n   * @param documentKey The key of the entry to look up.\r\n   * @return The cached Document or NoDocument entry, or null if we have nothing\r\n   * cached.\r\n   */\n\n\n  RemoteDocumentChangeBuffer.prototype.getEntry = function (transaction, documentKey) {\n    this.assertNotApplied();\n    var bufferedEntry = this.changes.get(documentKey);\n\n    if (bufferedEntry !== undefined) {\n      return PersistencePromise.resolve(bufferedEntry);\n    } else {\n      return this.getFromCache(transaction, documentKey);\n    }\n  };\n  /**\r\n   * Looks up several entries in the cache, forwarding to\r\n   * `RemoteDocumentCache.getEntry()`.\r\n   *\r\n   * @param transaction The transaction in which to perform any persistence\r\n   *     operations.\r\n   * @param documentKeys The keys of the entries to look up.\r\n   * @return A map of cached `Document`s or `NoDocument`s, indexed by key. If an\r\n   *     entry cannot be found, the corresponding key will be mapped to a null\r\n   *     value.\r\n   */\n\n\n  RemoteDocumentChangeBuffer.prototype.getEntries = function (transaction, documentKeys) {\n    return this.getAllFromCache(transaction, documentKeys);\n  };\n  /**\r\n   * Applies buffered changes to the underlying RemoteDocumentCache, using\r\n   * the provided transaction.\r\n   */\n\n\n  RemoteDocumentChangeBuffer.prototype.apply = function (transaction) {\n    this.assertNotApplied();\n    this.changesApplied = true;\n    return this.applyChanges(transaction);\n  };\n  /** Helper to assert this.changes is not null  */\n\n\n  RemoteDocumentChangeBuffer.prototype.assertNotApplied = function () {\n    assert(!this.changesApplied, 'Changes have already been applied.');\n  };\n\n  return RemoteDocumentChangeBuffer;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar REMOTE_DOCUMENT_CHANGE_MISSING_ERR_MSG = 'The remote document changelog no longer contains all changes for all ' + 'local query views. It may be necessary to rebuild these views.';\n\nvar IndexedDbRemoteDocumentCache =\n/** @class */\nfunction () {\n  /**\r\n   * @param {LocalSerializer} serializer The document serializer.\r\n   * @param {IndexManager} indexManager The query indexes that need to be maintained.\r\n   * @param keepDocumentChangeLog Whether to keep a document change log in\r\n   * IndexedDb. This change log is required for Multi-Tab synchronization, but\r\n   * not needed in clients that don't share access to their remote document\r\n   * cache.\r\n   */\n  function IndexedDbRemoteDocumentCache(serializer, indexManager, keepDocumentChangeLog) {\n    this.serializer = serializer;\n    this.indexManager = indexManager;\n    this.keepDocumentChangeLog = keepDocumentChangeLog;\n    /** The last id read by `getNewDocumentChanges()`. */\n\n    this._lastProcessedDocumentChangeId = 0;\n  }\n\n  Object.defineProperty(IndexedDbRemoteDocumentCache.prototype, \"lastProcessedDocumentChangeId\", {\n    get: function get() {\n      return this._lastProcessedDocumentChangeId;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Starts up the remote document cache.\r\n   *\r\n   * Reads the ID of the last  document change from the documentChanges store.\r\n   * Existing changes will not be returned as part of\r\n   * `getNewDocumentChanges()`.\r\n   */\n  // PORTING NOTE: This is only used for multi-tab synchronization.\n\n  IndexedDbRemoteDocumentCache.prototype.start = function (transaction) {\n    var store = SimpleDb.getStore(transaction, DbRemoteDocumentChanges.store);\n    return this.synchronizeLastDocumentChangeId(store);\n  };\n  /**\r\n   * Adds the supplied entries to the cache.\r\n   *\r\n   * All calls of `addEntry` are required to go through the RemoteDocumentChangeBuffer\r\n   * returned by `newChangeBuffer()` to ensure proper accounting of metadata.\r\n   */\n\n\n  IndexedDbRemoteDocumentCache.prototype.addEntry = function (transaction, key, doc) {\n    var _this = this;\n\n    var documentStore = remoteDocumentsStore(transaction);\n    return documentStore.put(dbKey(key), doc).next(function () {\n      _this.indexManager.addToCollectionParentIndex(transaction, key.path.popLast());\n    });\n  };\n  /**\r\n   * Removes a document from the cache.\r\n   *\r\n   * All calls of `removeEntry`  are required to go through the RemoteDocumentChangeBuffer\r\n   * returned by `newChangeBuffer()` to ensure proper accounting of metadata.\r\n   */\n\n\n  IndexedDbRemoteDocumentCache.prototype.removeEntry = function (transaction, documentKey) {\n    var store = remoteDocumentsStore(transaction);\n    var key = dbKey(documentKey);\n    return store.delete(key);\n  };\n  /**\r\n   * Updates the document change log and adds the given delta to the cached current size.\r\n   * Callers to `addEntry()` and `removeEntry()` *must* call this afterwards to update the\r\n   * cache's metadata.\r\n   */\n\n\n  IndexedDbRemoteDocumentCache.prototype.updateMetadata = function (transaction, changedKeys, sizeDelta) {\n    var _this = this;\n\n    return this.getMetadata(transaction).next(function (metadata) {\n      metadata.byteSize += sizeDelta;\n      return _this.setMetadata(transaction, metadata).next(function () {\n        if (_this.keepDocumentChangeLog) {\n          return documentChangesStore(transaction).put({\n            changes: _this.serializer.toDbResourcePaths(changedKeys)\n          });\n        }\n      });\n    });\n  };\n\n  IndexedDbRemoteDocumentCache.prototype.getEntry = function (transaction, documentKey) {\n    var _this = this;\n\n    return remoteDocumentsStore(transaction).get(dbKey(documentKey)).next(function (dbRemoteDoc) {\n      return dbRemoteDoc ? _this.serializer.fromDbRemoteDocument(dbRemoteDoc) : null;\n    });\n  };\n  /**\r\n   * Looks up an entry in the cache.\r\n   *\r\n   * @param documentKey The key of the entry to look up.\r\n   * @return The cached MaybeDocument entry and its size, or null if we have nothing cached.\r\n   */\n\n\n  IndexedDbRemoteDocumentCache.prototype.getSizedEntry = function (transaction, documentKey) {\n    var _this = this;\n\n    return remoteDocumentsStore(transaction).get(dbKey(documentKey)).next(function (dbRemoteDoc) {\n      return dbRemoteDoc ? {\n        maybeDocument: _this.serializer.fromDbRemoteDocument(dbRemoteDoc),\n        size: dbDocumentSize(dbRemoteDoc)\n      } : null;\n    });\n  };\n\n  IndexedDbRemoteDocumentCache.prototype.getEntries = function (transaction, documentKeys) {\n    var _this = this;\n\n    var results = nullableMaybeDocumentMap();\n    return this.forEachDbEntry(transaction, documentKeys, function (key, dbRemoteDoc) {\n      if (dbRemoteDoc) {\n        results = results.insert(key, _this.serializer.fromDbRemoteDocument(dbRemoteDoc));\n      } else {\n        results = results.insert(key, null);\n      }\n    }).next(function () {\n      return results;\n    });\n  };\n  /**\r\n   * Looks up several entries in the cache.\r\n   *\r\n   * @param documentKeys The set of keys entries to look up.\r\n   * @return A map of MaybeDocuments indexed by key (if a document cannot be\r\n   *     found, the key will be mapped to null) and a map of sizes indexed by\r\n   *     key (zero if the key cannot be found).\r\n   */\n\n\n  IndexedDbRemoteDocumentCache.prototype.getSizedEntries = function (transaction, documentKeys) {\n    var _this = this;\n\n    var results = nullableMaybeDocumentMap();\n    var sizeMap = new SortedMap(DocumentKey.comparator);\n    return this.forEachDbEntry(transaction, documentKeys, function (key, dbRemoteDoc) {\n      if (dbRemoteDoc) {\n        results = results.insert(key, _this.serializer.fromDbRemoteDocument(dbRemoteDoc));\n        sizeMap = sizeMap.insert(key, dbDocumentSize(dbRemoteDoc));\n      } else {\n        results = results.insert(key, null);\n        sizeMap = sizeMap.insert(key, 0);\n      }\n    }).next(function () {\n      return {\n        maybeDocuments: results,\n        sizeMap: sizeMap\n      };\n    });\n  };\n\n  IndexedDbRemoteDocumentCache.prototype.forEachDbEntry = function (transaction, documentKeys, callback) {\n    if (documentKeys.isEmpty()) {\n      return PersistencePromise.resolve();\n    }\n\n    var range = IDBKeyRange.bound(documentKeys.first().path.toArray(), documentKeys.last().path.toArray());\n    var keyIter = documentKeys.getIterator();\n    var nextKey = keyIter.getNext();\n    return remoteDocumentsStore(transaction).iterate({\n      range: range\n    }, function (potentialKeyRaw, dbRemoteDoc, control) {\n      var potentialKey = DocumentKey.fromSegments(potentialKeyRaw); // Go through keys not found in cache.\n\n      while (nextKey && DocumentKey.comparator(nextKey, potentialKey) < 0) {\n        callback(nextKey, null);\n        nextKey = keyIter.getNext();\n      }\n\n      if (nextKey && nextKey.isEqual(potentialKey)) {\n        // Key found in cache.\n        callback(nextKey, dbRemoteDoc);\n        nextKey = keyIter.hasNext() ? keyIter.getNext() : null;\n      } // Skip to the next key (if there is one).\n\n\n      if (nextKey) {\n        control.skip(nextKey.path.toArray());\n      } else {\n        control.done();\n      }\n    }).next(function () {\n      // The rest of the keys are not in the cache. One case where `iterate`\n      // above won't go through them is when the cache is empty.\n      while (nextKey) {\n        callback(nextKey, null);\n        nextKey = keyIter.hasNext() ? keyIter.getNext() : null;\n      }\n    });\n  };\n\n  IndexedDbRemoteDocumentCache.prototype.getDocumentsMatchingQuery = function (transaction, query) {\n    var _this = this;\n\n    assert(!query.isCollectionGroupQuery(), 'CollectionGroup queries should be handled in LocalDocumentsView');\n    var results = documentMap();\n    var immediateChildrenPathLength = query.path.length + 1; // Documents are ordered by key, so we can use a prefix scan to narrow down\n    // the documents we need to match the query against.\n\n    var startKey = query.path.toArray();\n    var range = IDBKeyRange.lowerBound(startKey);\n    return remoteDocumentsStore(transaction).iterate({\n      range: range\n    }, function (key, dbRemoteDoc, control) {\n      // The query is actually returning any path that starts with the query\n      // path prefix which may include documents in subcollections. For\n      // example, a query on 'rooms' will return rooms/abc/messages/xyx but we\n      // shouldn't match it. Fix this by discarding rows with document keys\n      // more than one segment longer than the query path.\n      if (key.length !== immediateChildrenPathLength) {\n        return;\n      }\n\n      var maybeDoc = _this.serializer.fromDbRemoteDocument(dbRemoteDoc);\n\n      if (!query.path.isPrefixOf(maybeDoc.key.path)) {\n        control.done();\n      } else if (maybeDoc instanceof Document && query.matches(maybeDoc)) {\n        results = results.insert(maybeDoc.key, maybeDoc);\n      }\n    }).next(function () {\n      return results;\n    });\n  };\n\n  IndexedDbRemoteDocumentCache.prototype.getNewDocumentChanges = function (transaction) {\n    var _this = this;\n\n    assert(this.keepDocumentChangeLog, 'Can only call getNewDocumentChanges() when document change log is enabled');\n    var changedKeys = documentKeySet();\n    var changedDocs = maybeDocumentMap();\n    var range = IDBKeyRange.lowerBound(this._lastProcessedDocumentChangeId + 1);\n    var firstIteration = true;\n    var changesStore = documentChangesStore(transaction);\n    return changesStore.iterate({\n      range: range\n    }, function (_, documentChange) {\n      if (firstIteration) {\n        firstIteration = false; // If our client was throttled for more than 30 minutes, another\n        // client may have garbage collected the remote document changelog.\n\n        if (_this._lastProcessedDocumentChangeId + 1 !== documentChange.id) {\n          // Reset the `lastProcessedDocumentChangeId` to allow further\n          // invocations to successfully return the changes after this\n          // rejection.\n          return _this.synchronizeLastDocumentChangeId(changesStore).next(function () {\n            return PersistencePromise.reject(new FirestoreError(Code.DATA_LOSS, REMOTE_DOCUMENT_CHANGE_MISSING_ERR_MSG));\n          });\n        }\n      }\n\n      changedKeys = changedKeys.unionWith(_this.serializer.fromDbResourcePaths(documentChange.changes));\n      _this._lastProcessedDocumentChangeId = documentChange.id;\n    }).next(function () {\n      var documentPromises = [];\n      changedKeys.forEach(function (key) {\n        documentPromises.push(_this.getEntry(transaction, key).next(function (maybeDocument) {\n          var doc = maybeDocument || new NoDocument(key, SnapshotVersion.forDeletedDoc());\n          changedDocs = changedDocs.insert(key, doc);\n        }));\n      });\n      return PersistencePromise.waitFor(documentPromises);\n    }).next(function () {\n      return changedDocs;\n    });\n  };\n  /**\r\n   * Removes all changes in the remote document changelog through `changeId`\r\n   * (inclusive).\r\n   */\n\n\n  IndexedDbRemoteDocumentCache.prototype.removeDocumentChangesThroughChangeId = function (transaction, changeId) {\n    var range = IDBKeyRange.upperBound(changeId);\n    return documentChangesStore(transaction).delete(range);\n  };\n\n  IndexedDbRemoteDocumentCache.prototype.synchronizeLastDocumentChangeId = function (documentChangesStore) {\n    var _this = this; // If there are no existing changes, we set `lastProcessedDocumentChangeId`\n    // to 0 since IndexedDb's auto-generated keys start at 1.\n\n\n    this._lastProcessedDocumentChangeId = 0;\n    return documentChangesStore.iterate({\n      keysOnly: true,\n      reverse: true\n    }, function (key, value, control) {\n      _this._lastProcessedDocumentChangeId = key;\n      control.done();\n    });\n  };\n\n  IndexedDbRemoteDocumentCache.prototype.newChangeBuffer = function () {\n    return new IndexedDbRemoteDocumentCache.RemoteDocumentChangeBuffer(this);\n  };\n\n  IndexedDbRemoteDocumentCache.prototype.getSize = function (txn) {\n    return this.getMetadata(txn).next(function (metadata) {\n      return metadata.byteSize;\n    });\n  };\n\n  IndexedDbRemoteDocumentCache.prototype.getMetadata = function (txn) {\n    return documentGlobalStore(txn).get(DbRemoteDocumentGlobal.key).next(function (metadata) {\n      assert(!!metadata, 'Missing document cache metadata');\n      return metadata;\n    });\n  };\n\n  IndexedDbRemoteDocumentCache.prototype.setMetadata = function (txn, metadata) {\n    return documentGlobalStore(txn).put(DbRemoteDocumentGlobal.key, metadata);\n  };\n  /**\r\n   * Handles the details of adding and updating documents in the IndexedDbRemoteDocumentCache.\r\n   *\r\n   * Unlike the MemoryRemoteDocumentChangeBuffer, the IndexedDb implementation computes the size\r\n   * delta for all submitted changes. This avoids having to re-read all documents from IndexedDb\r\n   * when we apply the changes.\r\n   */\n\n\n  IndexedDbRemoteDocumentCache.RemoteDocumentChangeBuffer =\n  /** @class */\n  function (_super) {\n    tslib_1.__extends(class_1, _super);\n\n    function class_1(documentCache) {\n      var _this = _super.call(this) || this;\n\n      _this.documentCache = documentCache; // A map of document sizes prior to applying the changes in this buffer.\n\n      _this.documentSizes = new ObjectMap(function (key) {\n        return key.toString();\n      });\n      return _this;\n    }\n\n    class_1.prototype.applyChanges = function (transaction) {\n      var _this = this;\n\n      var promises = [];\n      var sizeDelta = 0;\n      var changedKeys = documentKeySet();\n      this.changes.forEach(function (key, maybeDocument) {\n        var previousSize = _this.documentSizes.get(key);\n\n        assert(previousSize !== undefined, \"Cannot modify a document that wasn't read (for \" + key + \")\");\n\n        if (maybeDocument) {\n          var doc = _this.documentCache.serializer.toDbRemoteDocument(maybeDocument);\n\n          var size = dbDocumentSize(doc);\n          sizeDelta += size - previousSize;\n          promises.push(_this.documentCache.addEntry(transaction, key, doc));\n        } else {\n          sizeDelta -= previousSize;\n          promises.push(_this.documentCache.removeEntry(transaction, key));\n        }\n\n        changedKeys = changedKeys.add(key);\n      });\n      promises.push(this.documentCache.updateMetadata(transaction, changedKeys, sizeDelta));\n      return PersistencePromise.waitFor(promises);\n    };\n\n    class_1.prototype.getFromCache = function (transaction, documentKey) {\n      var _this = this; // Record the size of everything we load from the cache so we can compute a delta later.\n\n\n      return this.documentCache.getSizedEntry(transaction, documentKey).next(function (getResult) {\n        if (getResult === null) {\n          _this.documentSizes.set(documentKey, 0);\n\n          return null;\n        } else {\n          _this.documentSizes.set(documentKey, getResult.size);\n\n          return getResult.maybeDocument;\n        }\n      });\n    };\n\n    class_1.prototype.getAllFromCache = function (transaction, documentKeys) {\n      var _this = this; // Record the size of everything we load from the cache so we can compute\n      // a delta later.\n\n\n      return this.documentCache.getSizedEntries(transaction, documentKeys).next(function (_a) {\n        var maybeDocuments = _a.maybeDocuments,\n            sizeMap = _a.sizeMap; // Note: `getAllFromCache` returns two maps instead of a single map from\n        // keys to `DocumentSizeEntry`s. This is to allow returning the\n        // `NullableMaybeDocumentMap` directly, without a conversion.\n\n        sizeMap.forEach(function (documentKey, size) {\n          _this.documentSizes.set(documentKey, size);\n        });\n        return maybeDocuments;\n      });\n    };\n\n    return class_1;\n  }(RemoteDocumentChangeBuffer);\n\n  return IndexedDbRemoteDocumentCache;\n}();\n\nfunction documentGlobalStore(txn) {\n  return IndexedDbPersistence.getStore(txn, DbRemoteDocumentGlobal.store);\n}\n\nfunction isDocumentChangeMissingError(err) {\n  return err.code === Code.DATA_LOSS && err.message === REMOTE_DOCUMENT_CHANGE_MISSING_ERR_MSG;\n}\n/**\r\n * Helper to get a typed SimpleDbStore for the remoteDocuments object store.\r\n */\n\n\nfunction remoteDocumentsStore(txn) {\n  return IndexedDbPersistence.getStore(txn, DbRemoteDocument.store);\n}\n/**\r\n * Helper to get a typed SimpleDbStore for the remoteDocumentChanges object\r\n * store.\r\n */\n\n\nfunction documentChangesStore(txn) {\n  return IndexedDbPersistence.getStore(txn, DbRemoteDocumentChanges.store);\n}\n\nfunction dbKey(docKey) {\n  return docKey.path.toArray();\n}\n/**\r\n * Retrusn an approximate size for the given document.\r\n */\n\n\nfunction dbDocumentSize(doc) {\n  var value;\n\n  if (doc.document) {\n    value = doc.document;\n  } else if (doc.unknownDocument) {\n    value = doc.unknownDocument;\n  } else if (doc.noDocument) {\n    value = doc.noDocument;\n  } else {\n    throw fail('Unknown remote document type');\n  }\n\n  return JSON.stringify(value).length;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory implementation of IndexManager.\r\n */\n\n\nvar MemoryIndexManager =\n/** @class */\nfunction () {\n  function MemoryIndexManager() {\n    this.collectionParentIndex = new MemoryCollectionParentIndex();\n  }\n\n  MemoryIndexManager.prototype.addToCollectionParentIndex = function (transaction, collectionPath) {\n    this.collectionParentIndex.add(collectionPath);\n    return PersistencePromise.resolve();\n  };\n\n  MemoryIndexManager.prototype.getCollectionParents = function (transaction, collectionId) {\n    return PersistencePromise.resolve(this.collectionParentIndex.getEntries(collectionId));\n  };\n\n  return MemoryIndexManager;\n}();\n/**\r\n * Internal implementation of the collection-parent index exposed by MemoryIndexManager.\r\n * Also used for in-memory caching by IndexedDbIndexManager and initial index population\r\n * in indexeddb_schema.ts\r\n */\n\n\nvar MemoryCollectionParentIndex =\n/** @class */\nfunction () {\n  function MemoryCollectionParentIndex() {\n    this.index = {};\n  } // Returns false if the entry already existed.\n\n\n  MemoryCollectionParentIndex.prototype.add = function (collectionPath) {\n    assert(collectionPath.length % 2 === 1, 'Expected a collection path.');\n    var collectionId = collectionPath.lastSegment();\n    var parentPath = collectionPath.popLast();\n    var existingParents = this.index[collectionId] || new SortedSet(ResourcePath.comparator);\n    var added = !existingParents.has(parentPath);\n    this.index[collectionId] = existingParents.add(parentPath);\n    return added;\n  };\n\n  MemoryCollectionParentIndex.prototype.getEntries = function (collectionId) {\n    var parentPaths = this.index[collectionId] || new SortedSet(ResourcePath.comparator);\n    return parentPaths.toArray();\n  };\n\n  return MemoryCollectionParentIndex;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Schema Version for the Web client:\r\n * 1. Initial version including Mutation Queue, Query Cache, and Remote Document\r\n *    Cache\r\n * 2. Used to ensure a targetGlobal object exists and add targetCount to it. No\r\n *    longer required because migration 3 unconditionally clears it.\r\n * 3. Dropped and re-created Query Cache to deal with cache corruption related\r\n *    to limbo resolution. Addresses\r\n *    https://github.com/firebase/firebase-ios-sdk/issues/1548\r\n * 4. Multi-Tab Support.\r\n * 5. Removal of held write acks.\r\n * 6. Create document global for tracking document cache size.\r\n * 7. Ensure every cached document has a sentinel row with a sequence number.\r\n * 8. Add collection-parent index for Collection Group queries.\r\n */\n\n\nvar SCHEMA_VERSION = 8;\n/** Performs database creation and schema upgrades. */\n\nvar SchemaConverter =\n/** @class */\nfunction () {\n  function SchemaConverter(serializer) {\n    this.serializer = serializer;\n  }\n  /**\r\n   * Performs database creation and schema upgrades.\r\n   *\r\n   * Note that in production, this method is only ever used to upgrade the schema\r\n   * to SCHEMA_VERSION. Different values of toVersion are only used for testing\r\n   * and local feature development.\r\n   */\n\n\n  SchemaConverter.prototype.createOrUpgrade = function (db, txn, fromVersion, toVersion) {\n    var _this = this;\n\n    assert(fromVersion < toVersion && fromVersion >= 0 && toVersion <= SCHEMA_VERSION, \"Unexpected schema upgrade from v\" + fromVersion + \" to v{toVersion}.\");\n\n    if (fromVersion < 1 && toVersion >= 1) {\n      createPrimaryClientStore(db);\n      createMutationQueue(db);\n      createQueryCache(db);\n      createRemoteDocumentCache(db);\n    } // Migration 2 to populate the targetGlobal object no longer needed since\n    // migration 3 unconditionally clears it.\n\n\n    var p = PersistencePromise.resolve();\n\n    if (fromVersion < 3 && toVersion >= 3) {\n      // Brand new clients don't need to drop and recreate--only clients that\n      // potentially have corrupt data.\n      if (fromVersion !== 0) {\n        dropQueryCache(db);\n        createQueryCache(db);\n      }\n\n      p = p.next(function () {\n        return writeEmptyTargetGlobalEntry(txn);\n      });\n    }\n\n    if (fromVersion < 4 && toVersion >= 4) {\n      if (fromVersion !== 0) {\n        // Schema version 3 uses auto-generated keys to generate globally unique\n        // mutation batch IDs (this was previously ensured internally by the\n        // client). To migrate to the new schema, we have to read all mutations\n        // and write them back out. We preserve the existing batch IDs to guarantee\n        // consistency with other object stores. Any further mutation batch IDs will\n        // be auto-generated.\n        p = p.next(function () {\n          return upgradeMutationBatchSchemaAndMigrateData(db, txn);\n        });\n      }\n\n      p = p.next(function () {\n        createClientMetadataStore(db);\n        createRemoteDocumentChangesStore(db);\n      });\n    }\n\n    if (fromVersion < 5 && toVersion >= 5) {\n      p = p.next(function () {\n        return _this.removeAcknowledgedMutations(txn);\n      });\n    }\n\n    if (fromVersion < 6 && toVersion >= 6) {\n      p = p.next(function () {\n        createDocumentGlobalStore(db);\n        return _this.addDocumentGlobal(txn);\n      });\n    }\n\n    if (fromVersion < 7 && toVersion >= 7) {\n      p = p.next(function () {\n        return _this.ensureSequenceNumbers(txn);\n      });\n    }\n\n    if (fromVersion < 8 && toVersion >= 8) {\n      p = p.next(function () {\n        return _this.createCollectionParentIndex(db, txn);\n      });\n    }\n\n    return p;\n  };\n\n  SchemaConverter.prototype.addDocumentGlobal = function (txn) {\n    var byteCount = 0;\n    return txn.store(DbRemoteDocument.store).iterate(function (_, doc) {\n      byteCount += dbDocumentSize(doc);\n    }).next(function () {\n      var metadata = new DbRemoteDocumentGlobal(byteCount);\n      return txn.store(DbRemoteDocumentGlobal.store).put(DbRemoteDocumentGlobal.key, metadata);\n    });\n  };\n\n  SchemaConverter.prototype.removeAcknowledgedMutations = function (txn) {\n    var _this = this;\n\n    var queuesStore = txn.store(DbMutationQueue.store);\n    var mutationsStore = txn.store(DbMutationBatch.store);\n    return queuesStore.loadAll().next(function (queues) {\n      return PersistencePromise.forEach(queues, function (queue) {\n        var range = IDBKeyRange.bound([queue.userId, BATCHID_UNKNOWN], [queue.userId, queue.lastAcknowledgedBatchId]);\n        return mutationsStore.loadAll(DbMutationBatch.userMutationsIndex, range).next(function (dbBatches) {\n          return PersistencePromise.forEach(dbBatches, function (dbBatch) {\n            assert(dbBatch.userId === queue.userId, \"Cannot process batch \" + dbBatch.batchId + \" from unexpected user\");\n\n            var batch = _this.serializer.fromDbMutationBatch(dbBatch);\n\n            return removeMutationBatch(txn, queue.userId, batch).next(function () {});\n          });\n        });\n      });\n    });\n  };\n  /**\r\n   * Ensures that every document in the remote document cache has a corresponding sentinel row\r\n   * with a sequence number. Missing rows are given the most recently used sequence number.\r\n   */\n\n\n  SchemaConverter.prototype.ensureSequenceNumbers = function (txn) {\n    var documentTargetStore = txn.store(DbTargetDocument.store);\n    var documentsStore = txn.store(DbRemoteDocument.store);\n    return getHighestListenSequenceNumber(txn).next(function (currentSequenceNumber) {\n      var writeSentinelKey = function writeSentinelKey(path) {\n        return documentTargetStore.put(new DbTargetDocument(0, encode(path), currentSequenceNumber));\n      };\n\n      var promises = [];\n      return documentsStore.iterate(function (key, doc) {\n        var path = new ResourcePath(key);\n        var docSentinelKey = sentinelKey(path);\n        promises.push(documentTargetStore.get(docSentinelKey).next(function (maybeSentinel) {\n          if (!maybeSentinel) {\n            return writeSentinelKey(path);\n          } else {\n            return PersistencePromise.resolve();\n          }\n        }));\n      }).next(function () {\n        return PersistencePromise.waitFor(promises);\n      });\n    });\n  };\n\n  SchemaConverter.prototype.createCollectionParentIndex = function (db, txn) {\n    // Create the index.\n    db.createObjectStore(DbCollectionParent.store, {\n      keyPath: DbCollectionParent.keyPath\n    });\n    var collectionParentsStore = txn.store(DbCollectionParent.store); // Helper to add an index entry iff we haven't already written it.\n\n    var cache = new MemoryCollectionParentIndex();\n\n    var addEntry = function addEntry(collectionPath) {\n      if (cache.add(collectionPath)) {\n        var collectionId = collectionPath.lastSegment();\n        var parentPath = collectionPath.popLast();\n        return collectionParentsStore.put({\n          collectionId: collectionId,\n          parent: encode(parentPath)\n        });\n      }\n    }; // Index existing remote documents.\n\n\n    return txn.store(DbRemoteDocument.store).iterate({\n      keysOnly: true\n    }, function (pathSegments, _) {\n      var path = new ResourcePath(pathSegments);\n      return addEntry(path.popLast());\n    }).next(function () {\n      // Index existing mutations.\n      return txn.store(DbDocumentMutation.store).iterate({\n        keysOnly: true\n      }, function (_a, _) {\n        var userID = _a[0],\n            encodedPath = _a[1],\n            batchId = _a[2];\n        var path = decode(encodedPath);\n        return addEntry(path.popLast());\n      });\n    });\n  };\n\n  return SchemaConverter;\n}();\n\nfunction sentinelKey(path) {\n  return [0, encode(path)];\n}\n/**\r\n * Wrapper class to store timestamps (seconds and nanos) in IndexedDb objects.\r\n */\n\n\nvar DbTimestamp =\n/** @class */\nfunction () {\n  function DbTimestamp(seconds, nanoseconds) {\n    this.seconds = seconds;\n    this.nanoseconds = nanoseconds;\n  }\n\n  return DbTimestamp;\n}();\n/**\r\n * A singleton object to be stored in the 'owner' store in IndexedDb.\r\n *\r\n * A given database can have a single primary tab assigned at a given time. That\r\n * tab must validate that it is still holding the primary lease before every\r\n * operation that requires locked access. The primary tab should regularly\r\n * write an updated timestamp to this lease to prevent other tabs from\r\n * \"stealing\" the primary lease\r\n */\n\n\nvar DbPrimaryClient =\n/** @class */\nfunction () {\n  function DbPrimaryClient(ownerId,\n  /** Whether to allow shared access from multiple tabs. */\n  allowTabSynchronization, leaseTimestampMs) {\n    this.ownerId = ownerId;\n    this.allowTabSynchronization = allowTabSynchronization;\n    this.leaseTimestampMs = leaseTimestampMs;\n  }\n  /**\r\n   * Name of the IndexedDb object store.\r\n   *\r\n   * Note that the name 'owner' is chosen to ensure backwards compatibility with\r\n   * older clients that only supported single locked access to the persistence\r\n   * layer.\r\n   */\n\n\n  DbPrimaryClient.store = 'owner';\n  /**\r\n   * The key string used for the single object that exists in the\r\n   * DbPrimaryClient store.\r\n   */\n\n  DbPrimaryClient.key = 'owner';\n  return DbPrimaryClient;\n}();\n\nfunction createPrimaryClientStore(db) {\n  db.createObjectStore(DbPrimaryClient.store);\n}\n/**\r\n * An object to be stored in the 'mutationQueues' store in IndexedDb.\r\n *\r\n * Each user gets a single queue of MutationBatches to apply to the server.\r\n * DbMutationQueue tracks the metadata about the queue.\r\n */\n\n\nvar DbMutationQueue =\n/** @class */\nfunction () {\n  function DbMutationQueue(\n  /**\r\n   * The normalized user ID to which this queue belongs.\r\n   */\n  userId,\n  /**\r\n   * An identifier for the highest numbered batch that has been acknowledged\r\n   * by the server. All MutationBatches in this queue with batchIds less\r\n   * than or equal to this value are considered to have been acknowledged by\r\n   * the server.\r\n   *\r\n   * NOTE: this is deprecated and no longer used by the code.\r\n   */\n  lastAcknowledgedBatchId,\n  /**\r\n   * A stream token that was previously sent by the server.\r\n   *\r\n   * See StreamingWriteRequest in datastore.proto for more details about\r\n   * usage.\r\n   *\r\n   * After sending this token, earlier tokens may not be used anymore so\r\n   * only a single stream token is retained.\r\n   */\n  lastStreamToken) {\n    this.userId = userId;\n    this.lastAcknowledgedBatchId = lastAcknowledgedBatchId;\n    this.lastStreamToken = lastStreamToken;\n  }\n  /** Name of the IndexedDb object store.  */\n\n\n  DbMutationQueue.store = 'mutationQueues';\n  /** Keys are automatically assigned via the userId property. */\n\n  DbMutationQueue.keyPath = 'userId';\n  return DbMutationQueue;\n}();\n/**\r\n * An object to be stored in the 'mutations' store in IndexedDb.\r\n *\r\n * Represents a batch of user-level mutations intended to be sent to the server\r\n * in a single write. Each user-level batch gets a separate DbMutationBatch\r\n * with a new batchId.\r\n */\n\n\nvar DbMutationBatch =\n/** @class */\nfunction () {\n  function DbMutationBatch(\n  /**\r\n   * The normalized user ID to which this batch belongs.\r\n   */\n  userId,\n  /**\r\n   * An identifier for this batch, allocated using an auto-generated key.\r\n   */\n  batchId,\n  /**\r\n   * The local write time of the batch, stored as milliseconds since the\r\n   * epoch.\r\n   */\n  localWriteTimeMs,\n  /**\r\n   * A list of \"mutations\" that represent a partial base state from when this\r\n   * write batch was initially created. During local application of the write\r\n   * batch, these baseMutations are applied prior to the real writes in order\r\n   * to override certain document fields from the remote document cache. This\r\n   * is necessary in the case of non-idempotent writes (e.g. `increment()`\r\n   * transforms) to make sure that the local view of the modified documents\r\n   * doesn't flicker if the remote document cache receives the result of the\r\n   * non-idempotent write before the write is removed from the queue.\r\n   *\r\n   * These mutations are never sent to the backend.\r\n   */\n  baseMutations,\n  /**\r\n   * A list of mutations to apply. All mutations will be applied atomically.\r\n   *\r\n   * Mutations are serialized via JsonProtoSerializer.toMutation().\r\n   */\n  mutations) {\n    this.userId = userId;\n    this.batchId = batchId;\n    this.localWriteTimeMs = localWriteTimeMs;\n    this.baseMutations = baseMutations;\n    this.mutations = mutations;\n  }\n  /** Name of the IndexedDb object store.  */\n\n\n  DbMutationBatch.store = 'mutations';\n  /** Keys are automatically assigned via the userId, batchId properties. */\n\n  DbMutationBatch.keyPath = 'batchId';\n  /** The index name for lookup of mutations by user. */\n\n  DbMutationBatch.userMutationsIndex = 'userMutationsIndex';\n  /** The user mutations index is keyed by [userId, batchId] pairs. */\n\n  DbMutationBatch.userMutationsKeyPath = ['userId', 'batchId'];\n  return DbMutationBatch;\n}();\n\nfunction createMutationQueue(db) {\n  db.createObjectStore(DbMutationQueue.store, {\n    keyPath: DbMutationQueue.keyPath\n  });\n  var mutationBatchesStore = db.createObjectStore(DbMutationBatch.store, {\n    keyPath: DbMutationBatch.keyPath,\n    autoIncrement: true\n  });\n  mutationBatchesStore.createIndex(DbMutationBatch.userMutationsIndex, DbMutationBatch.userMutationsKeyPath, {\n    unique: true\n  });\n  db.createObjectStore(DbDocumentMutation.store);\n}\n/**\r\n * Upgrade function to migrate the 'mutations' store from V1 to V3. Loads\r\n * and rewrites all data.\r\n */\n\n\nfunction upgradeMutationBatchSchemaAndMigrateData(db, txn) {\n  var v1MutationsStore = txn.store(DbMutationBatch.store);\n  return v1MutationsStore.loadAll().next(function (existingMutations) {\n    db.deleteObjectStore(DbMutationBatch.store);\n    var mutationsStore = db.createObjectStore(DbMutationBatch.store, {\n      keyPath: DbMutationBatch.keyPath,\n      autoIncrement: true\n    });\n    mutationsStore.createIndex(DbMutationBatch.userMutationsIndex, DbMutationBatch.userMutationsKeyPath, {\n      unique: true\n    });\n    var v3MutationsStore = txn.store(DbMutationBatch.store);\n    var writeAll = existingMutations.map(function (mutation) {\n      return v3MutationsStore.put(mutation);\n    });\n    return PersistencePromise.waitFor(writeAll);\n  });\n}\n/**\r\n * An object to be stored in the 'documentMutations' store in IndexedDb.\r\n *\r\n * A manually maintained index of all the mutation batches that affect a given\r\n * document key. The rows in this table are references based on the contents of\r\n * DbMutationBatch.mutations.\r\n */\n\n\nvar DbDocumentMutation =\n/** @class */\nfunction () {\n  function DbDocumentMutation() {}\n  /**\r\n   * Creates a [userId] key for use in the DbDocumentMutations index to iterate\r\n   * over all of a user's document mutations.\r\n   */\n\n\n  DbDocumentMutation.prefixForUser = function (userId) {\n    return [userId];\n  };\n  /**\r\n   * Creates a [userId, encodedPath] key for use in the DbDocumentMutations\r\n   * index to iterate over all at document mutations for a given path or lower.\r\n   */\n\n\n  DbDocumentMutation.prefixForPath = function (userId, path) {\n    return [userId, encode(path)];\n  };\n  /**\r\n   * Creates a full index key of [userId, encodedPath, batchId] for inserting\r\n   * and deleting into the DbDocumentMutations index.\r\n   */\n\n\n  DbDocumentMutation.key = function (userId, path, batchId) {\n    return [userId, encode(path), batchId];\n  };\n\n  DbDocumentMutation.store = 'documentMutations';\n  /**\r\n   * Because we store all the useful information for this store in the key,\r\n   * there is no useful information to store as the value. The raw (unencoded)\r\n   * path cannot be stored because IndexedDb doesn't store prototype\r\n   * information.\r\n   */\n\n  DbDocumentMutation.PLACEHOLDER = new DbDocumentMutation();\n  return DbDocumentMutation;\n}();\n\nfunction createRemoteDocumentCache(db) {\n  db.createObjectStore(DbRemoteDocument.store);\n}\n/**\r\n * Represents the known absence of a document at a particular version.\r\n * Stored in IndexedDb as part of a DbRemoteDocument object.\r\n */\n\n\nvar DbNoDocument =\n/** @class */\nfunction () {\n  function DbNoDocument(path, readTime) {\n    this.path = path;\n    this.readTime = readTime;\n  }\n\n  return DbNoDocument;\n}();\n/**\r\n * Represents a document that is known to exist but whose data is unknown.\r\n * Stored in IndexedDb as part of a DbRemoteDocument object.\r\n */\n\n\nvar DbUnknownDocument =\n/** @class */\nfunction () {\n  function DbUnknownDocument(path, version) {\n    this.path = path;\n    this.version = version;\n  }\n\n  return DbUnknownDocument;\n}();\n/**\r\n * An object to be stored in the 'remoteDocuments' store in IndexedDb.\r\n * It represents either:\r\n *\r\n * - A complete document.\r\n * - A \"no document\" representing a document that is known not to exist (at\r\n * some version).\r\n * - An \"unknown document\" representing a document that is known to exist (at\r\n * some version) but whose contents are unknown.\r\n *\r\n * Note: This is the persisted equivalent of a MaybeDocument and could perhaps\r\n * be made more general if necessary.\r\n */\n\n\nvar DbRemoteDocument =\n/** @class */\nfunction () {\n  function DbRemoteDocument(\n  /**\r\n   * Set to an instance of DbUnknownDocument if the data for a document is\r\n   * not known, but it is known that a document exists at the specified\r\n   * version (e.g. it had a successful update applied to it)\r\n   */\n  unknownDocument,\n  /**\r\n   * Set to an instance of a DbNoDocument if it is known that no document\r\n   * exists.\r\n   */\n  noDocument,\n  /**\r\n   * Set to an instance of a Document if there's a cached version of the\r\n   * document.\r\n   */\n  document,\n  /**\r\n   * Documents that were written to the remote document store based on\r\n   * a write acknowledgment are marked with `hasCommittedMutations`. These\r\n   * documents are potentially inconsistent with the backend's copy and use\r\n   * the write's commit version as their document version.\r\n   */\n  hasCommittedMutations) {\n    this.unknownDocument = unknownDocument;\n    this.noDocument = noDocument;\n    this.document = document;\n    this.hasCommittedMutations = hasCommittedMutations;\n  }\n\n  DbRemoteDocument.store = 'remoteDocuments';\n  return DbRemoteDocument;\n}();\n/**\r\n * Contains a single entry that has metadata about the remote document cache.\r\n */\n\n\nvar DbRemoteDocumentGlobal =\n/** @class */\nfunction () {\n  /**\r\n   * @param byteSize Approximately the total size in bytes of all the documents in the document\r\n   * cache.\r\n   */\n  function DbRemoteDocumentGlobal(byteSize) {\n    this.byteSize = byteSize;\n  }\n\n  DbRemoteDocumentGlobal.store = 'remoteDocumentGlobal';\n  DbRemoteDocumentGlobal.key = 'remoteDocumentGlobalKey';\n  return DbRemoteDocumentGlobal;\n}();\n\nfunction createDocumentGlobalStore(db) {\n  db.createObjectStore(DbRemoteDocumentGlobal.store);\n}\n/**\r\n * An object to be stored in the 'targets' store in IndexedDb.\r\n *\r\n * This is based on and should be kept in sync with the proto used in the iOS\r\n * client.\r\n *\r\n * Each query the client listens to against the server is tracked on disk so\r\n * that the query can be efficiently resumed on restart.\r\n */\n\n\nvar DbTarget =\n/** @class */\nfunction () {\n  function DbTarget(\n  /**\r\n   * An auto-generated sequential numeric identifier for the query.\r\n   *\r\n   * Queries are stored using their canonicalId as the key, but these\r\n   * canonicalIds can be quite long so we additionally assign a unique\r\n   * queryId which can be used by referenced data structures (e.g.\r\n   * indexes) to minimize the on-disk cost.\r\n   */\n  targetId,\n  /**\r\n   * The canonical string representing this query. This is not unique.\r\n   */\n  canonicalId,\n  /**\r\n   * The last readTime received from the Watch Service for this query.\r\n   *\r\n   * This is the same value as TargetChange.read_time in the protos.\r\n   */\n  readTime,\n  /**\r\n   * An opaque, server-assigned token that allows watching a query to be\r\n   * resumed after disconnecting without retransmitting all the data\r\n   * that matches the query. The resume token essentially identifies a\r\n   * point in time from which the server should resume sending results.\r\n   *\r\n   * This is related to the snapshotVersion in that the resumeToken\r\n   * effectively also encodes that value, but the resumeToken is opaque\r\n   * and sometimes encodes additional information.\r\n   *\r\n   * A consequence of this is that the resumeToken should be used when\r\n   * asking the server to reason about where this client is in the watch\r\n   * stream, but the client should use the snapshotVersion for its own\r\n   * purposes.\r\n   *\r\n   * This is the same value as TargetChange.resume_token in the protos.\r\n   */\n  resumeToken,\n  /**\r\n   * A sequence number representing the last time this query was\r\n   * listened to, used for garbage collection purposes.\r\n   *\r\n   * Conventionally this would be a timestamp value, but device-local\r\n   * clocks are unreliable and they must be able to create new listens\r\n   * even while disconnected. Instead this should be a monotonically\r\n   * increasing number that's incremented on each listen call.\r\n   *\r\n   * This is different from the queryId since the queryId is an\r\n   * immutable identifier assigned to the Query on first use while\r\n   * lastListenSequenceNumber is updated every time the query is\r\n   * listened to.\r\n   */\n  lastListenSequenceNumber,\n  /**\r\n   * The query for this target.\r\n   *\r\n   * Because canonical ids are not unique we must store the actual query. We\r\n   * use the proto to have an object we can persist without having to\r\n   * duplicate translation logic to and from a `Query` object.\r\n   */\n  query) {\n    this.targetId = targetId;\n    this.canonicalId = canonicalId;\n    this.readTime = readTime;\n    this.resumeToken = resumeToken;\n    this.lastListenSequenceNumber = lastListenSequenceNumber;\n    this.query = query;\n  }\n\n  DbTarget.store = 'targets';\n  /** Keys are automatically assigned via the targetId property. */\n\n  DbTarget.keyPath = 'targetId';\n  /** The name of the queryTargets index. */\n\n  DbTarget.queryTargetsIndexName = 'queryTargetsIndex';\n  /**\r\n   * The index of all canonicalIds to the targets that they match. This is not\r\n   * a unique mapping because canonicalId does not promise a unique name for all\r\n   * possible queries, so we append the targetId to make the mapping unique.\r\n   */\n\n  DbTarget.queryTargetsKeyPath = ['canonicalId', 'targetId'];\n  return DbTarget;\n}();\n/**\r\n * An object representing an association between a target and a document, or a\r\n * sentinel row marking the last sequence number at which a document was used.\r\n * Each document cached must have a corresponding sentinel row before lru\r\n * garbage collection is enabled.\r\n *\r\n * The target associations and sentinel rows are co-located so that orphaned\r\n * documents and their sequence numbers can be identified efficiently via a scan\r\n * of this store.\r\n */\n\n\nvar DbTargetDocument =\n/** @class */\nfunction () {\n  function DbTargetDocument(\n  /**\r\n   * The targetId identifying a target or 0 for a sentinel row.\r\n   */\n  targetId,\n  /**\r\n   * The path to the document, as encoded in the key.\r\n   */\n  path,\n  /**\r\n   * If this is a sentinel row, this should be the sequence number of the last\r\n   * time the document specified by `path` was used. Otherwise, it should be\r\n   * `undefined`.\r\n   */\n  sequenceNumber) {\n    this.targetId = targetId;\n    this.path = path;\n    this.sequenceNumber = sequenceNumber;\n    assert(targetId === 0 === (sequenceNumber !== undefined), 'A target-document row must either have targetId == 0 and a defined sequence number, or a non-zero targetId and no sequence number');\n  }\n  /** Name of the IndexedDb object store.  */\n\n\n  DbTargetDocument.store = 'targetDocuments';\n  /** Keys are automatically assigned via the targetId, path properties. */\n\n  DbTargetDocument.keyPath = ['targetId', 'path'];\n  /** The index name for the reverse index. */\n\n  DbTargetDocument.documentTargetsIndex = 'documentTargetsIndex';\n  /** We also need to create the reverse index for these properties. */\n\n  DbTargetDocument.documentTargetsKeyPath = ['path', 'targetId'];\n  return DbTargetDocument;\n}();\n/**\r\n * A record of global state tracked across all Targets, tracked separately\r\n * to avoid the need for extra indexes.\r\n *\r\n * This should be kept in-sync with the proto used in the iOS client.\r\n */\n\n\nvar DbTargetGlobal =\n/** @class */\nfunction () {\n  function DbTargetGlobal(\n  /**\r\n   * The highest numbered target id across all targets.\r\n   *\r\n   * See DbTarget.targetId.\r\n   */\n  highestTargetId,\n  /**\r\n   * The highest numbered lastListenSequenceNumber across all targets.\r\n   *\r\n   * See DbTarget.lastListenSequenceNumber.\r\n   */\n  highestListenSequenceNumber,\n  /**\r\n   * A global snapshot version representing the last consistent snapshot we\r\n   * received from the backend. This is monotonically increasing and any\r\n   * snapshots received from the backend prior to this version (e.g. for\r\n   * targets resumed with a resumeToken) should be suppressed (buffered)\r\n   * until the backend has caught up to this snapshot version again. This\r\n   * prevents our cache from ever going backwards in time.\r\n   */\n  lastRemoteSnapshotVersion,\n  /**\r\n   * The number of targets persisted.\r\n   */\n  targetCount) {\n    this.highestTargetId = highestTargetId;\n    this.highestListenSequenceNumber = highestListenSequenceNumber;\n    this.lastRemoteSnapshotVersion = lastRemoteSnapshotVersion;\n    this.targetCount = targetCount;\n  }\n  /**\r\n   * The key string used for the single object that exists in the\r\n   * DbTargetGlobal store.\r\n   */\n\n\n  DbTargetGlobal.key = 'targetGlobalKey';\n  DbTargetGlobal.store = 'targetGlobal';\n  return DbTargetGlobal;\n}();\n/**\r\n * An object representing an association between a Collection id (e.g. 'messages')\r\n * to a parent path (e.g. '/chats/123') that contains it as a (sub)collection.\r\n * This is used to efficiently find all collections to query when performing\r\n * a Collection Group query.\r\n */\n\n\nvar DbCollectionParent =\n/** @class */\nfunction () {\n  function DbCollectionParent(\n  /**\r\n   * The collectionId (e.g. 'messages')\r\n   */\n  collectionId,\n  /**\r\n   * The path to the parent (either a document location or an empty path for\r\n   * a root-level collection).\r\n   */\n  parent) {\n    this.collectionId = collectionId;\n    this.parent = parent;\n  }\n  /** Name of the IndexedDb object store. */\n\n\n  DbCollectionParent.store = 'collectionParents';\n  /** Keys are automatically assigned via the collectionId, parent properties. */\n\n  DbCollectionParent.keyPath = ['collectionId', 'parent'];\n  return DbCollectionParent;\n}();\n\nfunction createQueryCache(db) {\n  var targetDocumentsStore = db.createObjectStore(DbTargetDocument.store, {\n    keyPath: DbTargetDocument.keyPath\n  });\n  targetDocumentsStore.createIndex(DbTargetDocument.documentTargetsIndex, DbTargetDocument.documentTargetsKeyPath, {\n    unique: true\n  });\n  var targetStore = db.createObjectStore(DbTarget.store, {\n    keyPath: DbTarget.keyPath\n  }); // NOTE: This is unique only because the TargetId is the suffix.\n\n  targetStore.createIndex(DbTarget.queryTargetsIndexName, DbTarget.queryTargetsKeyPath, {\n    unique: true\n  });\n  db.createObjectStore(DbTargetGlobal.store);\n}\n\nfunction dropQueryCache(db) {\n  db.deleteObjectStore(DbTargetDocument.store);\n  db.deleteObjectStore(DbTarget.store);\n  db.deleteObjectStore(DbTargetGlobal.store);\n}\n/**\r\n * Creates the target global singleton row.\r\n *\r\n * @param {IDBTransaction} txn The version upgrade transaction for indexeddb\r\n */\n\n\nfunction writeEmptyTargetGlobalEntry(txn) {\n  var globalStore = txn.store(DbTargetGlobal.store);\n  var metadata = new DbTargetGlobal(\n  /*highestTargetId=*/\n  0,\n  /*lastListenSequenceNumber=*/\n  0, SnapshotVersion.MIN.toTimestamp(),\n  /*targetCount=*/\n  0);\n  return globalStore.put(DbTargetGlobal.key, metadata);\n}\n/**\r\n * An object store to store the keys of changed documents. This is used to\r\n * facilitate storing document changelogs in the Remote Document Cache.\r\n *\r\n * PORTING NOTE: This is used for change propagation during multi-tab syncing\r\n * and not needed on iOS and Android.\r\n */\n\n\nvar DbRemoteDocumentChanges =\n/** @class */\nfunction () {\n  function DbRemoteDocumentChanges(\n  /** The keys of the changed documents. */\n  changes) {\n    this.changes = changes;\n  }\n  /** Name of the IndexedDb object store.  */\n\n\n  DbRemoteDocumentChanges.store = 'remoteDocumentChanges';\n  /** Keys are auto-generated via the `id` property. */\n\n  DbRemoteDocumentChanges.keyPath = 'id';\n  return DbRemoteDocumentChanges;\n}();\n\nfunction createRemoteDocumentChangesStore(db) {\n  db.createObjectStore(DbRemoteDocumentChanges.store, {\n    keyPath: 'id',\n    autoIncrement: true\n  });\n}\n/**\r\n * A record of the metadata state of each client.\r\n *\r\n * PORTING NOTE: This is used to synchronize multi-tab state and does not need\r\n * to be ported to iOS or Android.\r\n */\n\n\nvar DbClientMetadata =\n/** @class */\nfunction () {\n  function DbClientMetadata(\n  /** The auto-generated client id assigned at client startup. */\n  clientId,\n  /** The last time this state was updated. */\n  updateTimeMs,\n  /** Whether the client's network connection is enabled. */\n  networkEnabled,\n  /** Whether this client is running in a foreground tab. */\n  inForeground,\n  /**\r\n   * The last change read from the DbRemoteDocumentChanges store.\r\n   * Can be undefined for backwards compatibility.\r\n   */\n  lastProcessedDocumentChangeId) {\n    this.clientId = clientId;\n    this.updateTimeMs = updateTimeMs;\n    this.networkEnabled = networkEnabled;\n    this.inForeground = inForeground;\n    this.lastProcessedDocumentChangeId = lastProcessedDocumentChangeId;\n  }\n  /** Name of the IndexedDb object store. */\n\n\n  DbClientMetadata.store = 'clientMetadata';\n  /** Keys are automatically assigned via the clientId properties. */\n\n  DbClientMetadata.keyPath = 'clientId';\n  return DbClientMetadata;\n}();\n\nfunction createClientMetadataStore(db) {\n  db.createObjectStore(DbClientMetadata.store, {\n    keyPath: DbClientMetadata.keyPath\n  });\n} // Visible for testing\n\n\nvar V1_STORES = [DbMutationQueue.store, DbMutationBatch.store, DbDocumentMutation.store, DbRemoteDocument.store, DbTarget.store, DbPrimaryClient.store, DbTargetGlobal.store, DbTargetDocument.store]; // V2 is no longer usable (see comment at top of file)\n// Visible for testing\n\nvar V3_STORES = V1_STORES; // Visible for testing\n\nvar V4_STORES = V3_STORES.concat([DbClientMetadata.store, DbRemoteDocumentChanges.store]); // V5 does not change the set of stores.\n\nvar V6_STORES = V4_STORES.concat([DbRemoteDocumentGlobal.store]); // V7 does not change the set of stores.\n\nvar V8_STORES = V6_STORES.concat([DbCollectionParent.store]);\n/**\r\n * The list of all default IndexedDB stores used throughout the SDK. This is\r\n * used when creating transactions so that access across all stores is done\r\n * atomically.\r\n */\n\nvar ALL_STORES = V8_STORES;\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A persisted implementation of IndexManager.\r\n */\n\nvar IndexedDbIndexManager =\n/** @class */\nfunction () {\n  function IndexedDbIndexManager() {\n    /**\r\n     * An in-memory copy of the index entries we've already written since the SDK\r\n     * launched. Used to avoid re-writing the same entry repeatedly.\r\n     *\r\n     * This is *NOT* a complete cache of what's in persistence and so can never be used to\r\n     * satisfy reads.\r\n     */\n    this.collectionParentsCache = new MemoryCollectionParentIndex();\n  }\n\n  IndexedDbIndexManager.prototype.addToCollectionParentIndex = function (transaction, collectionPath) {\n    assert(collectionPath.length % 2 === 1, 'Expected a collection path.');\n\n    if (this.collectionParentsCache.add(collectionPath)) {\n      assert(collectionPath.length >= 1, 'Invalid collection path.');\n      var collectionId = collectionPath.lastSegment();\n      var parentPath = collectionPath.popLast();\n      return collectionParentsStore(transaction).put({\n        collectionId: collectionId,\n        parent: encode(parentPath)\n      });\n    }\n\n    return PersistencePromise.resolve();\n  };\n\n  IndexedDbIndexManager.prototype.getCollectionParents = function (transaction, collectionId) {\n    var parentPaths = [];\n    var range = IDBKeyRange.bound([collectionId, ''], [immediateSuccessor(collectionId), ''],\n    /*lowerOpen=*/\n    false,\n    /*upperOpen=*/\n    true);\n    return collectionParentsStore(transaction).loadAll(range).next(function (entries) {\n      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n        var entry = entries_1[_i]; // This collectionId guard shouldn't be necessary (and isn't as long\n        // as we're running in a real browser), but there's a bug in\n        // indexeddbshim that breaks our range in our tests running in node:\n        // https://github.com/axemclion/IndexedDBShim/issues/334\n\n        if (entry.collectionId !== collectionId) {\n          break;\n        }\n\n        parentPaths.push(decode(entry.parent));\n      }\n\n      return parentPaths;\n    });\n  };\n\n  return IndexedDbIndexManager;\n}();\n/**\r\n * Helper to get a typed SimpleDbStore for the collectionParents\r\n * document store.\r\n */\n\n\nfunction collectionParentsStore(txn) {\n  return IndexedDbPersistence.getStore(txn, DbCollectionParent.store);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** An enumeration of the different purposes we have for queries. */\n\n\nvar QueryPurpose;\n\n(function (QueryPurpose) {\n  /** A regular, normal query. */\n  QueryPurpose[QueryPurpose[\"Listen\"] = 0] = \"Listen\";\n  /**\r\n   * The query was used to refill a query after an existence filter mismatch.\r\n   */\n\n  QueryPurpose[QueryPurpose[\"ExistenceFilterMismatch\"] = 1] = \"ExistenceFilterMismatch\";\n  /** The query was used to resolve a limbo document. */\n\n  QueryPurpose[QueryPurpose[\"LimboResolution\"] = 2] = \"LimboResolution\";\n})(QueryPurpose || (QueryPurpose = {}));\n/**\r\n * An immutable set of metadata that the local store tracks for each query.\r\n */\n\n\nvar QueryData =\n/** @class */\nfunction () {\n  function QueryData(\n  /** The query being listened to. */\n  query,\n  /**\r\n   * The target ID to which the query corresponds; Assigned by the\r\n   * LocalStore for user listens and by the SyncEngine for limbo watches.\r\n   */\n  targetId,\n  /** The purpose of the query. */\n  purpose,\n  /** The sequence number of the last transaction during which this query data was modified */\n  sequenceNumber,\n  /** The latest snapshot version seen for this target. */\n  snapshotVersion,\n  /**\r\n   * An opaque, server-assigned token that allows watching a query to be\r\n   * resumed after disconnecting without retransmitting all the data that\r\n   * matches the query. The resume token essentially identifies a point in\r\n   * time from which the server should resume sending results.\r\n   */\n  resumeToken) {\n    if (snapshotVersion === void 0) {\n      snapshotVersion = SnapshotVersion.MIN;\n    }\n\n    if (resumeToken === void 0) {\n      resumeToken = emptyByteString();\n    }\n\n    this.query = query;\n    this.targetId = targetId;\n    this.purpose = purpose;\n    this.sequenceNumber = sequenceNumber;\n    this.snapshotVersion = snapshotVersion;\n    this.resumeToken = resumeToken;\n  }\n  /** Creates a new query data instance with an updated sequence number. */\n\n\n  QueryData.prototype.withSequenceNumber = function (sequenceNumber) {\n    return new QueryData(this.query, this.targetId, this.purpose, sequenceNumber, this.snapshotVersion, this.resumeToken);\n  };\n  /**\r\n   * Creates a new query data instance with an updated resume token and\r\n   * snapshot version.\r\n   */\n\n\n  QueryData.prototype.withResumeToken = function (resumeToken, snapshotVersion) {\n    return new QueryData(this.query, this.targetId, this.purpose, this.sequenceNumber, snapshotVersion, resumeToken);\n  };\n\n  QueryData.prototype.isEqual = function (other) {\n    return this.targetId === other.targetId && this.purpose === other.purpose && this.sequenceNumber === other.sequenceNumber && this.snapshotVersion.isEqual(other.snapshotVersion) && this.resumeToken === other.resumeToken && this.query.isEqual(other.query);\n  };\n\n  return QueryData;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Serializer for values stored in the LocalStore. */\n\n\nvar LocalSerializer =\n/** @class */\nfunction () {\n  function LocalSerializer(remoteSerializer) {\n    this.remoteSerializer = remoteSerializer;\n  }\n  /** Decodes a remote document from storage locally to a Document. */\n\n\n  LocalSerializer.prototype.fromDbRemoteDocument = function (remoteDoc) {\n    if (remoteDoc.document) {\n      return this.remoteSerializer.fromDocument(remoteDoc.document, !!remoteDoc.hasCommittedMutations);\n    } else if (remoteDoc.noDocument) {\n      var key = DocumentKey.fromSegments(remoteDoc.noDocument.path);\n      var version = this.fromDbTimestamp(remoteDoc.noDocument.readTime);\n      return new NoDocument(key, version, {\n        hasCommittedMutations: !!remoteDoc.hasCommittedMutations\n      });\n    } else if (remoteDoc.unknownDocument) {\n      var key = DocumentKey.fromSegments(remoteDoc.unknownDocument.path);\n      var version = this.fromDbTimestamp(remoteDoc.unknownDocument.version);\n      return new UnknownDocument(key, version);\n    } else {\n      return fail('Unexpected DbRemoteDocument');\n    }\n  };\n  /** Encodes a document for storage locally. */\n\n\n  LocalSerializer.prototype.toDbRemoteDocument = function (maybeDoc) {\n    if (maybeDoc instanceof Document) {\n      var doc = maybeDoc.proto ? maybeDoc.proto : this.remoteSerializer.toDocument(maybeDoc);\n      var hasCommittedMutations = maybeDoc.hasCommittedMutations;\n      return new DbRemoteDocument(\n      /* unknownDocument= */\n      null,\n      /* noDocument= */\n      null, doc, hasCommittedMutations);\n    } else if (maybeDoc instanceof NoDocument) {\n      var path = maybeDoc.key.path.toArray();\n      var readTime = this.toDbTimestamp(maybeDoc.version);\n      var hasCommittedMutations = maybeDoc.hasCommittedMutations;\n      return new DbRemoteDocument(\n      /* unknownDocument= */\n      null, new DbNoDocument(path, readTime),\n      /* document= */\n      null, hasCommittedMutations);\n    } else if (maybeDoc instanceof UnknownDocument) {\n      var path = maybeDoc.key.path.toArray();\n      var readTime = this.toDbTimestamp(maybeDoc.version);\n      return new DbRemoteDocument(new DbUnknownDocument(path, readTime),\n      /* noDocument= */\n      null,\n      /* document= */\n      null,\n      /* hasCommittedMutations= */\n      true);\n    } else {\n      return fail('Unexpected MaybeDocumment');\n    }\n  };\n\n  LocalSerializer.prototype.toDbTimestamp = function (snapshotVersion) {\n    var timestamp = snapshotVersion.toTimestamp();\n    return new DbTimestamp(timestamp.seconds, timestamp.nanoseconds);\n  };\n\n  LocalSerializer.prototype.fromDbTimestamp = function (dbTimestamp) {\n    var timestamp = new Timestamp(dbTimestamp.seconds, dbTimestamp.nanoseconds);\n    return SnapshotVersion.fromTimestamp(timestamp);\n  };\n  /** Encodes a batch of mutations into a DbMutationBatch for local storage. */\n\n\n  LocalSerializer.prototype.toDbMutationBatch = function (userId, batch) {\n    var _this = this;\n\n    var serializedBaseMutations = batch.baseMutations.map(function (m) {\n      return _this.remoteSerializer.toMutation(m);\n    });\n    var serializedMutations = batch.mutations.map(function (m) {\n      return _this.remoteSerializer.toMutation(m);\n    });\n    return new DbMutationBatch(userId, batch.batchId, batch.localWriteTime.toMillis(), serializedBaseMutations, serializedMutations);\n  };\n  /** Decodes a DbMutationBatch into a MutationBatch */\n\n\n  LocalSerializer.prototype.fromDbMutationBatch = function (dbBatch) {\n    var _this = this;\n\n    var baseMutations = (dbBatch.baseMutations || []).map(function (m) {\n      return _this.remoteSerializer.fromMutation(m);\n    });\n    var mutations = dbBatch.mutations.map(function (m) {\n      return _this.remoteSerializer.fromMutation(m);\n    });\n    var timestamp = Timestamp.fromMillis(dbBatch.localWriteTimeMs);\n    return new MutationBatch(dbBatch.batchId, timestamp, baseMutations, mutations);\n  };\n  /*\r\n   * Encodes a set of document keys into an array of EncodedResourcePaths.\r\n   */\n\n\n  LocalSerializer.prototype.toDbResourcePaths = function (keys) {\n    var encodedKeys = [];\n    keys.forEach(function (key) {\n      encodedKeys.push(encode(key.path));\n    });\n    return encodedKeys;\n  };\n  /** Decodes an array of EncodedResourcePaths into a set of document keys. */\n\n\n  LocalSerializer.prototype.fromDbResourcePaths = function (encodedPaths) {\n    var keys = documentKeySet();\n\n    for (var _i = 0, encodedPaths_1 = encodedPaths; _i < encodedPaths_1.length; _i++) {\n      var documentKey = encodedPaths_1[_i];\n      keys = keys.add(new DocumentKey(decode(documentKey)));\n    }\n\n    return keys;\n  };\n  /** Decodes a DbTarget into QueryData */\n\n\n  LocalSerializer.prototype.fromDbTarget = function (dbTarget) {\n    var version = this.fromDbTimestamp(dbTarget.readTime);\n    var query;\n\n    if (isDocumentQuery(dbTarget.query)) {\n      query = this.remoteSerializer.fromDocumentsTarget(dbTarget.query);\n    } else {\n      query = this.remoteSerializer.fromQueryTarget(dbTarget.query);\n    }\n\n    return new QueryData(query, dbTarget.targetId, QueryPurpose.Listen, dbTarget.lastListenSequenceNumber, version, dbTarget.resumeToken);\n  };\n  /** Encodes QueryData into a DbTarget for storage locally. */\n\n\n  LocalSerializer.prototype.toDbTarget = function (queryData) {\n    assert(QueryPurpose.Listen === queryData.purpose, 'Only queries with purpose ' + QueryPurpose.Listen + ' may be stored, got ' + queryData.purpose);\n    var dbTimestamp = this.toDbTimestamp(queryData.snapshotVersion);\n    var queryProto;\n\n    if (queryData.query.isDocumentQuery()) {\n      queryProto = this.remoteSerializer.toDocumentsTarget(queryData.query);\n    } else {\n      queryProto = this.remoteSerializer.toQueryTarget(queryData.query);\n    }\n\n    var resumeToken;\n\n    if (queryData.resumeToken instanceof Uint8Array) {\n      // TODO(b/78771403): Convert tokens to strings during deserialization\n      assert(process.env.USE_MOCK_PERSISTENCE === 'YES', 'Persisting non-string stream tokens is only supported with mock persistence .');\n      resumeToken = queryData.resumeToken.toString();\n    } else {\n      resumeToken = queryData.resumeToken;\n    } // lastListenSequenceNumber is always 0 until we do real GC.\n\n\n    return new DbTarget(queryData.targetId, queryData.query.canonicalId(), dbTimestamp, resumeToken, queryData.sequenceNumber, queryProto);\n  };\n\n  return LocalSerializer;\n}();\n/**\r\n * A helper function for figuring out what kind of query has been stored.\r\n */\n\n\nfunction isDocumentQuery(dbQuery) {\n  return dbQuery.documents !== undefined;\n}\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction bufferEntryComparator(_a, _b) {\n  var aSequence = _a[0],\n      aIndex = _a[1];\n  var bSequence = _b[0],\n      bIndex = _b[1];\n  var seqCmp = primitiveComparator(aSequence, bSequence);\n\n  if (seqCmp === 0) {\n    // This order doesn't matter, but we can bias against churn by sorting\n    // entries created earlier as less than newer entries.\n    return primitiveComparator(aIndex, bIndex);\n  } else {\n    return seqCmp;\n  }\n}\n/**\r\n * Used to calculate the nth sequence number. Keeps a rolling buffer of the\r\n * lowest n values passed to `addElement`, and finally reports the largest of\r\n * them in `maxValue`.\r\n */\n\n\nvar RollingSequenceNumberBuffer =\n/** @class */\nfunction () {\n  function RollingSequenceNumberBuffer(maxElements) {\n    this.maxElements = maxElements;\n    this.buffer = new SortedSet(bufferEntryComparator);\n    this.previousIndex = 0;\n  }\n\n  RollingSequenceNumberBuffer.prototype.nextIndex = function () {\n    return ++this.previousIndex;\n  };\n\n  RollingSequenceNumberBuffer.prototype.addElement = function (sequenceNumber) {\n    var entry = [sequenceNumber, this.nextIndex()];\n\n    if (this.buffer.size < this.maxElements) {\n      this.buffer = this.buffer.add(entry);\n    } else {\n      var highestValue = this.buffer.last();\n\n      if (bufferEntryComparator(entry, highestValue) < 0) {\n        this.buffer = this.buffer.delete(highestValue).add(entry);\n      }\n    }\n  };\n\n  Object.defineProperty(RollingSequenceNumberBuffer.prototype, \"maxValue\", {\n    get: function get() {\n      // Guaranteed to be non-empty. If we decide we are not collecting any\n      // sequence numbers, nthSequenceNumber below short-circuits. If we have\n      // decided that we are collecting n sequence numbers, it's because n is some\n      // percentage of the existing sequence numbers. That means we should never\n      // be in a situation where we are collecting sequence numbers but don't\n      // actually have any.\n      return this.buffer.last()[0];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return RollingSequenceNumberBuffer;\n}();\n\nvar GC_DID_NOT_RUN = {\n  didRun: false,\n  sequenceNumbersCollected: 0,\n  targetsRemoved: 0,\n  documentsRemoved: 0\n};\n\nvar LruParams =\n/** @class */\nfunction () {\n  function LruParams( // When we attempt to collect, we will only do so if the cache size is greater than this\n  // threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.\n  cacheSizeCollectionThreshold, // The percentage of sequence numbers that we will attempt to collect\n  percentileToCollect, // A cap on the total number of sequence numbers that will be collected. This prevents\n  // us from collecting a huge number of sequence numbers if the cache has grown very large.\n  maximumSequenceNumbersToCollect) {\n    this.cacheSizeCollectionThreshold = cacheSizeCollectionThreshold;\n    this.percentileToCollect = percentileToCollect;\n    this.maximumSequenceNumbersToCollect = maximumSequenceNumbersToCollect;\n  }\n\n  LruParams.withCacheSize = function (cacheSize) {\n    return new LruParams(cacheSize, LruParams.DEFAULT_COLLECTION_PERCENTILE, LruParams.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT);\n  };\n\n  LruParams.COLLECTION_DISABLED = -1;\n  LruParams.MINIMUM_CACHE_SIZE_BYTES = 1 * 1024 * 1024;\n  LruParams.DEFAULT_CACHE_SIZE_BYTES = 40 * 1024 * 1024;\n  LruParams.DEFAULT_COLLECTION_PERCENTILE = 10;\n  LruParams.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1000;\n  LruParams.DEFAULT = new LruParams(LruParams.DEFAULT_CACHE_SIZE_BYTES, LruParams.DEFAULT_COLLECTION_PERCENTILE, LruParams.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT);\n  LruParams.DISABLED = new LruParams(LruParams.COLLECTION_DISABLED, 0, 0);\n  return LruParams;\n}();\n/** How long we wait to try running LRU GC after SDK initialization. */\n\n\nvar INITIAL_GC_DELAY_MS = 1 * 60 * 1000;\n/** Minimum amount of time between GC checks, after the first one. */\n\nvar REGULAR_GC_DELAY_MS = 5 * 60 * 1000;\n/**\r\n * This class is responsible for the scheduling of LRU garbage collection. It handles checking\r\n * whether or not GC is enabled, as well as which delay to use before the next run.\r\n */\n\nvar LruScheduler =\n/** @class */\nfunction () {\n  function LruScheduler(garbageCollector, asyncQueue, localStore) {\n    this.garbageCollector = garbageCollector;\n    this.asyncQueue = asyncQueue;\n    this.localStore = localStore;\n    this.hasRun = false;\n    this.gcTask = null;\n  }\n\n  LruScheduler.prototype.start = function () {\n    assert(this.gcTask === null, 'Cannot start an already started LruScheduler');\n\n    if (this.garbageCollector.params.cacheSizeCollectionThreshold !== LruParams.COLLECTION_DISABLED) {\n      this.scheduleGC();\n    }\n  };\n\n  LruScheduler.prototype.stop = function () {\n    if (this.gcTask) {\n      this.gcTask.cancel();\n      this.gcTask = null;\n    }\n  };\n\n  Object.defineProperty(LruScheduler.prototype, \"started\", {\n    get: function get() {\n      return this.gcTask !== null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LruScheduler.prototype.scheduleGC = function () {\n    var _this = this;\n\n    assert(this.gcTask === null, 'Cannot schedule GC while a task is pending');\n    var delay = this.hasRun ? REGULAR_GC_DELAY_MS : INITIAL_GC_DELAY_MS;\n    debug('LruGarbageCollector', \"Garbage collection scheduled in \" + delay + \"ms\");\n    this.gcTask = this.asyncQueue.enqueueAfterDelay(TimerId.LruGarbageCollection, delay, function () {\n      _this.gcTask = null;\n      _this.hasRun = true;\n      return _this.localStore.collectGarbage(_this.garbageCollector).then(function () {\n        return _this.scheduleGC();\n      }).catch(ignoreIfPrimaryLeaseLoss);\n    });\n  };\n\n  return LruScheduler;\n}();\n/** Implements the steps for LRU garbage collection. */\n\n\nvar LruGarbageCollector =\n/** @class */\nfunction () {\n  function LruGarbageCollector(delegate, params) {\n    this.delegate = delegate;\n    this.params = params;\n  }\n  /** Given a percentile of target to collect, returns the number of targets to collect. */\n\n\n  LruGarbageCollector.prototype.calculateTargetCount = function (txn, percentile) {\n    return this.delegate.getSequenceNumberCount(txn).next(function (targetCount) {\n      return Math.floor(percentile / 100.0 * targetCount);\n    });\n  };\n  /** Returns the nth sequence number, counting in order from the smallest. */\n\n\n  LruGarbageCollector.prototype.nthSequenceNumber = function (txn, n) {\n    var _this = this;\n\n    if (n === 0) {\n      return PersistencePromise.resolve(ListenSequence.INVALID);\n    }\n\n    var buffer = new RollingSequenceNumberBuffer(n);\n    return this.delegate.forEachTarget(txn, function (target) {\n      return buffer.addElement(target.sequenceNumber);\n    }).next(function () {\n      return _this.delegate.forEachOrphanedDocumentSequenceNumber(txn, function (sequenceNumber) {\n        return buffer.addElement(sequenceNumber);\n      });\n    }).next(function () {\n      return buffer.maxValue;\n    });\n  };\n  /**\r\n   * Removes targets with a sequence number equal to or less than the given upper bound, and removes\r\n   * document associations with those targets.\r\n   */\n\n\n  LruGarbageCollector.prototype.removeTargets = function (txn, upperBound, activeTargetIds) {\n    return this.delegate.removeTargets(txn, upperBound, activeTargetIds);\n  };\n  /**\r\n   * Removes documents that have a sequence number equal to or less than the upper bound and are not\r\n   * otherwise pinned.\r\n   */\n\n\n  LruGarbageCollector.prototype.removeOrphanedDocuments = function (txn, upperBound) {\n    return this.delegate.removeOrphanedDocuments(txn, upperBound);\n  };\n\n  LruGarbageCollector.prototype.collect = function (txn, activeTargetIds) {\n    var _this = this;\n\n    if (this.params.cacheSizeCollectionThreshold === LruParams.COLLECTION_DISABLED) {\n      debug('LruGarbageCollector', 'Garbage collection skipped; disabled');\n      return PersistencePromise.resolve(GC_DID_NOT_RUN);\n    }\n\n    return this.getCacheSize(txn).next(function (cacheSize) {\n      if (cacheSize < _this.params.cacheSizeCollectionThreshold) {\n        debug('LruGarbageCollector', \"Garbage collection skipped; Cache size \" + cacheSize + \" \" + (\"is lower than threshold \" + _this.params.cacheSizeCollectionThreshold));\n        return GC_DID_NOT_RUN;\n      } else {\n        return _this.runGarbageCollection(txn, activeTargetIds);\n      }\n    });\n  };\n\n  LruGarbageCollector.prototype.getCacheSize = function (txn) {\n    return this.delegate.getCacheSize(txn);\n  };\n\n  LruGarbageCollector.prototype.runGarbageCollection = function (txn, activeTargetIds) {\n    var _this = this;\n\n    var upperBoundSequenceNumber;\n    var sequenceNumbersToCollect, targetsRemoved; // Timestamps for various pieces of the process\n\n    var countedTargetsTs, foundUpperBoundTs, removedTargetsTs, removedDocumentsTs;\n    var startTs = Date.now();\n    return this.calculateTargetCount(txn, this.params.percentileToCollect).next(function (sequenceNumbers) {\n      // Cap at the configured max\n      if (sequenceNumbers > _this.params.maximumSequenceNumbersToCollect) {\n        debug('LruGarbageCollector', 'Capping sequence numbers to collect down ' + (\"to the maximum of \" + _this.params.maximumSequenceNumbersToCollect + \" \") + (\"from \" + sequenceNumbers));\n        sequenceNumbersToCollect = _this.params.maximumSequenceNumbersToCollect;\n      } else {\n        sequenceNumbersToCollect = sequenceNumbers;\n      }\n\n      countedTargetsTs = Date.now();\n      return _this.nthSequenceNumber(txn, sequenceNumbersToCollect);\n    }).next(function (upperBound) {\n      upperBoundSequenceNumber = upperBound;\n      foundUpperBoundTs = Date.now();\n      return _this.removeTargets(txn, upperBoundSequenceNumber, activeTargetIds);\n    }).next(function (numTargetsRemoved) {\n      targetsRemoved = numTargetsRemoved;\n      removedTargetsTs = Date.now();\n      return _this.removeOrphanedDocuments(txn, upperBoundSequenceNumber);\n    }).next(function (documentsRemoved) {\n      removedDocumentsTs = Date.now();\n\n      if (getLogLevel() <= LogLevel.DEBUG) {\n        var desc = 'LRU Garbage Collection\\n' + (\"\\tCounted targets in \" + (countedTargetsTs - startTs) + \"ms\\n\") + (\"\\tDetermined least recently used \" + sequenceNumbersToCollect + \" in \") + (foundUpperBoundTs - countedTargetsTs + \"ms\\n\") + (\"\\tRemoved \" + targetsRemoved + \" targets in \") + (removedTargetsTs - foundUpperBoundTs + \"ms\\n\") + (\"\\tRemoved \" + documentsRemoved + \" documents in \") + (removedDocumentsTs - removedTargetsTs + \"ms\\n\") + (\"Total Duration: \" + (removedDocumentsTs - startTs) + \"ms\");\n        debug('LruGarbageCollector', desc);\n      }\n\n      return PersistencePromise.resolve({\n        didRun: true,\n        sequenceNumbersCollected: sequenceNumbersToCollect,\n        targetsRemoved: targetsRemoved,\n        documentsRemoved: documentsRemoved\n      });\n    });\n  };\n\n  return LruGarbageCollector;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Opaque interface representing a persistence transaction.\r\n *\r\n * When you call Persistence.runTransaction(), it will create a transaction and\r\n * pass it to your callback. You then pass it to any method that operates\r\n * on persistence.\r\n */\n\n\nvar PersistenceTransaction =\n/** @class */\nfunction () {\n  function PersistenceTransaction() {}\n\n  return PersistenceTransaction;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_TAG$1 = 'IndexedDbPersistence';\n/**\r\n * Oldest acceptable age in milliseconds for client metadata before the client\r\n * is considered inactive and its associated data (such as the remote document\r\n * cache changelog) is garbage collected.\r\n */\n\nvar MAX_CLIENT_AGE_MS = 30 * 60 * 1000; // 30 minutes\n\n/**\r\n * Oldest acceptable metadata age for clients that may participate in the\r\n * primary lease election. Clients that have not updated their client metadata\r\n * within 5 seconds are not eligible to receive a primary lease.\r\n */\n\nvar MAX_PRIMARY_ELIGIBLE_AGE_MS = 5000;\n/**\r\n * The interval at which clients will update their metadata, including\r\n * refreshing their primary lease if held or potentially trying to acquire it if\r\n * not held.\r\n *\r\n * Primary clients may opportunistically refresh their metadata earlier\r\n * if they're already performing an IndexedDB operation.\r\n */\n\nvar CLIENT_METADATA_REFRESH_INTERVAL_MS = 4000;\n/** User-facing error when the primary lease is required but not available. */\n\nvar PRIMARY_LEASE_LOST_ERROR_MSG = 'The current tab is not in the required state to perform this operation. ' + 'It might be necessary to refresh the browser tab.';\nvar PRIMARY_LEASE_EXCLUSIVE_ERROR_MSG = 'Another tab has exclusive access to the persistence layer. ' + 'To allow shared access, make sure to invoke ' + '`enablePersistence()` with `synchronizeTabs:true` in all tabs.';\nvar UNSUPPORTED_PLATFORM_ERROR_MSG = 'This platform is either missing' + ' IndexedDB or is known to have an incomplete implementation. Offline' + ' persistence has been disabled.'; // The format of the LocalStorage key that stores zombied client is:\n//     firestore_zombie_<persistence_prefix>_<instance_key>\n\nvar ZOMBIED_CLIENTS_KEY_PREFIX = 'firestore_zombie';\n\nvar IndexedDbTransaction =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(IndexedDbTransaction, _super);\n\n  function IndexedDbTransaction(simpleDbTransaction, currentSequenceNumber) {\n    var _this = _super.call(this) || this;\n\n    _this.simpleDbTransaction = simpleDbTransaction;\n    _this.currentSequenceNumber = currentSequenceNumber;\n    return _this;\n  }\n\n  return IndexedDbTransaction;\n}(PersistenceTransaction);\n/**\r\n * An IndexedDB-backed instance of Persistence. Data is stored persistently\r\n * across sessions.\r\n *\r\n * On Web only, the Firestore SDKs support shared access to its persistence\r\n * layer. This allows multiple browser tabs to read and write to IndexedDb and\r\n * to synchronize state even without network connectivity. Shared access is\r\n * currently optional and not enabled unless all clients invoke\r\n * `enablePersistence()` with `{synchronizeTabs:true}`.\r\n *\r\n * In multi-tab mode, if multiple clients are active at the same time, the SDK\r\n * will designate one client as the “primary client”. An effort is made to pick\r\n * a visible, network-connected and active client, and this client is\r\n * responsible for letting other clients know about its presence. The primary\r\n * client writes a unique client-generated identifier (the client ID) to\r\n * IndexedDb’s “owner” store every 4 seconds. If the primary client fails to\r\n * update this entry, another client can acquire the lease and take over as\r\n * primary.\r\n *\r\n * Some persistence operations in the SDK are designated as primary-client only\r\n * operations. This includes the acknowledgment of mutations and all updates of\r\n * remote documents. The effects of these operations are written to persistence\r\n * and then broadcast to other tabs via LocalStorage (see\r\n * `WebStorageSharedClientState`), which then refresh their state from\r\n * persistence.\r\n *\r\n * Similarly, the primary client listens to notifications sent by secondary\r\n * clients to discover persistence changes written by secondary clients, such as\r\n * the addition of new mutations and query targets.\r\n *\r\n * If multi-tab is not enabled and another tab already obtained the primary\r\n * lease, IndexedDbPersistence enters a failed state and all subsequent\r\n * operations will automatically fail.\r\n *\r\n * Additionally, there is an optimization so that when a tab is closed, the\r\n * primary lease is released immediately (this is especially important to make\r\n * sure that a refreshed tab is able to immediately re-acquire the primary\r\n * lease). Unfortunately, IndexedDB cannot be reliably used in window.unload\r\n * since it is an asynchronous API. So in addition to attempting to give up the\r\n * lease, the leaseholder writes its client ID to a \"zombiedClient\" entry in\r\n * LocalStorage which acts as an indicator that another tab should go ahead and\r\n * take the primary lease immediately regardless of the current lease timestamp.\r\n *\r\n * TODO(b/114226234): Remove `synchronizeTabs` section when multi-tab is no\r\n * longer optional.\r\n */\n\n\nvar IndexedDbPersistence =\n/** @class */\nfunction () {\n  function IndexedDbPersistence(allowTabSynchronization, persistenceKey, clientId, platform, lruParams, queue, serializer, sequenceNumberSyncer) {\n    this.allowTabSynchronization = allowTabSynchronization;\n    this.persistenceKey = persistenceKey;\n    this.clientId = clientId;\n    this.queue = queue;\n    this.sequenceNumberSyncer = sequenceNumberSyncer;\n    this._started = false;\n    this.isPrimary = false;\n    this.networkEnabled = true;\n    /** Our window.unload handler, if registered. */\n\n    this.windowUnloadHandler = null;\n    this.inForeground = false;\n    /** Our 'visibilitychange' listener if registered. */\n\n    this.documentVisibilityHandler = null;\n    /** The client metadata refresh task. */\n\n    this.clientMetadataRefresher = null;\n    /** The last time we garbage collected the Remote Document Changelog. */\n\n    this.lastGarbageCollectionTime = Number.NEGATIVE_INFINITY;\n    /** A listener to notify on primary state changes. */\n\n    this.primaryStateListener = function (_) {\n      return Promise.resolve();\n    };\n\n    this.referenceDelegate = new IndexedDbLruDelegate(this, lruParams);\n    this.dbName = persistenceKey + IndexedDbPersistence.MAIN_DATABASE;\n    this.serializer = new LocalSerializer(serializer);\n    this.document = platform.document;\n    this.queryCache = new IndexedDbQueryCache(this.referenceDelegate, this.serializer);\n    this.indexManager = new IndexedDbIndexManager();\n    this.remoteDocumentCache = new IndexedDbRemoteDocumentCache(this.serializer, this.indexManager,\n    /*keepDocumentChangeLog=*/\n    this.allowTabSynchronization);\n\n    if (platform.window && platform.window.localStorage) {\n      this.window = platform.window;\n      this.webStorage = this.window.localStorage;\n    } else {\n      throw new FirestoreError(Code.UNIMPLEMENTED, 'IndexedDB persistence is only available on platforms that support LocalStorage.');\n    }\n  }\n\n  IndexedDbPersistence.getStore = function (txn, store) {\n    if (txn instanceof IndexedDbTransaction) {\n      return SimpleDb.getStore(txn.simpleDbTransaction, store);\n    } else {\n      throw fail('IndexedDbPersistence must use instances of IndexedDbTransaction');\n    }\n  };\n\n  IndexedDbPersistence.createIndexedDbPersistence = function (options) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var persistence;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!IndexedDbPersistence.isAvailable()) {\n              throw new FirestoreError(Code.UNIMPLEMENTED, UNSUPPORTED_PLATFORM_ERROR_MSG);\n            }\n\n            persistence = new IndexedDbPersistence(options.allowTabSynchronization, options.persistenceKey, options.clientId, options.platform, options.lruParams, options.queue, options.serializer, options.sequenceNumberSyncer);\n            return [4\n            /*yield*/\n            , persistence.start()];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , persistence];\n        }\n      });\n    });\n  };\n  /**\r\n   * Attempt to start IndexedDb persistence.\r\n   *\r\n   * @return {Promise<void>} Whether persistence was enabled.\r\n   */\n\n\n  IndexedDbPersistence.prototype.start = function () {\n    var _this = this;\n\n    assert(!this.started, 'IndexedDbPersistence double-started!');\n    assert(this.window !== null, \"Expected 'window' to be defined\");\n    return SimpleDb.openOrCreate(this.dbName, SCHEMA_VERSION, new SchemaConverter(this.serializer)).then(function (db) {\n      _this.simpleDb = db; // NOTE: This is expected to fail sometimes (in the case of another tab already\n      // having the persistence lock), so it's the first thing we should do.\n\n      return _this.updateClientMetadataAndTryBecomePrimary();\n    }).then(function () {\n      _this.attachVisibilityHandler();\n\n      _this.attachWindowUnloadHook();\n\n      _this.scheduleClientMetadataAndPrimaryLeaseRefreshes();\n\n      return _this.startRemoteDocumentCache();\n    }).then(function () {\n      return _this.simpleDb.runTransaction('readonly', [DbTargetGlobal.store], function (txn) {\n        return getHighestListenSequenceNumber(txn).next(function (highestListenSequenceNumber) {\n          _this.listenSequence = new ListenSequence(highestListenSequenceNumber, _this.sequenceNumberSyncer);\n        });\n      });\n    }).then(function () {\n      _this._started = true;\n    }).catch(function (reason) {\n      _this.simpleDb && _this.simpleDb.close();\n      return Promise.reject(reason);\n    });\n  };\n\n  IndexedDbPersistence.prototype.startRemoteDocumentCache = function () {\n    var _this = this;\n\n    return this.simpleDb.runTransaction('readonly', ALL_STORES, function (txn) {\n      return _this.remoteDocumentCache.start(txn);\n    });\n  };\n\n  IndexedDbPersistence.prototype.setPrimaryStateListener = function (primaryStateListener) {\n    var _this = this;\n\n    this.primaryStateListener = function (primaryState) {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        return tslib_1.__generator(this, function (_a) {\n          if (this.started) {\n            return [2\n            /*return*/\n            , primaryStateListener(primaryState)];\n          }\n\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    };\n\n    return primaryStateListener(this.isPrimary);\n  };\n\n  IndexedDbPersistence.prototype.setDatabaseDeletedListener = function (databaseDeletedListener) {\n    var _this = this;\n\n    this.simpleDb.setVersionChangeListener(function (event) {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        return tslib_1.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!(event.newVersion === null)) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , databaseDeletedListener()];\n\n            case 1:\n              _a.sent();\n\n              _a.label = 2;\n\n            case 2:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n\n  IndexedDbPersistence.prototype.setNetworkEnabled = function (networkEnabled) {\n    var _this = this;\n\n    if (this.networkEnabled !== networkEnabled) {\n      this.networkEnabled = networkEnabled; // Schedule a primary lease refresh for immediate execution. The eventual\n      // lease update will be propagated via `primaryStateListener`.\n\n      this.queue.enqueueAndForget(function () {\n        return tslib_1.__awaiter(_this, void 0, void 0, function () {\n          return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!this.started) return [3\n                /*break*/\n                , 2];\n                return [4\n                /*yield*/\n                , this.updateClientMetadataAndTryBecomePrimary()];\n\n              case 1:\n                _a.sent();\n\n                _a.label = 2;\n\n              case 2:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      });\n    }\n  };\n  /**\r\n   * Updates the client metadata in IndexedDb and attempts to either obtain or\r\n   * extend the primary lease for the local client. Asynchronously notifies the\r\n   * primary state listener if the client either newly obtained or released its\r\n   * primary lease.\r\n   */\n\n\n  IndexedDbPersistence.prototype.updateClientMetadataAndTryBecomePrimary = function () {\n    var _this = this;\n\n    return this.simpleDb.runTransaction('readwrite', ALL_STORES, function (txn) {\n      var metadataStore = clientMetadataStore(txn);\n      return metadataStore.put(new DbClientMetadata(_this.clientId, Date.now(), _this.networkEnabled, _this.inForeground, _this.remoteDocumentCache.lastProcessedDocumentChangeId)).next(function () {\n        if (_this.isPrimary) {\n          return _this.verifyPrimaryLease(txn).next(function (success) {\n            if (!success) {\n              _this.isPrimary = false;\n\n              _this.queue.enqueueAndForget(function () {\n                return _this.primaryStateListener(false);\n              });\n            }\n          });\n        }\n      }).next(function () {\n        return _this.canActAsPrimary(txn);\n      }).next(function (canActAsPrimary) {\n        var wasPrimary = _this.isPrimary;\n        _this.isPrimary = canActAsPrimary;\n\n        if (wasPrimary !== _this.isPrimary) {\n          _this.queue.enqueueAndForget(function () {\n            return _this.primaryStateListener(_this.isPrimary);\n          });\n        }\n\n        if (wasPrimary && !_this.isPrimary) {\n          return _this.releasePrimaryLeaseIfHeld(txn);\n        } else if (_this.isPrimary) {\n          return _this.acquireOrExtendPrimaryLease(txn);\n        }\n      });\n    });\n  };\n\n  IndexedDbPersistence.prototype.verifyPrimaryLease = function (txn) {\n    var _this = this;\n\n    var store = primaryClientStore(txn);\n    return store.get(DbPrimaryClient.key).next(function (primaryClient) {\n      return PersistencePromise.resolve(_this.isLocalClient(primaryClient));\n    });\n  };\n\n  IndexedDbPersistence.prototype.removeClientMetadata = function (txn) {\n    var metadataStore = clientMetadataStore(txn);\n    return metadataStore.delete(this.clientId);\n  };\n  /**\r\n   * If the garbage collection threshold has passed, prunes the\r\n   * RemoteDocumentChanges and the ClientMetadata store based on the last update\r\n   * time of all clients.\r\n   */\n\n\n  IndexedDbPersistence.prototype.maybeGarbageCollectMultiClientState = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var activeClients_1, inactiveClients_1;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(this.isPrimary && !this.isWithinAge(this.lastGarbageCollectionTime, MAX_CLIENT_AGE_MS))) return [3\n            /*break*/\n            , 2];\n            this.lastGarbageCollectionTime = Date.now();\n            inactiveClients_1 = [];\n            return [4\n            /*yield*/\n            , this.runTransaction('maybeGarbageCollectMultiClientState', 'readwrite-primary', function (txn) {\n              var metadataStore = IndexedDbPersistence.getStore(txn, DbClientMetadata.store);\n              return metadataStore.loadAll().next(function (existingClients) {\n                activeClients_1 = _this.filterActiveClients(existingClients, MAX_CLIENT_AGE_MS);\n                inactiveClients_1 = existingClients.filter(function (client) {\n                  return activeClients_1.indexOf(client) === -1;\n                });\n              }).next(function () {\n                // Delete metadata for clients that are no longer considered active.\n                return PersistencePromise.forEach(inactiveClients_1, function (inactiveClient) {\n                  return metadataStore.delete(inactiveClient.clientId);\n                });\n              }).next(function () {\n                // Retrieve the minimum change ID from the set of active clients.\n                // The primary client doesn't read from the document change log,\n                // and hence we exclude it when we determine the minimum\n                // `lastProcessedDocumentChangeId`.\n                activeClients_1 = activeClients_1.filter(function (client) {\n                  return client.clientId !== _this.clientId;\n                });\n\n                if (activeClients_1.length > 0) {\n                  var processedChangeIds = activeClients_1.map(function (client) {\n                    return client.lastProcessedDocumentChangeId || 0;\n                  });\n                  var oldestChangeId = Math.min.apply(Math, processedChangeIds);\n                  return _this.remoteDocumentCache.removeDocumentChangesThroughChangeId(txn, oldestChangeId);\n                }\n              });\n            })];\n\n          case 1:\n            _a.sent(); // Delete potential leftover entries that may continue to mark the\n            // inactive clients as zombied in LocalStorage.\n            // Ideally we'd delete the IndexedDb and LocalStorage zombie entries for\n            // the client atomically, but we can't. So we opt to delete the IndexedDb\n            // entries first to avoid potentially reviving a zombied client.\n\n\n            inactiveClients_1.forEach(function (inactiveClient) {\n              _this.window.localStorage.removeItem(_this.zombiedClientLocalStorageKey(inactiveClient.clientId));\n            });\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Schedules a recurring timer to update the client metadata and to either\r\n   * extend or acquire the primary lease if the client is eligible.\r\n   */\n\n\n  IndexedDbPersistence.prototype.scheduleClientMetadataAndPrimaryLeaseRefreshes = function () {\n    var _this = this;\n\n    this.clientMetadataRefresher = this.queue.enqueueAfterDelay(TimerId.ClientMetadataRefresh, CLIENT_METADATA_REFRESH_INTERVAL_MS, function () {\n      return _this.updateClientMetadataAndTryBecomePrimary().then(function () {\n        return _this.maybeGarbageCollectMultiClientState();\n      }).then(function () {\n        return _this.scheduleClientMetadataAndPrimaryLeaseRefreshes();\n      });\n    });\n  };\n  /** Checks whether `client` is the local client. */\n\n\n  IndexedDbPersistence.prototype.isLocalClient = function (client) {\n    return client ? client.ownerId === this.clientId : false;\n  };\n  /**\r\n   * Evaluate the state of all active clients and determine whether the local\r\n   * client is or can act as the holder of the primary lease. Returns whether\r\n   * the client is eligible for the lease, but does not actually acquire it.\r\n   * May return 'false' even if there is no active leaseholder and another\r\n   * (foreground) client should become leaseholder instead.\r\n   */\n\n\n  IndexedDbPersistence.prototype.canActAsPrimary = function (txn) {\n    var _this = this;\n\n    var store = primaryClientStore(txn);\n    return store.get(DbPrimaryClient.key).next(function (currentPrimary) {\n      var currentLeaseIsValid = currentPrimary !== null && _this.isWithinAge(currentPrimary.leaseTimestampMs, MAX_PRIMARY_ELIGIBLE_AGE_MS) && !_this.isClientZombied(currentPrimary.ownerId); // A client is eligible for the primary lease if:\n      // - its network is enabled and the client's tab is in the foreground.\n      // - its network is enabled and no other client's tab is in the\n      //   foreground.\n      // - every clients network is disabled and the client's tab is in the\n      //   foreground.\n      // - every clients network is disabled and no other client's tab is in\n      //   the foreground.\n\n      if (currentLeaseIsValid) {\n        if (_this.isLocalClient(currentPrimary) && _this.networkEnabled) {\n          return true;\n        }\n\n        if (!_this.isLocalClient(currentPrimary)) {\n          if (!currentPrimary.allowTabSynchronization) {\n            // Fail the `canActAsPrimary` check if the current leaseholder has\n            // not opted into multi-tab synchronization. If this happens at\n            // client startup, we reject the Promise returned by\n            // `enablePersistence()` and the user can continue to use Firestore\n            // with in-memory persistence.\n            // If this fails during a lease refresh, we will instead block the\n            // AsyncQueue from executing further operations. Note that this is\n            // acceptable since mixing & matching different `synchronizeTabs`\n            // settings is not supported.\n            //\n            // TODO(b/114226234): Remove this check when `synchronizeTabs` can\n            // no longer be turned off.\n            throw new FirestoreError(Code.FAILED_PRECONDITION, PRIMARY_LEASE_EXCLUSIVE_ERROR_MSG);\n          }\n\n          return false;\n        }\n      }\n\n      if (_this.networkEnabled && _this.inForeground) {\n        return true;\n      }\n\n      return clientMetadataStore(txn).loadAll().next(function (existingClients) {\n        // Process all existing clients and determine whether at least one of\n        // them is better suited to obtain the primary lease.\n        var preferredCandidate = _this.filterActiveClients(existingClients, MAX_PRIMARY_ELIGIBLE_AGE_MS).find(function (otherClient) {\n          if (_this.clientId !== otherClient.clientId) {\n            var otherClientHasBetterNetworkState = !_this.networkEnabled && otherClient.networkEnabled;\n            var otherClientHasBetterVisibility = !_this.inForeground && otherClient.inForeground;\n            var otherClientHasSameNetworkState = _this.networkEnabled === otherClient.networkEnabled;\n\n            if (otherClientHasBetterNetworkState || otherClientHasBetterVisibility && otherClientHasSameNetworkState) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        return preferredCandidate === undefined;\n      });\n    }).next(function (canActAsPrimary) {\n      if (_this.isPrimary !== canActAsPrimary) {\n        debug(LOG_TAG$1, \"Client \" + (canActAsPrimary ? 'is' : 'is not') + \" eligible for a primary lease.\");\n      }\n\n      return canActAsPrimary;\n    });\n  };\n\n  IndexedDbPersistence.prototype.shutdown = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // The shutdown() operations are idempotent and can be called even when\n            // start() aborted (e.g. because it couldn't acquire the persistence lease).\n            this._started = false;\n            this.markClientZombied();\n\n            if (this.clientMetadataRefresher) {\n              this.clientMetadataRefresher.cancel();\n              this.clientMetadataRefresher = null;\n            }\n\n            this.detachVisibilityHandler();\n            this.detachWindowUnloadHook();\n            return [4\n            /*yield*/\n            , this.simpleDb.runTransaction('readwrite', [DbPrimaryClient.store, DbClientMetadata.store], function (txn) {\n              return _this.releasePrimaryLeaseIfHeld(txn).next(function () {\n                return _this.removeClientMetadata(txn);\n              });\n            })];\n\n          case 1:\n            _a.sent();\n\n            this.simpleDb.close(); // Remove the entry marking the client as zombied from LocalStorage since\n            // we successfully deleted its metadata from IndexedDb.\n\n            this.removeClientZombiedEntry();\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns clients that are not zombied and have an updateTime within the\r\n   * provided threshold.\r\n   */\n\n\n  IndexedDbPersistence.prototype.filterActiveClients = function (clients, activityThresholdMs) {\n    var _this = this;\n\n    return clients.filter(function (client) {\n      return _this.isWithinAge(client.updateTimeMs, activityThresholdMs) && !_this.isClientZombied(client.clientId);\n    });\n  };\n\n  IndexedDbPersistence.prototype.getActiveClients = function () {\n    var _this = this;\n\n    return this.simpleDb.runTransaction('readonly', [DbClientMetadata.store], function (txn) {\n      return clientMetadataStore(txn).loadAll().next(function (clients) {\n        return _this.filterActiveClients(clients, MAX_CLIENT_AGE_MS).map(function (clientMetadata) {\n          return clientMetadata.clientId;\n        });\n      });\n    });\n  };\n\n  IndexedDbPersistence.clearPersistence = function (persistenceKey) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var dbName;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!IndexedDbPersistence.isAvailable()) {\n              return [2\n              /*return*/\n              , Promise.resolve()];\n            }\n\n            dbName = persistenceKey + IndexedDbPersistence.MAIN_DATABASE;\n            return [4\n            /*yield*/\n            , SimpleDb.delete(dbName)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(IndexedDbPersistence.prototype, \"started\", {\n    get: function get() {\n      return this._started;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IndexedDbPersistence.prototype.getMutationQueue = function (user) {\n    assert(this.started, 'Cannot initialize MutationQueue before persistence is started.');\n    return IndexedDbMutationQueue.forUser(user, this.serializer, this.indexManager, this.referenceDelegate);\n  };\n\n  IndexedDbPersistence.prototype.getQueryCache = function () {\n    assert(this.started, 'Cannot initialize QueryCache before persistence is started.');\n    return this.queryCache;\n  };\n\n  IndexedDbPersistence.prototype.getRemoteDocumentCache = function () {\n    assert(this.started, 'Cannot initialize RemoteDocumentCache before persistence is started.');\n    return this.remoteDocumentCache;\n  };\n\n  IndexedDbPersistence.prototype.getIndexManager = function () {\n    assert(this.started, 'Cannot initialize IndexManager before persistence is started.');\n    return this.indexManager;\n  };\n\n  IndexedDbPersistence.prototype.runTransaction = function (action, mode, transactionOperation) {\n    var _this = this;\n\n    debug(LOG_TAG$1, 'Starting transaction:', action); // Do all transactions as readwrite against all object stores, since we\n    // are the only reader/writer.\n\n    return this.simpleDb.runTransaction(mode === 'readonly' ? 'readonly' : 'readwrite', ALL_STORES, function (simpleDbTxn) {\n      if (mode === 'readwrite-primary') {\n        // While we merely verify that we have (or can acquire) the lease\n        // immediately, we wait to extend the primary lease until after\n        // executing transactionOperation(). This ensures that even if the\n        // transactionOperation takes a long time, we'll use a recent\n        // leaseTimestampMs in the extended (or newly acquired) lease.\n        return _this.verifyPrimaryLease(simpleDbTxn).next(function (success) {\n          if (!success) {\n            error(\"Failed to obtain primary lease for action '\" + action + \"'.\");\n            _this.isPrimary = false;\n\n            _this.queue.enqueueAndForget(function () {\n              return _this.primaryStateListener(false);\n            });\n\n            throw new FirestoreError(Code.FAILED_PRECONDITION, PRIMARY_LEASE_LOST_ERROR_MSG);\n          }\n\n          return transactionOperation(new IndexedDbTransaction(simpleDbTxn, _this.listenSequence.next()));\n        }).next(function (result) {\n          return _this.acquireOrExtendPrimaryLease(simpleDbTxn).next(function () {\n            return result;\n          });\n        });\n      } else {\n        return _this.verifyAllowTabSynchronization(simpleDbTxn).next(function () {\n          return transactionOperation(new IndexedDbTransaction(simpleDbTxn, _this.listenSequence.next()));\n        });\n      }\n    });\n  };\n  /**\r\n   * Verifies that the current tab is the primary leaseholder or alternatively\r\n   * that the leaseholder has opted into multi-tab synchronization.\r\n   */\n  // TODO(b/114226234): Remove this check when `synchronizeTabs` can no longer\n  // be turned off.\n\n\n  IndexedDbPersistence.prototype.verifyAllowTabSynchronization = function (txn) {\n    var _this = this;\n\n    var store = primaryClientStore(txn);\n    return store.get(DbPrimaryClient.key).next(function (currentPrimary) {\n      var currentLeaseIsValid = currentPrimary !== null && _this.isWithinAge(currentPrimary.leaseTimestampMs, MAX_PRIMARY_ELIGIBLE_AGE_MS) && !_this.isClientZombied(currentPrimary.ownerId);\n\n      if (currentLeaseIsValid && !_this.isLocalClient(currentPrimary)) {\n        if (!currentPrimary.allowTabSynchronization) {\n          throw new FirestoreError(Code.FAILED_PRECONDITION, PRIMARY_LEASE_EXCLUSIVE_ERROR_MSG);\n        }\n      }\n    });\n  };\n  /**\r\n   * Obtains or extends the new primary lease for the local client. This\r\n   * method does not verify that the client is eligible for this lease.\r\n   */\n\n\n  IndexedDbPersistence.prototype.acquireOrExtendPrimaryLease = function (txn) {\n    var newPrimary = new DbPrimaryClient(this.clientId, this.allowTabSynchronization, Date.now());\n    return primaryClientStore(txn).put(DbPrimaryClient.key, newPrimary);\n  };\n\n  IndexedDbPersistence.isAvailable = function () {\n    return SimpleDb.isAvailable();\n  };\n  /**\r\n   * Generates a string used as a prefix when storing data in IndexedDB and\r\n   * LocalStorage.\r\n   */\n\n\n  IndexedDbPersistence.buildStoragePrefix = function (databaseInfo) {\n    // Use two different prefix formats:\n    //\n    //   * firestore / persistenceKey / projectID . databaseID / ...\n    //   * firestore / persistenceKey / projectID / ...\n    //\n    // projectIDs are DNS-compatible names and cannot contain dots\n    // so there's no danger of collisions.\n    var database = databaseInfo.databaseId.projectId;\n\n    if (!databaseInfo.databaseId.isDefaultDatabase) {\n      database += '.' + databaseInfo.databaseId.database;\n    }\n\n    return 'firestore/' + databaseInfo.persistenceKey + '/' + database + '/';\n  };\n  /** Checks the primary lease and removes it if we are the current primary. */\n\n\n  IndexedDbPersistence.prototype.releasePrimaryLeaseIfHeld = function (txn) {\n    var _this = this;\n\n    var store = primaryClientStore(txn);\n    return store.get(DbPrimaryClient.key).next(function (primaryClient) {\n      if (_this.isLocalClient(primaryClient)) {\n        debug(LOG_TAG$1, 'Releasing primary lease.');\n        return store.delete(DbPrimaryClient.key);\n      } else {\n        return PersistencePromise.resolve();\n      }\n    });\n  };\n  /** Verifies that `updateTimeMs` is within `maxAgeMs`. */\n\n\n  IndexedDbPersistence.prototype.isWithinAge = function (updateTimeMs, maxAgeMs) {\n    var now = Date.now();\n    var minAcceptable = now - maxAgeMs;\n    var maxAcceptable = now;\n\n    if (updateTimeMs < minAcceptable) {\n      return false;\n    } else if (updateTimeMs > maxAcceptable) {\n      error(\"Detected an update time that is in the future: \" + updateTimeMs + \" > \" + maxAcceptable);\n      return false;\n    }\n\n    return true;\n  };\n\n  IndexedDbPersistence.prototype.attachVisibilityHandler = function () {\n    var _this = this;\n\n    if (this.document !== null && typeof this.document.addEventListener === 'function') {\n      this.documentVisibilityHandler = function () {\n        _this.queue.enqueueAndForget(function () {\n          _this.inForeground = _this.document.visibilityState === 'visible';\n          return _this.updateClientMetadataAndTryBecomePrimary();\n        });\n      };\n\n      this.document.addEventListener('visibilitychange', this.documentVisibilityHandler);\n      this.inForeground = this.document.visibilityState === 'visible';\n    }\n  };\n\n  IndexedDbPersistence.prototype.detachVisibilityHandler = function () {\n    if (this.documentVisibilityHandler) {\n      assert(this.document !== null && typeof this.document.addEventListener === 'function', \"Expected 'document.addEventListener' to be a function\");\n      this.document.removeEventListener('visibilitychange', this.documentVisibilityHandler);\n      this.documentVisibilityHandler = null;\n    }\n  };\n  /**\r\n   * Attaches a window.unload handler that will synchronously write our\r\n   * clientId to a \"zombie client id\" location in LocalStorage. This can be used\r\n   * by tabs trying to acquire the primary lease to determine that the lease\r\n   * is no longer valid even if the timestamp is recent. This is particularly\r\n   * important for the refresh case (so the tab correctly re-acquires the\r\n   * primary lease). LocalStorage is used for this rather than IndexedDb because\r\n   * it is a synchronous API and so can be used reliably from  an unload\r\n   * handler.\r\n   */\n\n\n  IndexedDbPersistence.prototype.attachWindowUnloadHook = function () {\n    var _this = this;\n\n    if (typeof this.window.addEventListener === 'function') {\n      this.windowUnloadHandler = function () {\n        // Note: In theory, this should be scheduled on the AsyncQueue since it\n        // accesses internal state. We execute this code directly during shutdown\n        // to make sure it gets a chance to run.\n        _this.markClientZombied();\n\n        _this.queue.enqueueAndForget(function () {\n          // Attempt graceful shutdown (including releasing our primary lease),\n          // but there's no guarantee it will complete.\n          return _this.shutdown();\n        });\n      };\n\n      this.window.addEventListener('unload', this.windowUnloadHandler);\n    }\n  };\n\n  IndexedDbPersistence.prototype.detachWindowUnloadHook = function () {\n    if (this.windowUnloadHandler) {\n      assert(typeof this.window.removeEventListener === 'function', \"Expected 'window.removeEventListener' to be a function\");\n      this.window.removeEventListener('unload', this.windowUnloadHandler);\n      this.windowUnloadHandler = null;\n    }\n  };\n  /**\r\n   * Returns whether a client is \"zombied\" based on its LocalStorage entry.\r\n   * Clients become zombied when their tab closes without running all of the\r\n   * cleanup logic in `shutdown()`.\r\n   */\n\n\n  IndexedDbPersistence.prototype.isClientZombied = function (clientId) {\n    try {\n      var isZombied = this.webStorage.getItem(this.zombiedClientLocalStorageKey(clientId)) !== null;\n      debug(LOG_TAG$1, \"Client '\" + clientId + \"' \" + (isZombied ? 'is' : 'is not') + \" zombied in LocalStorage\");\n      return isZombied;\n    } catch (e) {\n      // Gracefully handle if LocalStorage isn't working.\n      error(LOG_TAG$1, 'Failed to get zombied client id.', e);\n      return false;\n    }\n  };\n  /**\r\n   * Record client as zombied (a client that had its tab closed). Zombied\r\n   * clients are ignored during primary tab selection.\r\n   */\n\n\n  IndexedDbPersistence.prototype.markClientZombied = function () {\n    try {\n      this.webStorage.setItem(this.zombiedClientLocalStorageKey(this.clientId), String(Date.now()));\n    } catch (e) {\n      // Gracefully handle if LocalStorage isn't available / working.\n      error('Failed to set zombie client id.', e);\n    }\n  };\n  /** Removes the zombied client entry if it exists. */\n\n\n  IndexedDbPersistence.prototype.removeClientZombiedEntry = function () {\n    try {\n      this.webStorage.removeItem(this.zombiedClientLocalStorageKey(this.clientId));\n    } catch (e) {// Ignore\n    }\n  };\n\n  IndexedDbPersistence.prototype.zombiedClientLocalStorageKey = function (clientId) {\n    return ZOMBIED_CLIENTS_KEY_PREFIX + \"_\" + this.persistenceKey + \"_\" + clientId;\n  };\n  /**\r\n   * The name of the main (and currently only) IndexedDB database. this name is\r\n   * appended to the prefix provided to the IndexedDbPersistence constructor.\r\n   */\n\n\n  IndexedDbPersistence.MAIN_DATABASE = 'main';\n  return IndexedDbPersistence;\n}();\n\nfunction isPrimaryLeaseLostError(err) {\n  return err.code === Code.FAILED_PRECONDITION && err.message === PRIMARY_LEASE_LOST_ERROR_MSG;\n}\n/**\r\n * Verifies the error thrown by a LocalStore operation. If a LocalStore\r\n * operation fails because the primary lease has been taken by another client,\r\n * we ignore the error (the persistence layer will immediately call\r\n * `applyPrimaryLease` to propagate the primary state change). All other errors\r\n * are re-thrown.\r\n *\r\n * @param err An error returned by a LocalStore operation.\r\n * @return A Promise that resolves after we recovered, or the original error.\r\n */\n\n\nfunction ignoreIfPrimaryLeaseLoss(err) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    return tslib_1.__generator(this, function (_a) {\n      if (isPrimaryLeaseLostError(err)) {\n        debug(LOG_TAG$1, 'Unexpectedly lost primary lease');\n      } else {\n        throw err;\n      }\n\n      return [2\n      /*return*/\n      ];\n    });\n  });\n}\n/**\r\n * Helper to get a typed SimpleDbStore for the primary client object store.\r\n */\n\n\nfunction primaryClientStore(txn) {\n  return txn.store(DbPrimaryClient.store);\n}\n/**\r\n * Helper to get a typed SimpleDbStore for the client metadata object store.\r\n */\n\n\nfunction clientMetadataStore(txn) {\n  return txn.store(DbClientMetadata.store);\n}\n/** Provides LRU functionality for IndexedDB persistence. */\n\n\nvar IndexedDbLruDelegate =\n/** @class */\nfunction () {\n  function IndexedDbLruDelegate(db, params) {\n    this.db = db;\n    this.inMemoryPins = null;\n    this.garbageCollector = new LruGarbageCollector(this, params);\n  }\n\n  IndexedDbLruDelegate.prototype.getSequenceNumberCount = function (txn) {\n    var docCountPromise = this.orphanedDocmentCount(txn);\n    var targetCountPromise = this.db.getQueryCache().getQueryCount(txn);\n    return targetCountPromise.next(function (targetCount) {\n      return docCountPromise.next(function (docCount) {\n        return targetCount + docCount;\n      });\n    });\n  };\n\n  IndexedDbLruDelegate.prototype.orphanedDocmentCount = function (txn) {\n    var orphanedCount = 0;\n    return this.forEachOrphanedDocumentSequenceNumber(txn, function (_) {\n      orphanedCount++;\n    }).next(function () {\n      return orphanedCount;\n    });\n  };\n\n  IndexedDbLruDelegate.prototype.forEachTarget = function (txn, f) {\n    return this.db.getQueryCache().forEachTarget(txn, f);\n  };\n\n  IndexedDbLruDelegate.prototype.forEachOrphanedDocumentSequenceNumber = function (txn, f) {\n    return this.forEachOrphanedDocument(txn, function (docKey, sequenceNumber) {\n      return f(sequenceNumber);\n    });\n  };\n\n  IndexedDbLruDelegate.prototype.setInMemoryPins = function (inMemoryPins) {\n    this.inMemoryPins = inMemoryPins;\n  };\n\n  IndexedDbLruDelegate.prototype.addReference = function (txn, key) {\n    return writeSentinelKey(txn, key);\n  };\n\n  IndexedDbLruDelegate.prototype.removeReference = function (txn, key) {\n    return writeSentinelKey(txn, key);\n  };\n\n  IndexedDbLruDelegate.prototype.removeTargets = function (txn, upperBound, activeTargetIds) {\n    return this.db.getQueryCache().removeTargets(txn, upperBound, activeTargetIds);\n  };\n\n  IndexedDbLruDelegate.prototype.removeMutationReference = function (txn, key) {\n    return writeSentinelKey(txn, key);\n  };\n  /**\r\n   * Returns true if anything would prevent this document from being garbage\r\n   * collected, given that the document in question is not present in any\r\n   * targets and has a sequence number less than or equal to the upper bound for\r\n   * the collection run.\r\n   */\n\n\n  IndexedDbLruDelegate.prototype.isPinned = function (txn, docKey) {\n    if (this.inMemoryPins.containsKey(docKey)) {\n      return PersistencePromise.resolve(true);\n    } else {\n      return mutationQueuesContainKey(txn, docKey);\n    }\n  };\n\n  IndexedDbLruDelegate.prototype.removeOrphanedDocuments = function (txn, upperBound) {\n    var _this = this;\n\n    var documentCache = this.db.getRemoteDocumentCache();\n    var changeBuffer = documentCache.newChangeBuffer();\n    var promises = [];\n    var documentCount = 0;\n    var iteration = this.forEachOrphanedDocument(txn, function (docKey, sequenceNumber) {\n      if (sequenceNumber <= upperBound) {\n        var p = _this.isPinned(txn, docKey).next(function (isPinned) {\n          if (!isPinned) {\n            documentCount++; // Our size accounting requires us to read all documents before\n            // removing them.\n\n            return changeBuffer.getEntry(txn, docKey).next(function () {\n              changeBuffer.removeEntry(docKey);\n              return documentTargetStore(txn).delete(sentinelKey$1(docKey));\n            });\n          }\n        });\n\n        promises.push(p);\n      }\n    });\n    return iteration.next(function () {\n      return PersistencePromise.waitFor(promises);\n    }).next(function () {\n      return changeBuffer.apply(txn);\n    }).next(function () {\n      return documentCount;\n    });\n  };\n\n  IndexedDbLruDelegate.prototype.removeTarget = function (txn, queryData) {\n    var updated = queryData.withSequenceNumber(txn.currentSequenceNumber);\n    return this.db.getQueryCache().updateQueryData(txn, updated);\n  };\n\n  IndexedDbLruDelegate.prototype.updateLimboDocument = function (txn, key) {\n    return writeSentinelKey(txn, key);\n  };\n  /**\r\n   * Call provided function for each document in the cache that is 'orphaned'. Orphaned\r\n   * means not a part of any target, so the only entry in the target-document index for\r\n   * that document will be the sentinel row (targetId 0), which will also have the sequence\r\n   * number for the last time the document was accessed.\r\n   */\n\n\n  IndexedDbLruDelegate.prototype.forEachOrphanedDocument = function (txn, f) {\n    var store = documentTargetStore(txn);\n    var nextToReport = ListenSequence.INVALID;\n    var nextPath;\n    return store.iterate({\n      index: DbTargetDocument.documentTargetsIndex\n    }, function (_a, _b) {\n      var targetId = _a[0],\n          docKey = _a[1];\n      var path = _b.path,\n          sequenceNumber = _b.sequenceNumber;\n\n      if (targetId === 0) {\n        // if nextToReport is valid, report it, this is a new key so the\n        // last one must not be a member of any targets.\n        if (nextToReport !== ListenSequence.INVALID) {\n          f(new DocumentKey(decode(nextPath)), nextToReport);\n        } // set nextToReport to be this sequence number. It's the next one we\n        // might report, if we don't find any targets for this document.\n        // Note that the sequence number must be defined when the targetId\n        // is 0.\n\n\n        nextToReport = sequenceNumber;\n        nextPath = path;\n      } else {\n        // set nextToReport to be invalid, we know we don't need to report\n        // this one since we found a target for it.\n        nextToReport = ListenSequence.INVALID;\n      }\n    }).next(function () {\n      // Since we report sequence numbers after getting to the next key, we\n      // need to check if the last key we iterated over was an orphaned\n      // document and report it.\n      if (nextToReport !== ListenSequence.INVALID) {\n        f(new DocumentKey(decode(nextPath)), nextToReport);\n      }\n    });\n  };\n\n  IndexedDbLruDelegate.prototype.getCacheSize = function (txn) {\n    return this.db.getRemoteDocumentCache().getSize(txn);\n  };\n\n  return IndexedDbLruDelegate;\n}();\n\nfunction sentinelKey$1(key) {\n  return [0, encode(key.path)];\n}\n/**\r\n * @return A value suitable for writing a sentinel row in the target-document\r\n * store.\r\n */\n\n\nfunction sentinelRow(key, sequenceNumber) {\n  return new DbTargetDocument(0, encode(key.path), sequenceNumber);\n}\n\nfunction writeSentinelKey(txn, key) {\n  return documentTargetStore(txn).put(sentinelRow(key, txn.currentSequenceNumber));\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A readonly view of the local state of all documents we're tracking (i.e. we\r\n * have a cached version in remoteDocumentCache or local mutations for the\r\n * document). The view is computed by applying the mutations in the\r\n * MutationQueue to the RemoteDocumentCache.\r\n */\n\n\nvar LocalDocumentsView =\n/** @class */\nfunction () {\n  function LocalDocumentsView(remoteDocumentCache, mutationQueue, indexManager) {\n    this.remoteDocumentCache = remoteDocumentCache;\n    this.mutationQueue = mutationQueue;\n    this.indexManager = indexManager;\n  }\n  /**\r\n   * Get the local view of the document identified by `key`.\r\n   *\r\n   * @return Local view of the document or null if we don't have any cached\r\n   * state for it.\r\n   */\n\n\n  LocalDocumentsView.prototype.getDocument = function (transaction, key) {\n    var _this = this;\n\n    return this.mutationQueue.getAllMutationBatchesAffectingDocumentKey(transaction, key).next(function (batches) {\n      return _this.getDocumentInternal(transaction, key, batches);\n    });\n  };\n  /** Internal version of `getDocument` that allows reusing batches. */\n\n\n  LocalDocumentsView.prototype.getDocumentInternal = function (transaction, key, inBatches) {\n    return this.remoteDocumentCache.getEntry(transaction, key).next(function (doc) {\n      for (var _i = 0, inBatches_1 = inBatches; _i < inBatches_1.length; _i++) {\n        var batch = inBatches_1[_i];\n        doc = batch.applyToLocalView(key, doc);\n      }\n\n      return doc;\n    });\n  }; // Returns the view of the given `docs` as they would appear after applying\n  // all mutations in the given `batches`.\n\n\n  LocalDocumentsView.prototype.applyLocalMutationsToDocuments = function (transaction, docs, batches) {\n    var results = nullableMaybeDocumentMap();\n    docs.forEach(function (key, localView) {\n      for (var _i = 0, batches_1 = batches; _i < batches_1.length; _i++) {\n        var batch = batches_1[_i];\n        localView = batch.applyToLocalView(key, localView);\n      }\n\n      results = results.insert(key, localView);\n    });\n    return results;\n  };\n  /**\r\n   * Gets the local view of the documents identified by `keys`.\r\n   *\r\n   * If we don't have cached state for a document in `keys`, a NoDocument will\r\n   * be stored for that key in the resulting set.\r\n   */\n\n\n  LocalDocumentsView.prototype.getDocuments = function (transaction, keys) {\n    var _this = this;\n\n    return this.remoteDocumentCache.getEntries(transaction, keys).next(function (docs) {\n      return _this.getLocalViewOfDocuments(transaction, docs);\n    });\n  };\n  /**\r\n   * Similar to `getDocuments`, but creates the local view from the given\r\n   * `baseDocs` without retrieving documents from the local store.\r\n   */\n\n\n  LocalDocumentsView.prototype.getLocalViewOfDocuments = function (transaction, baseDocs) {\n    var _this = this;\n\n    return this.mutationQueue.getAllMutationBatchesAffectingDocumentKeys(transaction, baseDocs).next(function (batches) {\n      var docs = _this.applyLocalMutationsToDocuments(transaction, baseDocs, batches);\n\n      var results = maybeDocumentMap();\n      docs.forEach(function (key, maybeDoc) {\n        // TODO(http://b/32275378): Don't conflate missing / deleted.\n        if (!maybeDoc) {\n          maybeDoc = new NoDocument(key, SnapshotVersion.forDeletedDoc());\n        }\n\n        results = results.insert(key, maybeDoc);\n      });\n      return results;\n    });\n  };\n  /** Performs a query against the local view of all documents. */\n\n\n  LocalDocumentsView.prototype.getDocumentsMatchingQuery = function (transaction, query) {\n    if (query.isDocumentQuery()) {\n      return this.getDocumentsMatchingDocumentQuery(transaction, query.path);\n    } else if (query.isCollectionGroupQuery()) {\n      return this.getDocumentsMatchingCollectionGroupQuery(transaction, query);\n    } else {\n      return this.getDocumentsMatchingCollectionQuery(transaction, query);\n    }\n  };\n\n  LocalDocumentsView.prototype.getDocumentsMatchingDocumentQuery = function (transaction, docPath) {\n    // Just do a simple document lookup.\n    return this.getDocument(transaction, new DocumentKey(docPath)).next(function (maybeDoc) {\n      var result = documentMap();\n\n      if (maybeDoc instanceof Document) {\n        result = result.insert(maybeDoc.key, maybeDoc);\n      }\n\n      return result;\n    });\n  };\n\n  LocalDocumentsView.prototype.getDocumentsMatchingCollectionGroupQuery = function (transaction, query) {\n    var _this = this;\n\n    assert(query.path.isEmpty(), 'Currently we only support collection group queries at the root.');\n    var collectionId = query.collectionGroup;\n    var results = documentMap();\n    return this.indexManager.getCollectionParents(transaction, collectionId).next(function (parents) {\n      // Perform a collection query against each parent that contains the\n      // collectionId and aggregate the results.\n      return PersistencePromise.forEach(parents, function (parent) {\n        var collectionQuery = query.asCollectionQueryAtPath(parent.child(collectionId));\n        return _this.getDocumentsMatchingCollectionQuery(transaction, collectionQuery).next(function (r) {\n          r.forEach(function (key, doc) {\n            results = results.insert(key, doc);\n          });\n        });\n      }).next(function () {\n        return results;\n      });\n    });\n  };\n\n  LocalDocumentsView.prototype.getDocumentsMatchingCollectionQuery = function (transaction, query) {\n    var _this = this; // Query the remote documents and overlay mutations.\n\n\n    var results;\n    var mutationBatches;\n    return this.remoteDocumentCache.getDocumentsMatchingQuery(transaction, query).next(function (queryResults) {\n      results = queryResults;\n      return _this.mutationQueue.getAllMutationBatchesAffectingQuery(transaction, query);\n    }).next(function (matchingMutationBatches) {\n      mutationBatches = matchingMutationBatches; // It is possible that a PatchMutation can make a document match a query, even if\n      // the version in the RemoteDocumentCache is not a match yet (waiting for server\n      // to ack). To handle this, we find all document keys affected by the PatchMutations\n      // that are not in `result` yet, and back fill them via `remoteDocumentCache.getEntries`,\n      // otherwise those `PatchMutations` will be ignored because no base document can be found,\n      // and lead to missing result for the query.\n\n      return _this.addMissingBaseDocuments(transaction, mutationBatches, results).next(function (mergedDocuments) {\n        results = mergedDocuments;\n\n        for (var _i = 0, mutationBatches_1 = mutationBatches; _i < mutationBatches_1.length; _i++) {\n          var batch = mutationBatches_1[_i];\n\n          for (var _a = 0, _b = batch.mutations; _a < _b.length; _a++) {\n            var mutation = _b[_a];\n            var key = mutation.key;\n            var baseDoc = results.get(key);\n            var mutatedDoc = mutation.applyToLocalView(baseDoc, baseDoc, batch.localWriteTime);\n\n            if (mutatedDoc instanceof Document) {\n              results = results.insert(key, mutatedDoc);\n            } else {\n              results = results.remove(key);\n            }\n          }\n        }\n      });\n    }).next(function () {\n      // Finally, filter out any documents that don't actually match\n      // the query.\n      results.forEach(function (key, doc) {\n        if (!query.matches(doc)) {\n          results = results.remove(key);\n        }\n      });\n      return results;\n    });\n  };\n\n  LocalDocumentsView.prototype.addMissingBaseDocuments = function (transaction, matchingMutationBatches, existingDocuments) {\n    var missingBaseDocEntriesForPatching = documentKeySet();\n\n    for (var _i = 0, matchingMutationBatches_1 = matchingMutationBatches; _i < matchingMutationBatches_1.length; _i++) {\n      var batch = matchingMutationBatches_1[_i];\n\n      for (var _a = 0, _b = batch.mutations; _a < _b.length; _a++) {\n        var mutation = _b[_a];\n\n        if (mutation instanceof PatchMutation && existingDocuments.get(mutation.key) === null) {\n          missingBaseDocEntriesForPatching = missingBaseDocEntriesForPatching.add(mutation.key);\n        }\n      }\n    }\n\n    var mergedDocuments = existingDocuments;\n    return this.remoteDocumentCache.getEntries(transaction, missingBaseDocEntriesForPatching).next(function (missingBaseDocs) {\n      missingBaseDocs.forEach(function (key, doc) {\n        if (doc !== null && doc instanceof Document) {\n          mergedDocuments = mergedDocuments.insert(key, doc);\n        }\n      });\n      return mergedDocuments;\n    });\n  };\n\n  return LocalDocumentsView;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A collection of references to a document from some kind of numbered entity\r\n * (either a target ID or batch ID). As references are added to or removed from\r\n * the set corresponding events are emitted to a registered garbage collector.\r\n *\r\n * Each reference is represented by a DocumentReference object. Each of them\r\n * contains enough information to uniquely identify the reference. They are all\r\n * stored primarily in a set sorted by key. A document is considered garbage if\r\n * there's no references in that set (this can be efficiently checked thanks to\r\n * sorting by key).\r\n *\r\n * ReferenceSet also keeps a secondary set that contains references sorted by\r\n * IDs. This one is used to efficiently implement removal of all references by\r\n * some target ID.\r\n */\n\n\nvar ReferenceSet =\n/** @class */\nfunction () {\n  function ReferenceSet() {\n    // A set of outstanding references to a document sorted by key.\n    this.refsByKey = new SortedSet(DocReference.compareByKey); // A set of outstanding references to a document sorted by target id.\n\n    this.refsByTarget = new SortedSet(DocReference.compareByTargetId);\n  }\n  /** Returns true if the reference set contains no references. */\n\n\n  ReferenceSet.prototype.isEmpty = function () {\n    return this.refsByKey.isEmpty();\n  };\n  /** Adds a reference to the given document key for the given ID. */\n\n\n  ReferenceSet.prototype.addReference = function (key, id) {\n    var ref = new DocReference(key, id);\n    this.refsByKey = this.refsByKey.add(ref);\n    this.refsByTarget = this.refsByTarget.add(ref);\n  };\n  /** Add references to the given document keys for the given ID. */\n\n\n  ReferenceSet.prototype.addReferences = function (keys, id) {\n    var _this = this;\n\n    keys.forEach(function (key) {\n      return _this.addReference(key, id);\n    });\n  };\n  /**\r\n   * Removes a reference to the given document key for the given\r\n   * ID.\r\n   */\n\n\n  ReferenceSet.prototype.removeReference = function (key, id) {\n    this.removeRef(new DocReference(key, id));\n  };\n\n  ReferenceSet.prototype.removeReferences = function (keys, id) {\n    var _this = this;\n\n    keys.forEach(function (key) {\n      return _this.removeReference(key, id);\n    });\n  };\n  /**\r\n   * Clears all references with a given ID. Calls removeRef() for each key\r\n   * removed.\r\n   */\n\n\n  ReferenceSet.prototype.removeReferencesForId = function (id) {\n    var _this = this;\n\n    var emptyKey = DocumentKey.EMPTY;\n    var startRef = new DocReference(emptyKey, id);\n    var endRef = new DocReference(emptyKey, id + 1);\n    var keys = [];\n    this.refsByTarget.forEachInRange([startRef, endRef], function (ref) {\n      _this.removeRef(ref);\n\n      keys.push(ref.key);\n    });\n    return keys;\n  };\n\n  ReferenceSet.prototype.removeAllReferences = function () {\n    var _this = this;\n\n    this.refsByKey.forEach(function (ref) {\n      return _this.removeRef(ref);\n    });\n  };\n\n  ReferenceSet.prototype.removeRef = function (ref) {\n    this.refsByKey = this.refsByKey.delete(ref);\n    this.refsByTarget = this.refsByTarget.delete(ref);\n  };\n\n  ReferenceSet.prototype.referencesForId = function (id) {\n    var emptyKey = DocumentKey.EMPTY;\n    var startRef = new DocReference(emptyKey, id);\n    var endRef = new DocReference(emptyKey, id + 1);\n    var keys = documentKeySet();\n    this.refsByTarget.forEachInRange([startRef, endRef], function (ref) {\n      keys = keys.add(ref.key);\n    });\n    return keys;\n  };\n\n  ReferenceSet.prototype.containsKey = function (key) {\n    var ref = new DocReference(key, 0);\n    var firstRef = this.refsByKey.firstAfterOrEqual(ref);\n    return firstRef !== null && key.isEqual(firstRef.key);\n  };\n\n  return ReferenceSet;\n}();\n\nvar DocReference =\n/** @class */\nfunction () {\n  function DocReference(key, targetOrBatchId) {\n    this.key = key;\n    this.targetOrBatchId = targetOrBatchId;\n  }\n  /** Compare by key then by ID */\n\n\n  DocReference.compareByKey = function (left, right) {\n    return DocumentKey.comparator(left.key, right.key) || primitiveComparator(left.targetOrBatchId, right.targetOrBatchId);\n  };\n  /** Compare by ID then by key */\n\n\n  DocReference.compareByTargetId = function (left, right) {\n    return primitiveComparator(left.targetOrBatchId, right.targetOrBatchId) || DocumentKey.comparator(left.key, right.key);\n  };\n\n  return DocReference;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_TAG$2 = 'LocalStore';\n/**\r\n * Local storage in the Firestore client. Coordinates persistence components\r\n * like the mutation queue and remote document cache to present a\r\n * latency-compensated view of stored data.\r\n *\r\n * The LocalStore is responsible for accepting mutations from the Sync Engine.\r\n * Writes from the client are put into a queue as provisional Mutations until\r\n * they are processed by the RemoteStore and confirmed as having been written\r\n * to the server.\r\n *\r\n * The local store provides the local version of documents that have been\r\n * modified locally. It maintains the constraint:\r\n *\r\n *   LocalDocument = RemoteDocument + Active(LocalMutations)\r\n *\r\n * (Active mutations are those that are enqueued and have not been previously\r\n * acknowledged or rejected).\r\n *\r\n * The RemoteDocument (\"ground truth\") state is provided via the\r\n * applyChangeBatch method. It will be some version of a server-provided\r\n * document OR will be a server-provided document PLUS acknowledged mutations:\r\n *\r\n *   RemoteDocument' = RemoteDocument + Acknowledged(LocalMutations)\r\n *\r\n * Note that this \"dirty\" version of a RemoteDocument will not be identical to a\r\n * server base version, since it has LocalMutations added to it pending getting\r\n * an authoritative copy from the server.\r\n *\r\n * Since LocalMutations can be rejected by the server, we have to be able to\r\n * revert a LocalMutation that has already been applied to the LocalDocument\r\n * (typically done by replaying all remaining LocalMutations to the\r\n * RemoteDocument to re-apply).\r\n *\r\n * The LocalStore is responsible for the garbage collection of the documents it\r\n * contains. For now, it every doc referenced by a view, the mutation queue, or\r\n * the RemoteStore.\r\n *\r\n * It also maintains the persistence of mapping queries to resume tokens and\r\n * target ids. It needs to know this data about queries to properly know what\r\n * docs it would be allowed to garbage collect.\r\n *\r\n * The LocalStore must be able to efficiently execute queries against its local\r\n * cache of the documents, to provide the initial set of results before any\r\n * remote changes have been received.\r\n *\r\n * Note: In TypeScript, most methods return Promises since the implementation\r\n * may rely on fetching data from IndexedDB which is async.\r\n * These Promises will only be rejected on an I/O error or other internal\r\n * (unexpected) failure (e.g. failed assert) and always represent an\r\n * unrecoverable error (should be caught / reported by the async_queue).\r\n */\n\nvar LocalStore =\n/** @class */\nfunction () {\n  function LocalStore(\n  /** Manages our in-memory or durable persistence. */\n  persistence, initialUser) {\n    this.persistence = persistence;\n    /**\r\n     * The set of document references maintained by any local views.\r\n     */\n\n    this.localViewReferences = new ReferenceSet();\n    /** Maps a targetID to data about its query. */\n\n    this.queryDataByTarget = {};\n    assert(persistence.started, 'LocalStore was passed an unstarted persistence implementation');\n    this.persistence.referenceDelegate.setInMemoryPins(this.localViewReferences);\n    this.mutationQueue = persistence.getMutationQueue(initialUser);\n    this.remoteDocuments = persistence.getRemoteDocumentCache();\n    this.queryCache = persistence.getQueryCache();\n    this.localDocuments = new LocalDocumentsView(this.remoteDocuments, this.mutationQueue, this.persistence.getIndexManager());\n  }\n  /**\r\n   * Tells the LocalStore that the currently authenticated user has changed.\r\n   *\r\n   * In response the local store switches the mutation queue to the new user and\r\n   * returns any resulting document changes.\r\n   */\n  // PORTING NOTE: Android and iOS only return the documents affected by the\n  // change.\n\n\n  LocalStore.prototype.handleUserChange = function (user) {\n    var _this = this;\n\n    return this.persistence.runTransaction('Handle user change', 'readonly', function (txn) {\n      // Swap out the mutation queue, grabbing the pending mutation batches\n      // before and after.\n      var oldBatches;\n      return _this.mutationQueue.getAllMutationBatches(txn).next(function (promisedOldBatches) {\n        oldBatches = promisedOldBatches;\n        _this.mutationQueue = _this.persistence.getMutationQueue(user); // Recreate our LocalDocumentsView using the new\n        // MutationQueue.\n\n        _this.localDocuments = new LocalDocumentsView(_this.remoteDocuments, _this.mutationQueue, _this.persistence.getIndexManager());\n        return _this.mutationQueue.getAllMutationBatches(txn);\n      }).next(function (newBatches) {\n        var removedBatchIds = [];\n        var addedBatchIds = []; // Union the old/new changed keys.\n\n        var changedKeys = documentKeySet();\n\n        for (var _i = 0, oldBatches_1 = oldBatches; _i < oldBatches_1.length; _i++) {\n          var batch = oldBatches_1[_i];\n          removedBatchIds.push(batch.batchId);\n\n          for (var _a = 0, _b = batch.mutations; _a < _b.length; _a++) {\n            var mutation = _b[_a];\n            changedKeys = changedKeys.add(mutation.key);\n          }\n        }\n\n        for (var _c = 0, newBatches_1 = newBatches; _c < newBatches_1.length; _c++) {\n          var batch = newBatches_1[_c];\n          addedBatchIds.push(batch.batchId);\n\n          for (var _d = 0, _e = batch.mutations; _d < _e.length; _d++) {\n            var mutation = _e[_d];\n            changedKeys = changedKeys.add(mutation.key);\n          }\n        } // Return the set of all (potentially) changed documents and the list\n        // of mutation batch IDs that were affected by change.\n\n\n        return _this.localDocuments.getDocuments(txn, changedKeys).next(function (affectedDocuments) {\n          return {\n            affectedDocuments: affectedDocuments,\n            removedBatchIds: removedBatchIds,\n            addedBatchIds: addedBatchIds\n          };\n        });\n      });\n    });\n  };\n  /* Accept locally generated Mutations and commit them to storage. */\n\n\n  LocalStore.prototype.localWrite = function (mutations) {\n    var _this = this;\n\n    var localWriteTime = Timestamp.now();\n    var keys = mutations.reduce(function (keys, m) {\n      return keys.add(m.key);\n    }, documentKeySet());\n    return this.persistence.runTransaction('Locally write mutations', 'readwrite', function (txn) {\n      // Load and apply all existing mutations. This lets us compute the\n      // current base state for all non-idempotent transforms before applying\n      // any additional user-provided writes.\n      return _this.localDocuments.getDocuments(txn, keys).next(function (existingDocs) {\n        // For non-idempotent mutations (such as `FieldValue.increment()`),\n        // we record the base state in a separate patch mutation. This is\n        // later used to guarantee consistent values and prevents flicker\n        // even if the backend sends us an update that already includes our\n        // transform.\n        var baseMutations = [];\n\n        for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {\n          var mutation = mutations_1[_i];\n          var baseValue = mutation.extractBaseValue(existingDocs.get(mutation.key));\n\n          if (baseValue != null) {\n            // NOTE: The base state should only be applied if there's some\n            // existing document to override, so use a Precondition of\n            // exists=true\n            baseMutations.push(new PatchMutation(mutation.key, baseValue, baseValue.fieldMask(), Precondition.exists(true)));\n          }\n        }\n\n        return _this.mutationQueue.addMutationBatch(txn, localWriteTime, baseMutations, mutations).next(function (batch) {\n          var changes = batch.applyToLocalDocumentSet(existingDocs);\n          return {\n            batchId: batch.batchId,\n            changes: changes\n          };\n        });\n      });\n    });\n  };\n  /** Returns the local view of the documents affected by a mutation batch. */\n  // PORTING NOTE: Multi-tab only.\n\n\n  LocalStore.prototype.lookupMutationDocuments = function (batchId) {\n    var _this = this;\n\n    return this.persistence.runTransaction('Lookup mutation documents', 'readonly', function (txn) {\n      return _this.mutationQueue.lookupMutationKeys(txn, batchId).next(function (keys) {\n        if (keys) {\n          return _this.localDocuments.getDocuments(txn, keys);\n        } else {\n          return PersistencePromise.resolve(null);\n        }\n      });\n    });\n  };\n  /**\r\n   * Acknowledge the given batch.\r\n   *\r\n   * On the happy path when a batch is acknowledged, the local store will\r\n   *\r\n   *  + remove the batch from the mutation queue;\r\n   *  + apply the changes to the remote document cache;\r\n   *  + recalculate the latency compensated view implied by those changes (there\r\n   *    may be mutations in the queue that affect the documents but haven't been\r\n   *    acknowledged yet); and\r\n   *  + give the changed documents back the sync engine\r\n   *\r\n   * @returns The resulting (modified) documents.\r\n   */\n\n\n  LocalStore.prototype.acknowledgeBatch = function (batchResult) {\n    var _this = this;\n\n    return this.persistence.runTransaction('Acknowledge batch', 'readwrite-primary', function (txn) {\n      var affected = batchResult.batch.keys();\n\n      var documentBuffer = _this.remoteDocuments.newChangeBuffer();\n\n      return _this.mutationQueue.acknowledgeBatch(txn, batchResult.batch, batchResult.streamToken).next(function () {\n        return _this.applyWriteToRemoteDocuments(txn, batchResult, documentBuffer);\n      }).next(function () {\n        return documentBuffer.apply(txn);\n      }).next(function () {\n        return _this.mutationQueue.performConsistencyCheck(txn);\n      }).next(function () {\n        return _this.localDocuments.getDocuments(txn, affected);\n      });\n    });\n  };\n  /**\r\n   * Remove mutations from the MutationQueue for the specified batch;\r\n   * LocalDocuments will be recalculated.\r\n   *\r\n   * @returns The resulting modified documents.\r\n   */\n\n\n  LocalStore.prototype.rejectBatch = function (batchId) {\n    var _this = this;\n\n    return this.persistence.runTransaction('Reject batch', 'readwrite-primary', function (txn) {\n      var affectedKeys;\n      return _this.mutationQueue.lookupMutationBatch(txn, batchId).next(function (batch) {\n        assert(batch !== null, 'Attempt to reject nonexistent batch!');\n        affectedKeys = batch.keys();\n        return _this.mutationQueue.removeMutationBatch(txn, batch);\n      }).next(function () {\n        return _this.mutationQueue.performConsistencyCheck(txn);\n      }).next(function () {\n        return _this.localDocuments.getDocuments(txn, affectedKeys);\n      });\n    });\n  };\n  /**\r\n   * Returns the largest (latest) batch id in mutation queue that is pending server response.\r\n   * Returns `BATCHID_UNKNOWN` if the queue is empty.\r\n   */\n\n\n  LocalStore.prototype.getHighestUnacknowledgedBatchId = function () {\n    var _this = this;\n\n    return this.persistence.runTransaction('Get highest unacknowledged batch id', 'readonly', function (txn) {\n      return _this.mutationQueue.getHighestUnacknowledgedBatchId(txn);\n    });\n  };\n  /** Returns the last recorded stream token for the current user. */\n\n\n  LocalStore.prototype.getLastStreamToken = function () {\n    var _this = this;\n\n    return this.persistence.runTransaction('Get last stream token', 'readonly', function (txn) {\n      return _this.mutationQueue.getLastStreamToken(txn);\n    });\n  };\n  /**\r\n   * Sets the stream token for the current user without acknowledging any\r\n   * mutation batch. This is usually only useful after a stream handshake or in\r\n   * response to an error that requires clearing the stream token.\r\n   */\n\n\n  LocalStore.prototype.setLastStreamToken = function (streamToken) {\n    var _this = this;\n\n    return this.persistence.runTransaction('Set last stream token', 'readwrite-primary', function (txn) {\n      return _this.mutationQueue.setLastStreamToken(txn, streamToken);\n    });\n  };\n  /**\r\n   * Returns the last consistent snapshot processed (used by the RemoteStore to\r\n   * determine whether to buffer incoming snapshots from the backend).\r\n   */\n\n\n  LocalStore.prototype.getLastRemoteSnapshotVersion = function () {\n    var _this = this;\n\n    return this.persistence.runTransaction('Get last remote snapshot version', 'readonly', function (txn) {\n      return _this.queryCache.getLastRemoteSnapshotVersion(txn);\n    });\n  };\n  /**\r\n   * Update the \"ground-state\" (remote) documents. We assume that the remote\r\n   * event reflects any write batches that have been acknowledged or rejected\r\n   * (i.e. we do not re-apply local mutations to updates from this event).\r\n   *\r\n   * LocalDocuments are re-calculated if there are remaining mutations in the\r\n   * queue.\r\n   */\n\n\n  LocalStore.prototype.applyRemoteEvent = function (remoteEvent) {\n    var _this = this;\n\n    var documentBuffer = this.remoteDocuments.newChangeBuffer();\n    var snapshotVersion = remoteEvent.snapshotVersion;\n    return this.persistence.runTransaction('Apply remote event', 'readwrite-primary', function (txn) {\n      var promises = [];\n      forEachNumber(remoteEvent.targetChanges, function (targetId, change) {\n        var oldQueryData = _this.queryDataByTarget[targetId];\n\n        if (!oldQueryData) {\n          return;\n        } // Only update the remote keys if the query is still active. This\n        // ensures that we can persist the updated query data along with\n        // the updated assignment.\n\n\n        promises.push(_this.queryCache.removeMatchingKeys(txn, change.removedDocuments, targetId).next(function () {\n          return _this.queryCache.addMatchingKeys(txn, change.addedDocuments, targetId);\n        }));\n        var resumeToken = change.resumeToken; // Update the resume token if the change includes one.\n\n        if (resumeToken.length > 0) {\n          var newQueryData = oldQueryData.withResumeToken(resumeToken, snapshotVersion);\n          _this.queryDataByTarget[targetId] = newQueryData; // Update the query data if there are target changes (or if\n          // sufficient time has passed since the last update).\n\n          if (LocalStore.shouldPersistQueryData(oldQueryData, newQueryData, change)) {\n            promises.push(_this.queryCache.updateQueryData(txn, newQueryData));\n          }\n        }\n      });\n      var changedDocs = maybeDocumentMap();\n      var updatedKeys = documentKeySet();\n      remoteEvent.documentUpdates.forEach(function (key, doc) {\n        updatedKeys = updatedKeys.add(key);\n      }); // Each loop iteration only affects its \"own\" doc, so it's safe to get all the remote\n      // documents in advance in a single call.\n\n      promises.push(documentBuffer.getEntries(txn, updatedKeys).next(function (existingDocs) {\n        remoteEvent.documentUpdates.forEach(function (key, doc) {\n          var existingDoc = existingDocs.get(key); // Note: The order of the steps below is important, since we want\n          // to ensure that rejected limbo resolutions (which fabricate\n          // NoDocuments with SnapshotVersion.MIN) never add documents to\n          // cache.\n\n          if (doc instanceof NoDocument && doc.version.isEqual(SnapshotVersion.MIN)) {\n            // NoDocuments with SnapshotVersion.MIN are used in manufactured\n            // events. We remove these documents from cache since we lost\n            // access.\n            documentBuffer.removeEntry(key);\n            changedDocs = changedDocs.insert(key, doc);\n          } else if (existingDoc == null || doc.version.compareTo(existingDoc.version) > 0 || doc.version.compareTo(existingDoc.version) === 0 && existingDoc.hasPendingWrites) {\n            // TODO(index-free): Make this an assert when we enable\n            // Index-Free queries\n            if (SnapshotVersion.MIN.isEqual(remoteEvent.snapshotVersion)) {\n              error(LOG_TAG$2, 'Cannot add a document when the remote version is zero');\n            }\n\n            documentBuffer.addEntry(doc);\n            changedDocs = changedDocs.insert(key, doc);\n          } else {\n            debug(LOG_TAG$2, 'Ignoring outdated watch update for ', key, '. Current version:', existingDoc.version, ' Watch version:', doc.version);\n          }\n\n          if (remoteEvent.resolvedLimboDocuments.has(key)) {\n            promises.push(_this.persistence.referenceDelegate.updateLimboDocument(txn, key));\n          }\n        });\n      })); // HACK: The only reason we allow a null snapshot version is so that we\n      // can synthesize remote events when we get permission denied errors while\n      // trying to resolve the state of a locally cached document that is in\n      // limbo.\n\n      if (!snapshotVersion.isEqual(SnapshotVersion.MIN)) {\n        var updateRemoteVersion = _this.queryCache.getLastRemoteSnapshotVersion(txn).next(function (lastRemoteSnapshotVersion) {\n          assert(snapshotVersion.compareTo(lastRemoteSnapshotVersion) >= 0, 'Watch stream reverted to previous snapshot?? ' + snapshotVersion + ' < ' + lastRemoteSnapshotVersion);\n          return _this.queryCache.setTargetsMetadata(txn, txn.currentSequenceNumber, snapshotVersion);\n        });\n\n        promises.push(updateRemoteVersion);\n      }\n\n      return PersistencePromise.waitFor(promises).next(function () {\n        return documentBuffer.apply(txn);\n      }).next(function () {\n        return _this.localDocuments.getLocalViewOfDocuments(txn, changedDocs);\n      });\n    });\n  };\n  /**\r\n   * Returns true if the newQueryData should be persisted during an update of\r\n   * an active target. QueryData should always be persisted when a target is\r\n   * being released and should not call this function.\r\n   *\r\n   * While the target is active, QueryData updates can be omitted when nothing\r\n   * about the target has changed except metadata like the resume token or\r\n   * snapshot version. Occasionally it's worth the extra write to prevent these\r\n   * values from getting too stale after a crash, but this doesn't have to be\r\n   * too frequent.\r\n   */\n\n\n  LocalStore.shouldPersistQueryData = function (oldQueryData, newQueryData, change) {\n    assert(newQueryData.resumeToken.length > 0, 'Attempted to persist query data with no resume token'); // Always persist query data if we don't already have a resume token.\n\n    if (oldQueryData.resumeToken.length === 0) {\n      return true;\n    } // Don't allow resume token changes to be buffered indefinitely. This\n    // allows us to be reasonably up-to-date after a crash and avoids needing\n    // to loop over all active queries on shutdown. Especially in the browser\n    // we may not get time to do anything interesting while the current tab is\n    // closing.\n\n\n    var timeDelta = newQueryData.snapshotVersion.toMicroseconds() - oldQueryData.snapshotVersion.toMicroseconds();\n\n    if (timeDelta >= this.RESUME_TOKEN_MAX_AGE_MICROS) {\n      return true;\n    } // Otherwise if the only thing that has changed about a target is its resume\n    // token it's not worth persisting. Note that the RemoteStore keeps an\n    // in-memory view of the currently active targets which includes the current\n    // resume token, so stream failure or user changes will still use an\n    // up-to-date resume token regardless of what we do here.\n\n\n    var changes = change.addedDocuments.size + change.modifiedDocuments.size + change.removedDocuments.size;\n    return changes > 0;\n  };\n  /**\r\n   * Notify local store of the changed views to locally pin documents.\r\n   */\n\n\n  LocalStore.prototype.notifyLocalViewChanges = function (viewChanges) {\n    var _this = this;\n\n    return this.persistence.runTransaction('notifyLocalViewChanges', 'readwrite', function (txn) {\n      return PersistencePromise.forEach(viewChanges, function (viewChange) {\n        _this.localViewReferences.addReferences(viewChange.addedKeys, viewChange.targetId);\n\n        _this.localViewReferences.removeReferences(viewChange.removedKeys, viewChange.targetId);\n\n        return PersistencePromise.forEach(viewChange.removedKeys, function (key) {\n          return _this.persistence.referenceDelegate.removeReference(txn, key);\n        });\n      });\n    });\n  };\n  /**\r\n   * Gets the mutation batch after the passed in batchId in the mutation queue\r\n   * or null if empty.\r\n   * @param afterBatchId If provided, the batch to search after.\r\n   * @returns The next mutation or null if there wasn't one.\r\n   */\n\n\n  LocalStore.prototype.nextMutationBatch = function (afterBatchId) {\n    var _this = this;\n\n    return this.persistence.runTransaction('Get next mutation batch', 'readonly', function (txn) {\n      if (afterBatchId === undefined) {\n        afterBatchId = BATCHID_UNKNOWN;\n      }\n\n      return _this.mutationQueue.getNextMutationBatchAfterBatchId(txn, afterBatchId);\n    });\n  };\n  /**\r\n   * Read the current value of a Document with a given key or null if not\r\n   * found - used for testing.\r\n   */\n\n\n  LocalStore.prototype.readDocument = function (key) {\n    var _this = this;\n\n    return this.persistence.runTransaction('read document', 'readonly', function (txn) {\n      return _this.localDocuments.getDocument(txn, key);\n    });\n  };\n  /**\r\n   * Assigns the given query an internal ID so that its results can be pinned so\r\n   * they don't get GC'd. A query must be allocated in the local store before\r\n   * the store can be used to manage its view.\r\n   */\n\n\n  LocalStore.prototype.allocateQuery = function (query) {\n    var _this = this;\n\n    return this.persistence.runTransaction('Allocate query', 'readwrite', function (txn) {\n      var queryData;\n      return _this.queryCache.getQueryData(txn, query).next(function (cached) {\n        if (cached) {\n          // This query has been listened to previously, so reuse the\n          // previous targetID.\n          // TODO(mcg): freshen last accessed date?\n          queryData = cached;\n          return PersistencePromise.resolve();\n        } else {\n          return _this.queryCache.allocateTargetId(txn).next(function (targetId) {\n            queryData = new QueryData(query, targetId, QueryPurpose.Listen, txn.currentSequenceNumber);\n            return _this.queryCache.addQueryData(txn, queryData);\n          });\n        }\n      }).next(function () {\n        assert(!_this.queryDataByTarget[queryData.targetId], 'Tried to allocate an already allocated query: ' + query);\n        _this.queryDataByTarget[queryData.targetId] = queryData;\n        return queryData;\n      });\n    });\n  };\n  /**\r\n   * Unpin all the documents associated with the given query. If\r\n   * `keepPersistedQueryData` is set to false and Eager GC enabled, the method\r\n   * directly removes the associated query data from the query cache.\r\n   */\n  // PORTING NOTE: `keepPersistedQueryData` is multi-tab only.\n\n\n  LocalStore.prototype.releaseQuery = function (query, keepPersistedQueryData) {\n    var _this = this;\n\n    var mode = keepPersistedQueryData ? 'readwrite' : 'readwrite-primary';\n    return this.persistence.runTransaction('Release query', mode, function (txn) {\n      return _this.queryCache.getQueryData(txn, query).next(function (queryData) {\n        assert(queryData != null, 'Tried to release nonexistent query: ' + query);\n        var targetId = queryData.targetId;\n        var cachedQueryData = _this.queryDataByTarget[targetId]; // References for documents sent via Watch are automatically removed when we delete a\n        // query's target data from the reference delegate. Since this does not remove references\n        // for locally mutated documents, we have to remove the target associations for these\n        // documents manually.\n\n        var removed = _this.localViewReferences.removeReferencesForId(targetId);\n\n        delete _this.queryDataByTarget[targetId];\n\n        if (!keepPersistedQueryData) {\n          return PersistencePromise.forEach(removed, function (key) {\n            return _this.persistence.referenceDelegate.removeReference(txn, key);\n          }).next(function () {\n            return _this.persistence.referenceDelegate.removeTarget(txn, cachedQueryData);\n          });\n        } else {\n          return PersistencePromise.resolve();\n        }\n      });\n    });\n  };\n  /**\r\n   * Runs the specified query against all the documents in the local store and\r\n   * returns the results.\r\n   */\n\n\n  LocalStore.prototype.executeQuery = function (query) {\n    var _this = this;\n\n    return this.persistence.runTransaction('Execute query', 'readonly', function (txn) {\n      return _this.localDocuments.getDocumentsMatchingQuery(txn, query);\n    });\n  };\n  /**\r\n   * Returns the keys of the documents that are associated with the given\r\n   * target id in the remote table.\r\n   */\n\n\n  LocalStore.prototype.remoteDocumentKeys = function (targetId) {\n    var _this = this;\n\n    return this.persistence.runTransaction('Remote document keys', 'readonly', function (txn) {\n      return _this.queryCache.getMatchingKeysForTargetId(txn, targetId);\n    });\n  }; // PORTING NOTE: Multi-tab only.\n\n\n  LocalStore.prototype.getActiveClients = function () {\n    return this.persistence.getActiveClients();\n  }; // PORTING NOTE: Multi-tab only.\n\n\n  LocalStore.prototype.removeCachedMutationBatchMetadata = function (batchId) {\n    this.mutationQueue.removeCachedMutationKeys(batchId);\n  }; // PORTING NOTE: Multi-tab only.\n\n\n  LocalStore.prototype.setNetworkEnabled = function (networkEnabled) {\n    this.persistence.setNetworkEnabled(networkEnabled);\n  };\n\n  LocalStore.prototype.applyWriteToRemoteDocuments = function (txn, batchResult, documentBuffer) {\n    var _this = this;\n\n    var batch = batchResult.batch;\n    var docKeys = batch.keys();\n    var promiseChain = PersistencePromise.resolve();\n    docKeys.forEach(function (docKey) {\n      promiseChain = promiseChain.next(function () {\n        return documentBuffer.getEntry(txn, docKey);\n      }).next(function (remoteDoc) {\n        var doc = remoteDoc;\n        var ackVersion = batchResult.docVersions.get(docKey);\n        assert(ackVersion !== null, 'ackVersions should contain every doc in the write.');\n\n        if (!doc || doc.version.compareTo(ackVersion) < 0) {\n          doc = batch.applyToRemoteDocument(docKey, doc, batchResult);\n\n          if (!doc) {\n            assert(!remoteDoc, 'Mutation batch ' + batch + ' applied to document ' + remoteDoc + ' resulted in null');\n          } else {\n            documentBuffer.addEntry(doc);\n          }\n        }\n      });\n    });\n    return promiseChain.next(function () {\n      return _this.mutationQueue.removeMutationBatch(txn, batch);\n    });\n  };\n\n  LocalStore.prototype.collectGarbage = function (garbageCollector) {\n    var _this = this;\n\n    return this.persistence.runTransaction('Collect garbage', 'readwrite-primary', function (txn) {\n      return garbageCollector.collect(txn, _this.queryDataByTarget);\n    });\n  }; // PORTING NOTE: Multi-tab only.\n\n\n  LocalStore.prototype.getQueryForTarget = function (targetId) {\n    var _this = this;\n\n    if (this.queryDataByTarget[targetId]) {\n      return Promise.resolve(this.queryDataByTarget[targetId].query);\n    } else {\n      return this.persistence.runTransaction('Get query data', 'readonly', function (txn) {\n        return _this.queryCache.getQueryDataForTarget(txn, targetId).next(function (queryData) {\n          return queryData ? queryData.query : null;\n        });\n      });\n    }\n  }; // PORTING NOTE: Multi-tab only.\n\n\n  LocalStore.prototype.getNewDocumentChanges = function () {\n    var _this = this;\n\n    return this.persistence.runTransaction('Get new document changes', 'readonly', function (txn) {\n      return _this.remoteDocuments.getNewDocumentChanges(txn);\n    });\n  };\n  /**\r\n   * The maximum time to leave a resume token buffered without writing it out.\r\n   * This value is arbitrary: it's long enough to avoid several writes\r\n   * (possibly indefinitely if updates come more frequently than this) but\r\n   * short enough that restarting after crashing will still have a pretty\r\n   * recent resume token.\r\n   */\n\n\n  LocalStore.RESUME_TOKEN_MAX_AGE_MICROS = 5 * 60 * 1e6;\n  return LocalStore;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MemoryMutationQueue =\n/** @class */\nfunction () {\n  function MemoryMutationQueue(indexManager, referenceDelegate) {\n    this.indexManager = indexManager;\n    this.referenceDelegate = referenceDelegate;\n    /**\r\n     * The set of all mutations that have been sent but not yet been applied to\r\n     * the backend.\r\n     */\n\n    this.mutationQueue = [];\n    /** Next value to use when assigning sequential IDs to each mutation batch. */\n\n    this.nextBatchId = 1;\n    /** The last received stream token from the server, used to acknowledge which\r\n     * responses the client has processed. Stream tokens are opaque checkpoint\r\n     * markers whose only real value is their inclusion in the next request.\r\n     */\n\n    this.lastStreamToken = emptyByteString();\n    /** An ordered mapping between documents and the mutations batch IDs. */\n\n    this.batchesByDocumentKey = new SortedSet(DocReference.compareByKey);\n  }\n\n  MemoryMutationQueue.prototype.checkEmpty = function (transaction) {\n    return PersistencePromise.resolve(this.mutationQueue.length === 0);\n  };\n\n  MemoryMutationQueue.prototype.acknowledgeBatch = function (transaction, batch, streamToken) {\n    var batchId = batch.batchId;\n    var batchIndex = this.indexOfExistingBatchId(batchId, 'acknowledged');\n    assert(batchIndex === 0, 'Can only acknowledge the first batch in the mutation queue'); // Verify that the batch in the queue is the one to be acknowledged.\n\n    var check = this.mutationQueue[batchIndex];\n    assert(batchId === check.batchId, 'Queue ordering failure: expected batch ' + batchId + ', got batch ' + check.batchId);\n    this.lastStreamToken = streamToken;\n    return PersistencePromise.resolve();\n  };\n\n  MemoryMutationQueue.prototype.getLastStreamToken = function (transaction) {\n    return PersistencePromise.resolve(this.lastStreamToken);\n  };\n\n  MemoryMutationQueue.prototype.setLastStreamToken = function (transaction, streamToken) {\n    this.lastStreamToken = streamToken;\n    return PersistencePromise.resolve();\n  };\n\n  MemoryMutationQueue.prototype.addMutationBatch = function (transaction, localWriteTime, baseMutations, mutations) {\n    assert(mutations.length !== 0, 'Mutation batches should not be empty');\n    var batchId = this.nextBatchId;\n    this.nextBatchId++;\n\n    if (this.mutationQueue.length > 0) {\n      var prior = this.mutationQueue[this.mutationQueue.length - 1];\n      assert(prior.batchId < batchId, 'Mutation batchIDs must be monotonically increasing order');\n    }\n\n    var batch = new MutationBatch(batchId, localWriteTime, baseMutations, mutations);\n    this.mutationQueue.push(batch); // Track references by document key and index collection parents.\n\n    for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {\n      var mutation = mutations_1[_i];\n      this.batchesByDocumentKey = this.batchesByDocumentKey.add(new DocReference(mutation.key, batchId));\n      this.indexManager.addToCollectionParentIndex(transaction, mutation.key.path.popLast());\n    }\n\n    return PersistencePromise.resolve(batch);\n  };\n\n  MemoryMutationQueue.prototype.lookupMutationBatch = function (transaction, batchId) {\n    return PersistencePromise.resolve(this.findMutationBatch(batchId));\n  };\n\n  MemoryMutationQueue.prototype.lookupMutationKeys = function (transaction, batchId) {\n    var mutationBatch = this.findMutationBatch(batchId);\n    assert(mutationBatch != null, 'Failed to find local mutation batch.');\n    return PersistencePromise.resolve(mutationBatch.keys());\n  };\n\n  MemoryMutationQueue.prototype.getNextMutationBatchAfterBatchId = function (transaction, batchId) {\n    var nextBatchId = batchId + 1; // The requested batchId may still be out of range so normalize it to the\n    // start of the queue.\n\n    var rawIndex = this.indexOfBatchId(nextBatchId);\n    var index = rawIndex < 0 ? 0 : rawIndex;\n    return PersistencePromise.resolve(this.mutationQueue.length > index ? this.mutationQueue[index] : null);\n  };\n\n  MemoryMutationQueue.prototype.getHighestUnacknowledgedBatchId = function () {\n    return PersistencePromise.resolve(this.mutationQueue.length === 0 ? BATCHID_UNKNOWN : this.nextBatchId - 1);\n  };\n\n  MemoryMutationQueue.prototype.getAllMutationBatches = function (transaction) {\n    return PersistencePromise.resolve(this.mutationQueue.slice());\n  };\n\n  MemoryMutationQueue.prototype.getAllMutationBatchesAffectingDocumentKey = function (transaction, documentKey) {\n    var _this = this;\n\n    var start = new DocReference(documentKey, 0);\n    var end = new DocReference(documentKey, Number.POSITIVE_INFINITY);\n    var result = [];\n    this.batchesByDocumentKey.forEachInRange([start, end], function (ref) {\n      assert(documentKey.isEqual(ref.key), \"Should only iterate over a single key's batches\");\n\n      var batch = _this.findMutationBatch(ref.targetOrBatchId);\n\n      assert(batch !== null, 'Batches in the index must exist in the main table');\n      result.push(batch);\n    });\n    return PersistencePromise.resolve(result);\n  };\n\n  MemoryMutationQueue.prototype.getAllMutationBatchesAffectingDocumentKeys = function (transaction, documentKeys) {\n    var _this = this;\n\n    var uniqueBatchIDs = new SortedSet(primitiveComparator);\n    documentKeys.forEach(function (documentKey) {\n      var start = new DocReference(documentKey, 0);\n      var end = new DocReference(documentKey, Number.POSITIVE_INFINITY);\n\n      _this.batchesByDocumentKey.forEachInRange([start, end], function (ref) {\n        assert(documentKey.isEqual(ref.key), \"For each key, should only iterate over a single key's batches\");\n        uniqueBatchIDs = uniqueBatchIDs.add(ref.targetOrBatchId);\n      });\n    });\n    return PersistencePromise.resolve(this.findMutationBatches(uniqueBatchIDs));\n  };\n\n  MemoryMutationQueue.prototype.getAllMutationBatchesAffectingQuery = function (transaction, query) {\n    assert(!query.isCollectionGroupQuery(), 'CollectionGroup queries should be handled in LocalDocumentsView'); // Use the query path as a prefix for testing if a document matches the\n    // query.\n\n    var prefix = query.path;\n    var immediateChildrenPathLength = prefix.length + 1; // Construct a document reference for actually scanning the index. Unlike\n    // the prefix the document key in this reference must have an even number of\n    // segments. The empty segment can be used a suffix of the query path\n    // because it precedes all other segments in an ordered traversal.\n\n    var startPath = prefix;\n\n    if (!DocumentKey.isDocumentKey(startPath)) {\n      startPath = startPath.child('');\n    }\n\n    var start = new DocReference(new DocumentKey(startPath), 0); // Find unique batchIDs referenced by all documents potentially matching the\n    // query.\n\n    var uniqueBatchIDs = new SortedSet(primitiveComparator);\n    this.batchesByDocumentKey.forEachWhile(function (ref) {\n      var rowKeyPath = ref.key.path;\n\n      if (!prefix.isPrefixOf(rowKeyPath)) {\n        return false;\n      } else {\n        // Rows with document keys more than one segment longer than the query\n        // path can't be matches. For example, a query on 'rooms' can't match\n        // the document /rooms/abc/messages/xyx.\n        // TODO(mcg): we'll need a different scanner when we implement\n        // ancestor queries.\n        if (rowKeyPath.length === immediateChildrenPathLength) {\n          uniqueBatchIDs = uniqueBatchIDs.add(ref.targetOrBatchId);\n        }\n\n        return true;\n      }\n    }, start);\n    return PersistencePromise.resolve(this.findMutationBatches(uniqueBatchIDs));\n  };\n\n  MemoryMutationQueue.prototype.findMutationBatches = function (batchIDs) {\n    var _this = this; // Construct an array of matching batches, sorted by batchID to ensure that\n    // multiple mutations affecting the same document key are applied in order.\n\n\n    var result = [];\n    batchIDs.forEach(function (batchId) {\n      var batch = _this.findMutationBatch(batchId);\n\n      if (batch !== null) {\n        result.push(batch);\n      }\n    });\n    return result;\n  };\n\n  MemoryMutationQueue.prototype.removeMutationBatch = function (transaction, batch) {\n    var _this = this; // Find the position of the first batch for removal. This need not be the\n    // first entry in the queue.\n\n\n    var batchIndex = this.indexOfExistingBatchId(batch.batchId, 'removed');\n    assert(batchIndex === 0, 'Can only remove the first entry of the mutation queue');\n    this.mutationQueue.shift();\n    var references = this.batchesByDocumentKey;\n    return PersistencePromise.forEach(batch.mutations, function (mutation) {\n      var ref = new DocReference(mutation.key, batch.batchId);\n      references = references.delete(ref);\n      return _this.referenceDelegate.removeMutationReference(transaction, mutation.key);\n    }).next(function () {\n      _this.batchesByDocumentKey = references;\n    });\n  };\n\n  MemoryMutationQueue.prototype.removeCachedMutationKeys = function (batchId) {// No-op since the memory mutation queue does not maintain a separate cache.\n  };\n\n  MemoryMutationQueue.prototype.containsKey = function (txn, key) {\n    var ref = new DocReference(key, 0);\n    var firstRef = this.batchesByDocumentKey.firstAfterOrEqual(ref);\n    return PersistencePromise.resolve(key.isEqual(firstRef && firstRef.key));\n  };\n\n  MemoryMutationQueue.prototype.performConsistencyCheck = function (txn) {\n    if (this.mutationQueue.length === 0) {\n      assert(this.batchesByDocumentKey.isEmpty(), 'Document leak -- detected dangling mutation references when queue is empty.');\n    }\n\n    return PersistencePromise.resolve();\n  };\n  /**\r\n   * Finds the index of the given batchId in the mutation queue and asserts that\r\n   * the resulting index is within the bounds of the queue.\r\n   *\r\n   * @param batchId The batchId to search for\r\n   * @param action A description of what the caller is doing, phrased in passive\r\n   * form (e.g. \"acknowledged\" in a routine that acknowledges batches).\r\n   */\n\n\n  MemoryMutationQueue.prototype.indexOfExistingBatchId = function (batchId, action) {\n    var index = this.indexOfBatchId(batchId);\n    assert(index >= 0 && index < this.mutationQueue.length, 'Batches must exist to be ' + action);\n    return index;\n  };\n  /**\r\n   * Finds the index of the given batchId in the mutation queue. This operation\r\n   * is O(1).\r\n   *\r\n   * @return The computed index of the batch with the given batchId, based on\r\n   * the state of the queue. Note this index can be negative if the requested\r\n   * batchId has already been remvoed from the queue or past the end of the\r\n   * queue if the batchId is larger than the last added batch.\r\n   */\n\n\n  MemoryMutationQueue.prototype.indexOfBatchId = function (batchId) {\n    if (this.mutationQueue.length === 0) {\n      // As an index this is past the end of the queue\n      return 0;\n    } // Examine the front of the queue to figure out the difference between the\n    // batchId and indexes in the array. Note that since the queue is ordered\n    // by batchId, if the first batch has a larger batchId then the requested\n    // batchId doesn't exist in the queue.\n\n\n    var firstBatchId = this.mutationQueue[0].batchId;\n    return batchId - firstBatchId;\n  };\n  /**\r\n   * A version of lookupMutationBatch that doesn't return a promise, this makes\r\n   * other functions that uses this code easier to read and more efficent.\r\n   */\n\n\n  MemoryMutationQueue.prototype.findMutationBatch = function (batchId) {\n    var index = this.indexOfBatchId(batchId);\n\n    if (index < 0 || index >= this.mutationQueue.length) {\n      return null;\n    }\n\n    var batch = this.mutationQueue[index];\n    assert(batch.batchId === batchId, 'If found batch must match');\n    return batch;\n  };\n\n  return MemoryMutationQueue;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MemoryQueryCache =\n/** @class */\nfunction () {\n  function MemoryQueryCache(persistence) {\n    this.persistence = persistence;\n    /**\r\n     * Maps a query to the data about that query\r\n     */\n\n    this.queries = new ObjectMap(function (q) {\n      return q.canonicalId();\n    });\n    /** The last received snapshot version. */\n\n    this.lastRemoteSnapshotVersion = SnapshotVersion.MIN;\n    /** The highest numbered target ID encountered. */\n\n    this.highestTargetId = 0;\n    /** The highest sequence number encountered. */\n\n    this.highestSequenceNumber = 0;\n    /**\r\n     * A ordered bidirectional mapping between documents and the remote target\r\n     * IDs.\r\n     */\n\n    this.references = new ReferenceSet();\n    this.targetCount = 0;\n    this.targetIdGenerator = TargetIdGenerator.forQueryCache();\n  }\n\n  MemoryQueryCache.prototype.getTargetCount = function (txn) {\n    return PersistencePromise.resolve(this.targetCount);\n  };\n\n  MemoryQueryCache.prototype.forEachTarget = function (txn, f) {\n    this.queries.forEach(function (_, queryData) {\n      return f(queryData);\n    });\n    return PersistencePromise.resolve();\n  };\n\n  MemoryQueryCache.prototype.getLastRemoteSnapshotVersion = function (transaction) {\n    return PersistencePromise.resolve(this.lastRemoteSnapshotVersion);\n  };\n\n  MemoryQueryCache.prototype.getHighestSequenceNumber = function (transaction) {\n    return PersistencePromise.resolve(this.highestSequenceNumber);\n  };\n\n  MemoryQueryCache.prototype.allocateTargetId = function (transaction) {\n    var nextTargetId = this.targetIdGenerator.after(this.highestTargetId);\n    this.highestTargetId = nextTargetId;\n    return PersistencePromise.resolve(nextTargetId);\n  };\n\n  MemoryQueryCache.prototype.setTargetsMetadata = function (transaction, highestListenSequenceNumber, lastRemoteSnapshotVersion) {\n    if (lastRemoteSnapshotVersion) {\n      this.lastRemoteSnapshotVersion = lastRemoteSnapshotVersion;\n    }\n\n    if (highestListenSequenceNumber > this.highestSequenceNumber) {\n      this.highestSequenceNumber = highestListenSequenceNumber;\n    }\n\n    return PersistencePromise.resolve();\n  };\n\n  MemoryQueryCache.prototype.saveQueryData = function (queryData) {\n    this.queries.set(queryData.query, queryData);\n    var targetId = queryData.targetId;\n\n    if (targetId > this.highestTargetId) {\n      this.highestTargetId = targetId;\n    }\n\n    if (queryData.sequenceNumber > this.highestSequenceNumber) {\n      this.highestSequenceNumber = queryData.sequenceNumber;\n    }\n  };\n\n  MemoryQueryCache.prototype.addQueryData = function (transaction, queryData) {\n    assert(!this.queries.has(queryData.query), 'Adding a query that already exists');\n    this.saveQueryData(queryData);\n    this.targetCount += 1;\n    return PersistencePromise.resolve();\n  };\n\n  MemoryQueryCache.prototype.updateQueryData = function (transaction, queryData) {\n    assert(this.queries.has(queryData.query), 'Updating a non-existent query');\n    this.saveQueryData(queryData);\n    return PersistencePromise.resolve();\n  };\n\n  MemoryQueryCache.prototype.removeQueryData = function (transaction, queryData) {\n    assert(this.targetCount > 0, 'Removing a target from an empty cache');\n    assert(this.queries.has(queryData.query), 'Removing a non-existent target from the cache');\n    this.queries.delete(queryData.query);\n    this.references.removeReferencesForId(queryData.targetId);\n    this.targetCount -= 1;\n    return PersistencePromise.resolve();\n  };\n\n  MemoryQueryCache.prototype.removeTargets = function (transaction, upperBound, activeTargetIds) {\n    var _this = this;\n\n    var count = 0;\n    var removals = [];\n    this.queries.forEach(function (key, queryData) {\n      if (queryData.sequenceNumber <= upperBound && !activeTargetIds[queryData.targetId]) {\n        _this.queries.delete(key);\n\n        removals.push(_this.removeMatchingKeysForTargetId(transaction, queryData.targetId));\n        count++;\n      }\n    });\n    return PersistencePromise.waitFor(removals).next(function () {\n      return count;\n    });\n  };\n\n  MemoryQueryCache.prototype.getQueryCount = function (transaction) {\n    return PersistencePromise.resolve(this.targetCount);\n  };\n\n  MemoryQueryCache.prototype.getQueryData = function (transaction, query) {\n    var queryData = this.queries.get(query) || null;\n    return PersistencePromise.resolve(queryData);\n  };\n\n  MemoryQueryCache.prototype.getQueryDataForTarget = function (transaction, targetId) {\n    // This method is only needed for multi-tab and we can't implement it\n    // efficiently without additional data structures.\n    return fail('Not yet implemented.');\n  };\n\n  MemoryQueryCache.prototype.addMatchingKeys = function (txn, keys, targetId) {\n    this.references.addReferences(keys, targetId);\n    var referenceDelegate = this.persistence.referenceDelegate;\n    var promises = [];\n\n    if (referenceDelegate) {\n      keys.forEach(function (key) {\n        promises.push(referenceDelegate.addReference(txn, key));\n      });\n    }\n\n    return PersistencePromise.waitFor(promises);\n  };\n\n  MemoryQueryCache.prototype.removeMatchingKeys = function (txn, keys, targetId) {\n    this.references.removeReferences(keys, targetId);\n    var referenceDelegate = this.persistence.referenceDelegate;\n    var promises = [];\n\n    if (referenceDelegate) {\n      keys.forEach(function (key) {\n        promises.push(referenceDelegate.removeReference(txn, key));\n      });\n    }\n\n    return PersistencePromise.waitFor(promises);\n  };\n\n  MemoryQueryCache.prototype.removeMatchingKeysForTargetId = function (txn, targetId) {\n    this.references.removeReferencesForId(targetId);\n    return PersistencePromise.resolve();\n  };\n\n  MemoryQueryCache.prototype.getMatchingKeysForTargetId = function (txn, targetId) {\n    var matchingKeys = this.references.referencesForId(targetId);\n    return PersistencePromise.resolve(matchingKeys);\n  };\n\n  MemoryQueryCache.prototype.containsKey = function (txn, key) {\n    return PersistencePromise.resolve(this.references.containsKey(key));\n  };\n\n  return MemoryQueryCache;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction documentSizeMap() {\n  return new SortedMap(DocumentKey.comparator);\n}\n\nvar MemoryRemoteDocumentCache =\n/** @class */\nfunction () {\n  /**\r\n   * @param sizer Used to assess the size of a document. For eager GC, this is expected to just\r\n   * return 0 to avoid unnecessarily doing the work of calculating the size.\r\n   */\n  function MemoryRemoteDocumentCache(indexManager, sizer) {\n    this.indexManager = indexManager;\n    this.sizer = sizer;\n    this.docs = documentSizeMap();\n    this.newDocumentChanges = documentKeySet();\n    this.size = 0;\n  }\n  /**\r\n   * Adds the supplied entry to the cache and updates the cache size as appropriate.\r\n   *\r\n   * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer\r\n   * returned by `newChangeBuffer()`.\r\n   */\n\n\n  MemoryRemoteDocumentCache.prototype.addEntry = function (transaction, doc) {\n    var key = doc.key;\n    var entry = this.docs.get(key);\n    var previousSize = entry ? entry.size : 0;\n    var currentSize = this.sizer(doc);\n    this.docs = this.docs.insert(key, {\n      maybeDocument: doc,\n      size: currentSize\n    });\n    this.newDocumentChanges = this.newDocumentChanges.add(key);\n    this.size += currentSize - previousSize;\n    return this.indexManager.addToCollectionParentIndex(transaction, key.path.popLast());\n  };\n  /**\r\n   * Removes the specified entry from the cache and updates the cache size as appropriate.\r\n   *\r\n   * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer\r\n   * returned by `newChangeBuffer()`.\r\n   */\n\n\n  MemoryRemoteDocumentCache.prototype.removeEntry = function (documentKey) {\n    var entry = this.docs.get(documentKey);\n\n    if (entry) {\n      this.docs = this.docs.remove(documentKey);\n      this.size -= entry.size;\n    }\n  };\n\n  MemoryRemoteDocumentCache.prototype.getEntry = function (transaction, documentKey) {\n    var entry = this.docs.get(documentKey);\n    return PersistencePromise.resolve(entry ? entry.maybeDocument : null);\n  };\n\n  MemoryRemoteDocumentCache.prototype.getEntries = function (transaction, documentKeys) {\n    var _this = this;\n\n    var results = nullableMaybeDocumentMap();\n    documentKeys.forEach(function (documentKey) {\n      var entry = _this.docs.get(documentKey);\n\n      results = results.insert(documentKey, entry ? entry.maybeDocument : null);\n    });\n    return PersistencePromise.resolve(results);\n  };\n\n  MemoryRemoteDocumentCache.prototype.getDocumentsMatchingQuery = function (transaction, query) {\n    assert(!query.isCollectionGroupQuery(), 'CollectionGroup queries should be handled in LocalDocumentsView');\n    var results = documentMap(); // Documents are ordered by key, so we can use a prefix scan to narrow down\n    // the documents we need to match the query against.\n\n    var prefix = new DocumentKey(query.path.child(''));\n    var iterator = this.docs.getIteratorFrom(prefix);\n\n    while (iterator.hasNext()) {\n      var _a = iterator.getNext(),\n          key = _a.key,\n          maybeDocument = _a.value.maybeDocument;\n\n      if (!query.path.isPrefixOf(key.path)) {\n        break;\n      }\n\n      if (maybeDocument instanceof Document && query.matches(maybeDocument)) {\n        results = results.insert(maybeDocument.key, maybeDocument);\n      }\n    }\n\n    return PersistencePromise.resolve(results);\n  };\n\n  MemoryRemoteDocumentCache.prototype.forEachDocumentKey = function (transaction, f) {\n    return PersistencePromise.forEach(this.docs, function (key) {\n      return f(key);\n    });\n  };\n\n  MemoryRemoteDocumentCache.prototype.getNewDocumentChanges = function (transaction) {\n    var _this = this;\n\n    var changedDocs = maybeDocumentMap();\n    this.newDocumentChanges.forEach(function (key) {\n      var entry = _this.docs.get(key);\n\n      var changedDoc = entry ? entry.maybeDocument : new NoDocument(key, SnapshotVersion.forDeletedDoc());\n      changedDocs = changedDocs.insert(key, changedDoc);\n    });\n    this.newDocumentChanges = documentKeySet();\n    return PersistencePromise.resolve(changedDocs);\n  };\n\n  MemoryRemoteDocumentCache.prototype.newChangeBuffer = function () {\n    return new MemoryRemoteDocumentCache.RemoteDocumentChangeBuffer(this);\n  };\n\n  MemoryRemoteDocumentCache.prototype.getSize = function (txn) {\n    return PersistencePromise.resolve(this.size);\n  };\n  /**\r\n   * Handles the details of adding and updating documents in the MemoryRemoteDocumentCache.\r\n   */\n\n\n  MemoryRemoteDocumentCache.RemoteDocumentChangeBuffer =\n  /** @class */\n  function (_super) {\n    tslib_1.__extends(class_1, _super);\n\n    function class_1(documentCache) {\n      var _this = _super.call(this) || this;\n\n      _this.documentCache = documentCache;\n      return _this;\n    }\n\n    class_1.prototype.applyChanges = function (transaction) {\n      var _this = this;\n\n      var promises = [];\n      this.changes.forEach(function (key, doc) {\n        if (doc) {\n          promises.push(_this.documentCache.addEntry(transaction, doc));\n        } else {\n          _this.documentCache.removeEntry(key);\n        }\n      });\n      return PersistencePromise.waitFor(promises);\n    };\n\n    class_1.prototype.getFromCache = function (transaction, documentKey) {\n      return this.documentCache.getEntry(transaction, documentKey);\n    };\n\n    class_1.prototype.getAllFromCache = function (transaction, documentKeys) {\n      return this.documentCache.getEntries(transaction, documentKeys);\n    };\n\n    return class_1;\n  }(RemoteDocumentChangeBuffer);\n\n  return MemoryRemoteDocumentCache;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_TAG$3 = 'MemoryPersistence';\n/**\r\n * A memory-backed instance of Persistence. Data is stored only in RAM and\r\n * not persisted across sessions.\r\n */\n\nvar MemoryPersistence =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor accepts a factory for creating a reference delegate. This\r\n   * allows both the delegate and this instance to have strong references to\r\n   * each other without having nullable fields that would then need to be\r\n   * checked or asserted on every access.\r\n   */\n  function MemoryPersistence(clientId, referenceDelegateFactory) {\n    var _this = this;\n\n    this.clientId = clientId;\n    this.mutationQueues = {};\n    this.listenSequence = new ListenSequence(0);\n    this._started = false;\n    this._started = true;\n    this.referenceDelegate = referenceDelegateFactory(this);\n    this.queryCache = new MemoryQueryCache(this);\n\n    var sizer = function sizer(doc) {\n      return _this.referenceDelegate.documentSize(doc);\n    };\n\n    this.indexManager = new MemoryIndexManager();\n    this.remoteDocumentCache = new MemoryRemoteDocumentCache(this.indexManager, sizer);\n  }\n\n  MemoryPersistence.createLruPersistence = function (clientId, serializer, params) {\n    var factory = function factory(p) {\n      return new MemoryLruDelegate(p, new LocalSerializer(serializer), params);\n    };\n\n    return new MemoryPersistence(clientId, factory);\n  };\n\n  MemoryPersistence.createEagerPersistence = function (clientId) {\n    var factory = function factory(p) {\n      return new MemoryEagerDelegate(p);\n    };\n\n    return new MemoryPersistence(clientId, factory);\n  };\n\n  MemoryPersistence.prototype.shutdown = function () {\n    // No durable state to ensure is closed on shutdown.\n    this._started = false;\n    return Promise.resolve();\n  };\n\n  Object.defineProperty(MemoryPersistence.prototype, \"started\", {\n    get: function get() {\n      return this._started;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MemoryPersistence.prototype.getActiveClients = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , [this.clientId]];\n      });\n    });\n  };\n\n  MemoryPersistence.prototype.setPrimaryStateListener = function (primaryStateListener) {\n    // All clients using memory persistence act as primary.\n    return primaryStateListener(true);\n  };\n\n  MemoryPersistence.prototype.setDatabaseDeletedListener = function () {// No op.\n  };\n\n  MemoryPersistence.prototype.setNetworkEnabled = function (networkEnabled) {// No op.\n  };\n\n  MemoryPersistence.prototype.getIndexManager = function () {\n    return this.indexManager;\n  };\n\n  MemoryPersistence.prototype.getMutationQueue = function (user) {\n    var queue = this.mutationQueues[user.toKey()];\n\n    if (!queue) {\n      queue = new MemoryMutationQueue(this.indexManager, this.referenceDelegate);\n      this.mutationQueues[user.toKey()] = queue;\n    }\n\n    return queue;\n  };\n\n  MemoryPersistence.prototype.getQueryCache = function () {\n    return this.queryCache;\n  };\n\n  MemoryPersistence.prototype.getRemoteDocumentCache = function () {\n    return this.remoteDocumentCache;\n  };\n\n  MemoryPersistence.prototype.runTransaction = function (action, mode, transactionOperation) {\n    var _this = this;\n\n    debug(LOG_TAG$3, 'Starting transaction:', action);\n    var txn = new MemoryTransaction(this.listenSequence.next());\n    this.referenceDelegate.onTransactionStarted();\n    return transactionOperation(txn).next(function (result) {\n      return _this.referenceDelegate.onTransactionCommitted(txn).next(function () {\n        return result;\n      });\n    }).toPromise();\n  };\n\n  MemoryPersistence.prototype.mutationQueuesContainKey = function (transaction, key) {\n    return PersistencePromise.or(values(this.mutationQueues).map(function (queue) {\n      return function () {\n        return queue.containsKey(transaction, key);\n      };\n    }));\n  };\n\n  return MemoryPersistence;\n}();\n/**\r\n * Memory persistence is not actually transactional, but future implementations\r\n * may have transaction-scoped state.\r\n */\n\n\nvar MemoryTransaction =\n/** @class */\nfunction () {\n  function MemoryTransaction(currentSequenceNumber) {\n    this.currentSequenceNumber = currentSequenceNumber;\n  }\n\n  return MemoryTransaction;\n}();\n\nvar MemoryEagerDelegate =\n/** @class */\nfunction () {\n  function MemoryEagerDelegate(persistence) {\n    this.persistence = persistence;\n    this.inMemoryPins = null;\n    this._orphanedDocuments = null;\n  }\n\n  Object.defineProperty(MemoryEagerDelegate.prototype, \"orphanedDocuments\", {\n    get: function get() {\n      if (!this._orphanedDocuments) {\n        throw fail('orphanedDocuments is only valid during a transaction.');\n      } else {\n        return this._orphanedDocuments;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MemoryEagerDelegate.prototype.setInMemoryPins = function (inMemoryPins) {\n    this.inMemoryPins = inMemoryPins;\n  };\n\n  MemoryEagerDelegate.prototype.addReference = function (txn, key) {\n    this.orphanedDocuments.delete(key);\n    return PersistencePromise.resolve();\n  };\n\n  MemoryEagerDelegate.prototype.removeReference = function (txn, key) {\n    this.orphanedDocuments.add(key);\n    return PersistencePromise.resolve();\n  };\n\n  MemoryEagerDelegate.prototype.removeMutationReference = function (txn, key) {\n    this.orphanedDocuments.add(key);\n    return PersistencePromise.resolve();\n  };\n\n  MemoryEagerDelegate.prototype.removeTarget = function (txn, queryData) {\n    var _this = this;\n\n    var cache = this.persistence.getQueryCache();\n    return cache.getMatchingKeysForTargetId(txn, queryData.targetId).next(function (keys) {\n      keys.forEach(function (key) {\n        return _this.orphanedDocuments.add(key);\n      });\n    }).next(function () {\n      return cache.removeQueryData(txn, queryData);\n    });\n  };\n\n  MemoryEagerDelegate.prototype.onTransactionStarted = function () {\n    this._orphanedDocuments = new Set();\n  };\n\n  MemoryEagerDelegate.prototype.onTransactionCommitted = function (txn) {\n    var _this = this;\n\n    var cache = this.persistence.getRemoteDocumentCache();\n    var changeBuffer = cache.newChangeBuffer();\n    return PersistencePromise.forEach(this.orphanedDocuments, function (key) {\n      return _this.isReferenced(txn, key).next(function (isReferenced) {\n        if (!isReferenced) {\n          changeBuffer.removeEntry(key);\n        }\n      });\n    }).next(function () {\n      _this._orphanedDocuments = null;\n      return changeBuffer.apply(txn);\n    });\n  };\n\n  MemoryEagerDelegate.prototype.updateLimboDocument = function (txn, key) {\n    var _this = this;\n\n    return this.isReferenced(txn, key).next(function (isReferenced) {\n      if (isReferenced) {\n        _this.orphanedDocuments.delete(key);\n      } else {\n        _this.orphanedDocuments.add(key);\n      }\n    });\n  };\n\n  MemoryEagerDelegate.prototype.documentSize = function (doc) {\n    // For eager GC, we don't care about the document size, there are no size thresholds.\n    return 0;\n  };\n\n  MemoryEagerDelegate.prototype.isReferenced = function (txn, key) {\n    var _this = this;\n\n    return PersistencePromise.or([function () {\n      return _this.persistence.getQueryCache().containsKey(txn, key);\n    }, function () {\n      return _this.persistence.mutationQueuesContainKey(txn, key);\n    }, function () {\n      return PersistencePromise.resolve(_this.inMemoryPins.containsKey(key));\n    }]);\n  };\n\n  return MemoryEagerDelegate;\n}();\n\nvar MemoryLruDelegate =\n/** @class */\nfunction () {\n  function MemoryLruDelegate(persistence, serializer, lruParams) {\n    this.persistence = persistence;\n    this.serializer = serializer;\n    this.inMemoryPins = null;\n    this.orphanedSequenceNumbers = new ObjectMap(function (k) {\n      return encode(k.path);\n    });\n    this.garbageCollector = new LruGarbageCollector(this, lruParams);\n  } // No-ops, present so memory persistence doesn't have to care which delegate\n  // it has.\n\n\n  MemoryLruDelegate.prototype.onTransactionStarted = function () {};\n\n  MemoryLruDelegate.prototype.onTransactionCommitted = function (txn) {\n    return PersistencePromise.resolve();\n  };\n\n  MemoryLruDelegate.prototype.forEachTarget = function (txn, f) {\n    return this.persistence.getQueryCache().forEachTarget(txn, f);\n  };\n\n  MemoryLruDelegate.prototype.getSequenceNumberCount = function (txn) {\n    var docCountPromise = this.orphanedDocumentCount(txn);\n    var targetCountPromise = this.persistence.getQueryCache().getTargetCount(txn);\n    return targetCountPromise.next(function (targetCount) {\n      return docCountPromise.next(function (docCount) {\n        return targetCount + docCount;\n      });\n    });\n  };\n\n  MemoryLruDelegate.prototype.orphanedDocumentCount = function (txn) {\n    var orphanedCount = 0;\n    return this.forEachOrphanedDocumentSequenceNumber(txn, function (_) {\n      orphanedCount++;\n    }).next(function () {\n      return orphanedCount;\n    });\n  };\n\n  MemoryLruDelegate.prototype.forEachOrphanedDocumentSequenceNumber = function (txn, f) {\n    var _this = this;\n\n    return PersistencePromise.forEach(this.orphanedSequenceNumbers, function (key, sequenceNumber) {\n      // Pass in the exact sequence number as the upper bound so we know it won't be pinned by\n      // being too recent.\n      return _this.isPinned(txn, key, sequenceNumber).next(function (isPinned) {\n        if (!isPinned) {\n          return f(sequenceNumber);\n        } else {\n          return PersistencePromise.resolve();\n        }\n      });\n    });\n  };\n\n  MemoryLruDelegate.prototype.setInMemoryPins = function (inMemoryPins) {\n    this.inMemoryPins = inMemoryPins;\n  };\n\n  MemoryLruDelegate.prototype.removeTargets = function (txn, upperBound, activeTargetIds) {\n    return this.persistence.getQueryCache().removeTargets(txn, upperBound, activeTargetIds);\n  };\n\n  MemoryLruDelegate.prototype.removeOrphanedDocuments = function (txn, upperBound) {\n    var _this = this;\n\n    var count = 0;\n    var cache = this.persistence.getRemoteDocumentCache();\n    var changeBuffer = cache.newChangeBuffer();\n    var p = cache.forEachDocumentKey(txn, function (key) {\n      return _this.isPinned(txn, key, upperBound).next(function (isPinned) {\n        if (!isPinned) {\n          count++;\n          changeBuffer.removeEntry(key);\n        }\n      });\n    });\n    return p.next(function () {\n      return changeBuffer.apply(txn);\n    }).next(function () {\n      return count;\n    });\n  };\n\n  MemoryLruDelegate.prototype.removeMutationReference = function (txn, key) {\n    this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n    return PersistencePromise.resolve();\n  };\n\n  MemoryLruDelegate.prototype.removeTarget = function (txn, queryData) {\n    var updated = queryData.withSequenceNumber(txn.currentSequenceNumber);\n    return this.persistence.getQueryCache().updateQueryData(txn, updated);\n  };\n\n  MemoryLruDelegate.prototype.addReference = function (txn, key) {\n    this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n    return PersistencePromise.resolve();\n  };\n\n  MemoryLruDelegate.prototype.removeReference = function (txn, key) {\n    this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n    return PersistencePromise.resolve();\n  };\n\n  MemoryLruDelegate.prototype.updateLimboDocument = function (txn, key) {\n    this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n    return PersistencePromise.resolve();\n  };\n\n  MemoryLruDelegate.prototype.documentSize = function (maybeDoc) {\n    var remoteDocument = this.serializer.toDbRemoteDocument(maybeDoc);\n    var value;\n\n    if (remoteDocument.document) {\n      value = remoteDocument.document;\n    } else if (remoteDocument.unknownDocument) {\n      value = remoteDocument.unknownDocument;\n    } else if (remoteDocument.noDocument) {\n      value = remoteDocument.noDocument;\n    } else {\n      throw fail('Unknown remote document type');\n    }\n\n    return JSON.stringify(value).length;\n  };\n\n  MemoryLruDelegate.prototype.isPinned = function (txn, key, upperBound) {\n    var _this = this;\n\n    return PersistencePromise.or([function () {\n      return _this.persistence.mutationQueuesContainKey(txn, key);\n    }, function () {\n      return PersistencePromise.resolve(_this.inMemoryPins.containsKey(key));\n    }, function () {\n      return _this.persistence.getQueryCache().containsKey(txn, key);\n    }, function () {\n      var orphanedAt = _this.orphanedSequenceNumbers.get(key);\n\n      return PersistencePromise.resolve(orphanedAt !== undefined && orphanedAt > upperBound);\n    }]);\n  };\n\n  MemoryLruDelegate.prototype.getCacheSize = function (txn) {\n    return this.persistence.getRemoteDocumentCache().getSize(txn);\n  };\n\n  return MemoryLruDelegate;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Untyped Number alias we can use to check for ES6 methods / properties.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nvar NumberAsAny = Number;\n/**\r\n * Minimum safe integer in Javascript because of floating point precision.\r\n * Added to not rely on ES6 features.\r\n */\n\nvar MIN_SAFE_INTEGER = NumberAsAny.MIN_SAFE_INTEGER || -(Math.pow(2, 53) - 1);\n/**\r\n * Maximum safe integer in Javascript because of floating point precision.\r\n * Added to not rely on ES6 features.\r\n */\n\nvar MAX_SAFE_INTEGER = NumberAsAny.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n/**\r\n * Returns whether an number is an integer, uses native implementation if\r\n * available.\r\n * Added to not rely on ES6 features.\r\n * @param value The value to test for being an integer\r\n */\n\nvar isInteger = NumberAsAny.isInteger || function (value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n};\n/**\r\n * Returns whether a variable is either undefined or null.\r\n */\n\n\nfunction isNullOrUndefined(value) {\n  return value === null || value === undefined;\n}\n/**\r\n * Returns whether a value is an integer and in the safe integer range\r\n * @param value The value to test for being an integer and in the safe range\r\n */\n\n\nfunction isSafeInteger(value) {\n  return isInteger(value) && value <= MAX_SAFE_INTEGER && value >= MIN_SAFE_INTEGER;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_TAG$4 = 'ExponentialBackoff';\n/**\r\n * Initial backoff time in milliseconds after an error.\r\n * Set to 1s according to https://cloud.google.com/apis/design/errors.\r\n */\n\nvar DEFAULT_BACKOFF_INITIAL_DELAY_MS = 1000;\nvar DEFAULT_BACKOFF_FACTOR = 1.5;\n/** Maximum backoff time in milliseconds */\n\nvar DEFAULT_BACKOFF_MAX_DELAY_MS = 60 * 1000;\n/**\r\n * A helper for running delayed tasks following an exponential backoff curve\r\n * between attempts.\r\n *\r\n * Each delay is made up of a \"base\" delay which follows the exponential\r\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\r\n * base delay. This prevents clients from accidentally synchronizing their\r\n * delays causing spikes of load to the backend.\r\n */\n\nvar ExponentialBackoff =\n/** @class */\nfunction () {\n  function ExponentialBackoff(\n  /**\r\n   * The AsyncQueue to run backoff operations on.\r\n   */\n  queue,\n  /**\r\n   * The ID to use when scheduling backoff operations on the AsyncQueue.\r\n   */\n  timerId,\n  /**\r\n   * The initial delay (used as the base delay on the first retry attempt).\r\n   * Note that jitter will still be applied, so the actual delay could be as\r\n   * little as 0.5*initialDelayMs.\r\n   */\n  initialDelayMs,\n  /**\r\n   * The multiplier to use to determine the extended base delay after each\r\n   * attempt.\r\n   */\n  backoffFactor,\n  /**\r\n   * The maximum base delay after which no further backoff is performed.\r\n   * Note that jitter will still be applied, so the actual delay could be as\r\n   * much as 1.5*maxDelayMs.\r\n   */\n  maxDelayMs) {\n    if (initialDelayMs === void 0) {\n      initialDelayMs = DEFAULT_BACKOFF_INITIAL_DELAY_MS;\n    }\n\n    if (backoffFactor === void 0) {\n      backoffFactor = DEFAULT_BACKOFF_FACTOR;\n    }\n\n    if (maxDelayMs === void 0) {\n      maxDelayMs = DEFAULT_BACKOFF_MAX_DELAY_MS;\n    }\n\n    this.queue = queue;\n    this.timerId = timerId;\n    this.initialDelayMs = initialDelayMs;\n    this.backoffFactor = backoffFactor;\n    this.maxDelayMs = maxDelayMs;\n    this.currentBaseMs = 0;\n    this.timerPromise = null;\n    /** The last backoff attempt, as epoch milliseconds. */\n\n    this.lastAttemptTime = Date.now();\n    this.reset();\n  }\n  /**\r\n   * Resets the backoff delay.\r\n   *\r\n   * The very next backoffAndWait() will have no delay. If it is called again\r\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\r\n   * subsequent ones will increase according to the backoffFactor.\r\n   */\n\n\n  ExponentialBackoff.prototype.reset = function () {\n    this.currentBaseMs = 0;\n  };\n  /**\r\n   * Resets the backoff delay to the maximum delay (e.g. for use after a\r\n   * RESOURCE_EXHAUSTED error).\r\n   */\n\n\n  ExponentialBackoff.prototype.resetToMax = function () {\n    this.currentBaseMs = this.maxDelayMs;\n  };\n  /**\r\n   * Returns a promise that resolves after currentDelayMs, and increases the\r\n   * delay for any subsequent attempts. If there was a pending backoff operation\r\n   * already, it will be canceled.\r\n   */\n\n\n  ExponentialBackoff.prototype.backoffAndRun = function (op) {\n    var _this = this; // Cancel any pending backoff operation.\n\n\n    this.cancel(); // First schedule using the current base (which may be 0 and should be\n    // honored as such).\n\n    var desiredDelayWithJitterMs = Math.floor(this.currentBaseMs + this.jitterDelayMs()); // Guard against lastAttemptTime being in the future due to a clock change.\n\n    var delaySoFarMs = Math.max(0, Date.now() - this.lastAttemptTime); // Guard against the backoff delay already being past.\n\n    var remainingDelayMs = Math.max(0, desiredDelayWithJitterMs - delaySoFarMs);\n\n    if (this.currentBaseMs > 0) {\n      debug(LOG_TAG$4, \"Backing off for \" + remainingDelayMs + \" ms \" + (\"(base delay: \" + this.currentBaseMs + \" ms, \") + (\"delay with jitter: \" + desiredDelayWithJitterMs + \" ms, \") + (\"last attempt: \" + delaySoFarMs + \" ms ago)\"));\n    }\n\n    this.timerPromise = this.queue.enqueueAfterDelay(this.timerId, remainingDelayMs, function () {\n      _this.lastAttemptTime = Date.now();\n      return op();\n    }); // Apply backoff factor to determine next delay and ensure it is within\n    // bounds.\n\n    this.currentBaseMs *= this.backoffFactor;\n\n    if (this.currentBaseMs < this.initialDelayMs) {\n      this.currentBaseMs = this.initialDelayMs;\n    }\n\n    if (this.currentBaseMs > this.maxDelayMs) {\n      this.currentBaseMs = this.maxDelayMs;\n    }\n  };\n\n  ExponentialBackoff.prototype.cancel = function () {\n    if (this.timerPromise !== null) {\n      this.timerPromise.cancel();\n      this.timerPromise = null;\n    }\n  };\n  /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n\n\n  ExponentialBackoff.prototype.jitterDelayMs = function () {\n    return (Math.random() - 0.5) * this.currentBaseMs;\n  };\n\n  return ExponentialBackoff;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_TAG$5 = 'PersistentStream';\n/**\r\n * PersistentStream can be in one of 5 states (each described in detail below)\r\n * based on the following state transition diagram:\r\n *\r\n *          start() called             auth & connection succeeded\r\n * INITIAL ----------------> STARTING -----------------------------> OPEN\r\n *                             ^  |                                   |\r\n *                             |  |                    error occurred |\r\n *                             |  \\-----------------------------v-----/\r\n *                             |                                |\r\n *                    backoff  |                                |\r\n *                    elapsed  |              start() called    |\r\n *                             \\--- BACKOFF <---------------- ERROR\r\n *\r\n * [any state] --------------------------> INITIAL\r\n *               stop() called or\r\n *               idle timer expired\r\n */\n\nvar PersistentStreamState;\n\n(function (PersistentStreamState) {\n  /**\r\n   * The streaming RPC is not yet running and there's no error condition.\r\n   * Calling start() will start the stream immediately without backoff.\r\n   * While in this state isStarted() will return false.\r\n   */\n  PersistentStreamState[PersistentStreamState[\"Initial\"] = 0] = \"Initial\";\n  /**\r\n   * The stream is starting, either waiting for an auth token or for the stream\r\n   * to successfully open. While in this state, isStarted() will return true but\r\n   * isOpen() will return false.\r\n   */\n\n  PersistentStreamState[PersistentStreamState[\"Starting\"] = 1] = \"Starting\";\n  /**\r\n   * The streaming RPC is up and running. Requests and responses can flow\r\n   * freely. Both isStarted() and isOpen() will return true.\r\n   */\n\n  PersistentStreamState[PersistentStreamState[\"Open\"] = 2] = \"Open\";\n  /**\r\n   * The stream encountered an error. The next start attempt will back off.\r\n   * While in this state isStarted() will return false.\r\n   */\n\n  PersistentStreamState[PersistentStreamState[\"Error\"] = 3] = \"Error\";\n  /**\r\n   * An in-between state after an error where the stream is waiting before\r\n   * re-starting. After waiting is complete, the stream will try to open.\r\n   * While in this state isStarted() will return true but isOpen() will return\r\n   * false.\r\n   */\n\n  PersistentStreamState[PersistentStreamState[\"Backoff\"] = 4] = \"Backoff\";\n})(PersistentStreamState || (PersistentStreamState = {}));\n/** The time a stream stays open after it is marked idle. */\n\n\nvar IDLE_TIMEOUT_MS = 60 * 1000;\n/**\r\n * A PersistentStream is an abstract base class that represents a streaming RPC\r\n * to the Firestore backend. It's built on top of the connections own support\r\n * for streaming RPCs, and adds several critical features for our clients:\r\n *\r\n *   - Exponential backoff on failure\r\n *   - Authentication via CredentialsProvider\r\n *   - Dispatching all callbacks into the shared worker queue\r\n *   - Closing idle streams after 60 seconds of inactivity\r\n *\r\n * Subclasses of PersistentStream implement serialization of models to and\r\n * from the JSON representation of the protocol buffers for a specific\r\n * streaming RPC.\r\n *\r\n * ## Starting and Stopping\r\n *\r\n * Streaming RPCs are stateful and need to be start()ed before messages can\r\n * be sent and received. The PersistentStream will call the onOpen() function\r\n * of the listener once the stream is ready to accept requests.\r\n *\r\n * Should a start() fail, PersistentStream will call the registered onClose()\r\n * listener with a FirestoreError indicating what went wrong.\r\n *\r\n * A PersistentStream can be started and stopped repeatedly.\r\n *\r\n * Generic types:\r\n *  SendType: The type of the outgoing message of the underlying\r\n *    connection stream\r\n *  ReceiveType: The type of the incoming message of the underlying\r\n *    connection stream\r\n *  ListenerType: The type of the listener that will be used for callbacks\r\n */\n\nvar PersistentStream =\n/** @class */\nfunction () {\n  function PersistentStream(queue, connectionTimerId, idleTimerId, connection, credentialsProvider, listener) {\n    this.queue = queue;\n    this.idleTimerId = idleTimerId;\n    this.connection = connection;\n    this.credentialsProvider = credentialsProvider;\n    this.listener = listener;\n    this.state = PersistentStreamState.Initial;\n    /**\r\n     * A close count that's incremented every time the stream is closed; used by\r\n     * getCloseGuardedDispatcher() to invalidate callbacks that happen after\r\n     * close.\r\n     */\n\n    this.closeCount = 0;\n    this.idleTimer = null;\n    this.stream = null;\n    this.backoff = new ExponentialBackoff(queue, connectionTimerId);\n  }\n  /**\r\n   * Returns true if start() has been called and no error has occurred. True\r\n   * indicates the stream is open or in the process of opening (which\r\n   * encompasses respecting backoff, getting auth tokens, and starting the\r\n   * actual RPC). Use isOpen() to determine if the stream is open and ready for\r\n   * outbound requests.\r\n   */\n\n\n  PersistentStream.prototype.isStarted = function () {\n    return this.state === PersistentStreamState.Starting || this.state === PersistentStreamState.Open || this.state === PersistentStreamState.Backoff;\n  };\n  /**\r\n   * Returns true if the underlying RPC is open (the onOpen() listener has been\r\n   * called) and the stream is ready for outbound requests.\r\n   */\n\n\n  PersistentStream.prototype.isOpen = function () {\n    return this.state === PersistentStreamState.Open;\n  };\n  /**\r\n   * Starts the RPC. Only allowed if isStarted() returns false. The stream is\r\n   * not immediately ready for use: onOpen() will be invoked when the RPC is\r\n   * ready for outbound requests, at which point isOpen() will return true.\r\n   *\r\n   * When start returns, isStarted() will return true.\r\n   */\n\n\n  PersistentStream.prototype.start = function () {\n    if (this.state === PersistentStreamState.Error) {\n      this.performBackoff();\n      return;\n    }\n\n    assert(this.state === PersistentStreamState.Initial, 'Already started');\n    this.auth();\n  };\n  /**\r\n   * Stops the RPC. This call is idempotent and allowed regardless of the\r\n   * current isStarted() state.\r\n   *\r\n   * When stop returns, isStarted() and isOpen() will both return false.\r\n   */\n\n\n  PersistentStream.prototype.stop = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.isStarted()) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.close(PersistentStreamState.Initial)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * After an error the stream will usually back off on the next attempt to\r\n   * start it. If the error warrants an immediate restart of the stream, the\r\n   * sender can use this to indicate that the receiver should not back off.\r\n   *\r\n   * Each error will call the onClose() listener. That function can decide to\r\n   * inhibit backoff if required.\r\n   */\n\n\n  PersistentStream.prototype.inhibitBackoff = function () {\n    assert(!this.isStarted(), 'Can only inhibit backoff in a stopped state');\n    this.state = PersistentStreamState.Initial;\n    this.backoff.reset();\n  };\n  /**\r\n   * Marks this stream as idle. If no further actions are performed on the\r\n   * stream for one minute, the stream will automatically close itself and\r\n   * notify the stream's onClose() handler with Status.OK. The stream will then\r\n   * be in a !isStarted() state, requiring the caller to start the stream again\r\n   * before further use.\r\n   *\r\n   * Only streams that are in state 'Open' can be marked idle, as all other\r\n   * states imply pending network operations.\r\n   */\n\n\n  PersistentStream.prototype.markIdle = function () {\n    var _this = this; // Starts the idle time if we are in state 'Open' and are not yet already\n    // running a timer (in which case the previous idle timeout still applies).\n\n\n    if (this.isOpen() && this.idleTimer === null) {\n      this.idleTimer = this.queue.enqueueAfterDelay(this.idleTimerId, IDLE_TIMEOUT_MS, function () {\n        return _this.handleIdleCloseTimer();\n      });\n    }\n  };\n  /** Sends a message to the underlying stream. */\n\n\n  PersistentStream.prototype.sendRequest = function (msg) {\n    this.cancelIdleCheck();\n    this.stream.send(msg);\n  };\n  /** Called by the idle timer when the stream should close due to inactivity. */\n\n\n  PersistentStream.prototype.handleIdleCloseTimer = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        if (this.isOpen()) {\n          // When timing out an idle stream there's no reason to force the stream into backoff when\n          // it restarts so set the stream state to Initial instead of Error.\n          return [2\n          /*return*/\n          , this.close(PersistentStreamState.Initial)];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /** Marks the stream as active again. */\n\n\n  PersistentStream.prototype.cancelIdleCheck = function () {\n    if (this.idleTimer) {\n      this.idleTimer.cancel();\n      this.idleTimer = null;\n    }\n  };\n  /**\r\n   * Closes the stream and cleans up as necessary:\r\n   *\r\n   * * closes the underlying GRPC stream;\r\n   * * calls the onClose handler with the given 'error';\r\n   * * sets internal stream state to 'finalState';\r\n   * * adjusts the backoff timer based on the error\r\n   *\r\n   * A new stream can be opened by calling start().\r\n   *\r\n   * @param finalState the intended state of the stream after closing.\r\n   * @param error the error the connection was closed with.\r\n   */\n\n\n  PersistentStream.prototype.close = function (finalState, error$1) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            assert(this.isStarted(), 'Only started streams should be closed.');\n            assert(finalState === PersistentStreamState.Error || isNullOrUndefined(error$1), \"Can't provide an error when not in an error state.\"); // Cancel any outstanding timers (they're guaranteed not to execute).\n\n            this.cancelIdleCheck();\n            this.backoff.cancel(); // Invalidates any stream-related callbacks (e.g. from auth or the\n            // underlying stream), guaranteeing they won't execute.\n\n            this.closeCount++;\n\n            if (finalState !== PersistentStreamState.Error) {\n              // If this is an intentional close ensure we don't delay our next connection attempt.\n              this.backoff.reset();\n            } else if (error$1 && error$1.code === Code.RESOURCE_EXHAUSTED) {\n              // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)\n              error(error$1.toString());\n              error('Using maximum backoff delay to prevent overloading the backend.');\n              this.backoff.resetToMax();\n            } else if (error$1 && error$1.code === Code.UNAUTHENTICATED) {\n              // \"unauthenticated\" error means the token was rejected. Try force refreshing it in case it\n              // just expired.\n              this.credentialsProvider.invalidateToken();\n            } // Clean up the underlying stream because we are no longer interested in events.\n\n\n            if (this.stream !== null) {\n              this.tearDown();\n              this.stream.close();\n              this.stream = null;\n            } // This state must be assigned before calling onClose() to allow the callback to\n            // inhibit backoff or otherwise manipulate the state in its non-started state.\n\n\n            this.state = finalState; // Notify the listener that the stream closed.\n\n            return [4\n            /*yield*/\n            , this.listener.onClose(error$1)];\n\n          case 1:\n            // Notify the listener that the stream closed.\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Can be overridden to perform additional cleanup before the stream is closed.\r\n   * Calling super.tearDown() is not required.\r\n   */\n\n\n  PersistentStream.prototype.tearDown = function () {};\n\n  PersistentStream.prototype.auth = function () {\n    var _this = this;\n\n    assert(this.state === PersistentStreamState.Initial, 'Must be in initial state to auth');\n    this.state = PersistentStreamState.Starting;\n    var dispatchIfNotClosed = this.getCloseGuardedDispatcher(this.closeCount); // TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.\n\n    var closeCount = this.closeCount;\n    this.credentialsProvider.getToken().then(function (token) {\n      // Stream can be stopped while waiting for authentication.\n      // TODO(mikelehen): We really should just use dispatchIfNotClosed\n      // and let this dispatch onto the queue, but that opened a spec test can\n      // of worms that I don't want to deal with in this PR.\n      if (_this.closeCount === closeCount) {\n        // Normally we'd have to schedule the callback on the AsyncQueue.\n        // However, the following calls are safe to be called outside the\n        // AsyncQueue since they don't chain asynchronous calls\n        _this.startStream(token);\n      }\n    }, function (error) {\n      dispatchIfNotClosed(function () {\n        var rpcError = new FirestoreError(Code.UNKNOWN, 'Fetching auth token failed: ' + error.message);\n        return _this.handleStreamClose(rpcError);\n      });\n    });\n  };\n\n  PersistentStream.prototype.startStream = function (token) {\n    var _this = this;\n\n    assert(this.state === PersistentStreamState.Starting, 'Trying to start stream in a non-starting state');\n    var dispatchIfNotClosed = this.getCloseGuardedDispatcher(this.closeCount);\n    this.stream = this.startRpc(token);\n    this.stream.onOpen(function () {\n      dispatchIfNotClosed(function () {\n        assert(_this.state === PersistentStreamState.Starting, 'Expected stream to be in state Starting, but was ' + _this.state);\n        _this.state = PersistentStreamState.Open;\n        return _this.listener.onOpen();\n      });\n    });\n    this.stream.onClose(function (error) {\n      dispatchIfNotClosed(function () {\n        return _this.handleStreamClose(error);\n      });\n    });\n    this.stream.onMessage(function (msg) {\n      dispatchIfNotClosed(function () {\n        return _this.onMessage(msg);\n      });\n    });\n  };\n\n  PersistentStream.prototype.performBackoff = function () {\n    var _this = this;\n\n    assert(this.state === PersistentStreamState.Error, 'Should only perform backoff when in Error state');\n    this.state = PersistentStreamState.Backoff;\n    this.backoff.backoffAndRun(function () {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        return tslib_1.__generator(this, function (_a) {\n          assert(this.state === PersistentStreamState.Backoff, 'Backoff elapsed but state is now: ' + this.state);\n          this.state = PersistentStreamState.Initial;\n          this.start();\n          assert(this.isStarted(), 'PersistentStream should have started');\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    });\n  }; // Visible for tests\n\n\n  PersistentStream.prototype.handleStreamClose = function (error) {\n    assert(this.isStarted(), \"Can't handle server close on non-started stream\");\n    debug(LOG_TAG$5, \"close with error: \" + error);\n    this.stream = null; // In theory the stream could close cleanly, however, in our current model\n    // we never expect this to happen because if we stop a stream ourselves,\n    // this callback will never be called. To prevent cases where we retry\n    // without a backoff accidentally, we set the stream to error in all cases.\n\n    return this.close(PersistentStreamState.Error, error);\n  };\n  /**\r\n   * Returns a \"dispatcher\" function that dispatches operations onto the\r\n   * AsyncQueue but only runs them if closeCount remains unchanged. This allows\r\n   * us to turn auth / stream callbacks into no-ops if the stream is closed /\r\n   * re-opened, etc.\r\n   */\n\n\n  PersistentStream.prototype.getCloseGuardedDispatcher = function (startCloseCount) {\n    var _this = this;\n\n    return function (fn) {\n      _this.queue.enqueueAndForget(function () {\n        if (_this.closeCount === startCloseCount) {\n          return fn();\n        } else {\n          debug(LOG_TAG$5, 'stream callback skipped by getCloseGuardedDispatcher.');\n          return Promise.resolve();\n        }\n      });\n    };\n  };\n\n  return PersistentStream;\n}();\n/**\r\n * A PersistentStream that implements the Listen RPC.\r\n *\r\n * Once the Listen stream has called the onOpen() listener, any number of\r\n * listen() and unlisten() calls can be made to control what changes will be\r\n * sent from the server for ListenResponses.\r\n */\n\n\nvar PersistentListenStream =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(PersistentListenStream, _super);\n\n  function PersistentListenStream(queue, connection, credentials, serializer, listener) {\n    var _this = _super.call(this, queue, TimerId.ListenStreamConnectionBackoff, TimerId.ListenStreamIdle, connection, credentials, listener) || this;\n\n    _this.serializer = serializer;\n    return _this;\n  }\n\n  PersistentListenStream.prototype.startRpc = function (token) {\n    return this.connection.openStream('Listen', token);\n  };\n\n  PersistentListenStream.prototype.onMessage = function (watchChangeProto) {\n    // A successful response means the stream is healthy\n    this.backoff.reset();\n    var watchChange = this.serializer.fromWatchChange(watchChangeProto);\n    var snapshot = this.serializer.versionFromListenResponse(watchChangeProto);\n    return this.listener.onWatchChange(watchChange, snapshot);\n  };\n  /**\r\n   * Registers interest in the results of the given query. If the query\r\n   * includes a resumeToken it will be included in the request. Results that\r\n   * affect the query will be streamed back as WatchChange messages that\r\n   * reference the targetId.\r\n   */\n\n\n  PersistentListenStream.prototype.watch = function (queryData) {\n    var request = {};\n    request.database = this.serializer.encodedDatabaseId;\n    request.addTarget = this.serializer.toTarget(queryData);\n    var labels = this.serializer.toListenRequestLabels(queryData);\n\n    if (labels) {\n      request.labels = labels;\n    }\n\n    this.sendRequest(request);\n  };\n  /**\r\n   * Unregisters interest in the results of the query associated with the\r\n   * given targetId.\r\n   */\n\n\n  PersistentListenStream.prototype.unwatch = function (targetId) {\n    var request = {};\n    request.database = this.serializer.encodedDatabaseId;\n    request.removeTarget = targetId;\n    this.sendRequest(request);\n  };\n\n  return PersistentListenStream;\n}(PersistentStream);\n/**\r\n * A Stream that implements the Write RPC.\r\n *\r\n * The Write RPC requires the caller to maintain special streamToken\r\n * state in between calls, to help the server understand which responses the\r\n * client has processed by the time the next request is made. Every response\r\n * will contain a streamToken; this value must be passed to the next\r\n * request.\r\n *\r\n * After calling start() on this stream, the next request must be a handshake,\r\n * containing whatever streamToken is on hand. Once a response to this\r\n * request is received, all pending mutations may be submitted. When\r\n * submitting multiple batches of mutations at the same time, it's\r\n * okay to use the same streamToken for the calls to writeMutations.\r\n *\r\n * TODO(b/33271235): Use proto types\r\n */\n\n\nvar PersistentWriteStream =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(PersistentWriteStream, _super);\n\n  function PersistentWriteStream(queue, connection, credentials, serializer, listener) {\n    var _this = _super.call(this, queue, TimerId.WriteStreamConnectionBackoff, TimerId.WriteStreamIdle, connection, credentials, listener) || this;\n\n    _this.serializer = serializer;\n    _this.handshakeComplete_ = false;\n    /**\r\n     * The last received stream token from the server, used to acknowledge which\r\n     * responses the client has processed. Stream tokens are opaque checkpoint\r\n     * markers whose only real value is their inclusion in the next request.\r\n     *\r\n     * PersistentWriteStream manages propagating this value from responses to the\r\n     * next request.\r\n     */\n\n    _this.lastStreamToken = emptyByteString();\n    return _this;\n  }\n\n  Object.defineProperty(PersistentWriteStream.prototype, \"handshakeComplete\", {\n    /**\r\n     * Tracks whether or not a handshake has been successfully exchanged and\r\n     * the stream is ready to accept mutations.\r\n     */\n    get: function get() {\n      return this.handshakeComplete_;\n    },\n    enumerable: true,\n    configurable: true\n  }); // Override of PersistentStream.start\n\n  PersistentWriteStream.prototype.start = function () {\n    this.handshakeComplete_ = false;\n\n    _super.prototype.start.call(this);\n  };\n\n  PersistentWriteStream.prototype.tearDown = function () {\n    if (this.handshakeComplete_) {\n      this.writeMutations([]);\n    }\n  };\n\n  PersistentWriteStream.prototype.startRpc = function (token) {\n    return this.connection.openStream('Write', token);\n  };\n\n  PersistentWriteStream.prototype.onMessage = function (responseProto) {\n    // Always capture the last stream token.\n    assert(!!responseProto.streamToken, 'Got a write response without a stream token');\n    this.lastStreamToken = responseProto.streamToken;\n\n    if (!this.handshakeComplete_) {\n      // The first response is always the handshake response\n      assert(!responseProto.writeResults || responseProto.writeResults.length === 0, 'Got mutation results for handshake');\n      this.handshakeComplete_ = true;\n      return this.listener.onHandshakeComplete();\n    } else {\n      // A successful first write response means the stream is healthy,\n      // Note, that we could consider a successful handshake healthy, however,\n      // the write itself might be causing an error we want to back off from.\n      this.backoff.reset();\n      var results = this.serializer.fromWriteResults(responseProto.writeResults, responseProto.commitTime);\n      var commitVersion = this.serializer.fromVersion(responseProto.commitTime);\n      return this.listener.onMutationResult(commitVersion, results);\n    }\n  };\n  /**\r\n   * Sends an initial streamToken to the server, performing the handshake\r\n   * required to make the StreamingWrite RPC work. Subsequent\r\n   * calls should wait until onHandshakeComplete was called.\r\n   */\n\n\n  PersistentWriteStream.prototype.writeHandshake = function () {\n    assert(this.isOpen(), 'Writing handshake requires an opened stream');\n    assert(!this.handshakeComplete_, 'Handshake already completed'); // TODO(dimond): Support stream resumption. We intentionally do not set the\n    // stream token on the handshake, ignoring any stream token we might have.\n\n    var request = {};\n    request.database = this.serializer.encodedDatabaseId;\n    this.sendRequest(request);\n  };\n  /** Sends a group of mutations to the Firestore backend to apply. */\n\n\n  PersistentWriteStream.prototype.writeMutations = function (mutations) {\n    var _this = this;\n\n    assert(this.isOpen(), 'Writing mutations requires an opened stream');\n    assert(this.handshakeComplete_, 'Handshake must be complete before writing mutations');\n    assert(this.lastStreamToken.length > 0, 'Trying to write mutation without a token');\n    var request = {\n      // Protos are typed with string, but we support UInt8Array on Node\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      streamToken: this.lastStreamToken,\n      writes: mutations.map(function (mutation) {\n        return _this.serializer.toMutation(mutation);\n      })\n    };\n    this.sendRequest(request);\n  };\n\n  return PersistentWriteStream;\n}(PersistentStream);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Datastore is a wrapper around the external Google Cloud Datastore grpc API,\r\n * which provides an interface that is more convenient for the rest of the\r\n * client SDK architecture to consume.\r\n */\n\n\nvar Datastore =\n/** @class */\nfunction () {\n  function Datastore(queue, connection, credentials, serializer) {\n    this.queue = queue;\n    this.connection = connection;\n    this.credentials = credentials;\n    this.serializer = serializer;\n  }\n\n  Datastore.prototype.newPersistentWriteStream = function (listener) {\n    return new PersistentWriteStream(this.queue, this.connection, this.credentials, this.serializer, listener);\n  };\n\n  Datastore.prototype.newPersistentWatchStream = function (listener) {\n    return new PersistentListenStream(this.queue, this.connection, this.credentials, this.serializer, listener);\n  };\n\n  Datastore.prototype.commit = function (mutations) {\n    var _this = this;\n\n    var params = {\n      database: this.serializer.encodedDatabaseId,\n      writes: mutations.map(function (m) {\n        return _this.serializer.toMutation(m);\n      })\n    };\n    return this.invokeRPC('Commit', params).then(function (response) {\n      return _this.serializer.fromWriteResults(response.writeResults, response.commitTime);\n    });\n  };\n\n  Datastore.prototype.lookup = function (keys) {\n    var _this = this;\n\n    var params = {\n      database: this.serializer.encodedDatabaseId,\n      documents: keys.map(function (k) {\n        return _this.serializer.toName(k);\n      })\n    };\n    return this.invokeStreamingRPC('BatchGetDocuments', params).then(function (response) {\n      var docs = maybeDocumentMap();\n      response.forEach(function (proto) {\n        var doc = _this.serializer.fromMaybeDocument(proto);\n\n        docs = docs.insert(doc.key, doc);\n      });\n      var result = [];\n      keys.forEach(function (key) {\n        var doc = docs.get(key);\n        assert(!!doc, 'Missing entity in write response for ' + key);\n        result.push(doc);\n      });\n      return result;\n    });\n  };\n  /** Gets an auth token and invokes the provided RPC. */\n\n\n  Datastore.prototype.invokeRPC = function (rpcName, request) {\n    var _this = this;\n\n    return this.credentials.getToken().then(function (token) {\n      return _this.connection.invokeRPC(rpcName, request, token);\n    }).catch(function (error) {\n      if (error.code === Code.UNAUTHENTICATED) {\n        _this.credentials.invalidateToken();\n      }\n\n      throw error;\n    });\n  };\n  /** Gets an auth token and invokes the provided RPC with streamed results. */\n\n\n  Datastore.prototype.invokeStreamingRPC = function (rpcName, request) {\n    var _this = this;\n\n    return this.credentials.getToken().then(function (token) {\n      return _this.connection.invokeStreamingRPC(rpcName, request, token);\n    }).catch(function (error) {\n      if (error.code === Code.UNAUTHENTICATED) {\n        _this.credentials.invalidateToken();\n      }\n\n      throw error;\n    });\n  };\n\n  return Datastore;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Internal transaction object responsible for accumulating the mutations to\r\n * perform and the base versions for any documents read.\r\n */\n\n\nvar Transaction =\n/** @class */\nfunction () {\n  function Transaction(datastore) {\n    this.datastore = datastore; // The version of each document that was read during this transaction.\n\n    this.readVersions = documentVersionMap();\n    this.mutations = [];\n    this.committed = false;\n    /**\r\n     * A deferred usage error that occurred previously in this transaction that\r\n     * will cause the transaction to fail once it actually commits.\r\n     */\n\n    this.lastWriteError = null;\n    /**\r\n     * Set of documents that have been written in the transaction.\r\n     *\r\n     * When there's more than one write to the same key in a transaction, any\r\n     * writes after hte first are handled differently.\r\n     */\n\n    this.writtenDocs = new Set();\n  }\n\n  Transaction.prototype.lookup = function (keys) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var docs;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.ensureCommitNotCalled();\n\n            if (this.mutations.length > 0) {\n              throw new FirestoreError(Code.INVALID_ARGUMENT, 'Firestore transactions require all reads to be executed before all writes.');\n            }\n\n            return [4\n            /*yield*/\n            , this.datastore.lookup(keys)];\n\n          case 1:\n            docs = _a.sent();\n            docs.forEach(function (doc) {\n              if (doc instanceof NoDocument || doc instanceof Document) {\n                _this.recordVersion(doc);\n              } else {\n                fail('Document in a transaction was a ' + doc.constructor.name);\n              }\n            });\n            return [2\n            /*return*/\n            , docs];\n        }\n      });\n    });\n  };\n\n  Transaction.prototype.set = function (key, data) {\n    this.write(data.toMutations(key, this.precondition(key)));\n    this.writtenDocs.add(key);\n  };\n\n  Transaction.prototype.update = function (key, data) {\n    try {\n      this.write(data.toMutations(key, this.preconditionForUpdate(key)));\n    } catch (e) {\n      this.lastWriteError = e;\n    }\n\n    this.writtenDocs.add(key);\n  };\n\n  Transaction.prototype.delete = function (key) {\n    this.write([new DeleteMutation(key, this.precondition(key))]);\n    this.writtenDocs.add(key);\n  };\n\n  Transaction.prototype.commit = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var unwritten;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.ensureCommitNotCalled();\n\n            if (this.lastWriteError) {\n              throw this.lastWriteError;\n            }\n\n            unwritten = this.readVersions; // For each mutation, note that the doc was written.\n\n            this.mutations.forEach(function (mutation) {\n              unwritten = unwritten.remove(mutation.key);\n            });\n\n            if (!unwritten.isEmpty()) {\n              throw new FirestoreError(Code.INVALID_ARGUMENT, 'Every document read in a transaction must also be written.');\n            }\n\n            return [4\n            /*yield*/\n            , this.datastore.commit(this.mutations)];\n\n          case 1:\n            _a.sent();\n\n            this.committed = true;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Transaction.prototype.recordVersion = function (doc) {\n    var docVersion;\n\n    if (doc instanceof Document) {\n      docVersion = doc.version;\n    } else if (doc instanceof NoDocument) {\n      // For deleted docs, we must use baseVersion 0 when we overwrite them.\n      docVersion = SnapshotVersion.forDeletedDoc();\n    } else {\n      throw fail('Document in a transaction was a ' + doc.constructor.name);\n    }\n\n    var existingVersion = this.readVersions.get(doc.key);\n\n    if (existingVersion !== null) {\n      if (!docVersion.isEqual(existingVersion)) {\n        // This transaction will fail no matter what.\n        throw new FirestoreError(Code.ABORTED, 'Document version changed between two reads.');\n      }\n    } else {\n      this.readVersions = this.readVersions.insert(doc.key, docVersion);\n    }\n  };\n  /**\r\n   * Returns the version of this document when it was read in this transaction,\r\n   * as a precondition, or no precondition if it was not read.\r\n   */\n\n\n  Transaction.prototype.precondition = function (key) {\n    var version = this.readVersions.get(key);\n\n    if (!this.writtenDocs.has(key) && version) {\n      return Precondition.updateTime(version);\n    } else {\n      return Precondition.NONE;\n    }\n  };\n  /**\r\n   * Returns the precondition for a document if the operation is an update.\r\n   */\n\n\n  Transaction.prototype.preconditionForUpdate = function (key) {\n    var version = this.readVersions.get(key); // The first time a document is written, we want to take into account the\n    // read time and existence\n\n    if (!this.writtenDocs.has(key) && version) {\n      if (version.isEqual(SnapshotVersion.forDeletedDoc())) {\n        // The document doesn't exist, so fail the transaction.\n        // This has to be validated locally because you can't send a\n        // precondition that a document does not exist without changing the\n        // semantics of the backend write to be an insert. This is the reverse\n        // of what we want, since we want to assert that the document doesn't\n        // exist but then send the update and have it fail. Since we can't\n        // express that to the backend, we have to validate locally.\n        // Note: this can change once we can send separate verify writes in the\n        // transaction.\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Can't update a document that doesn't exist.\");\n      } // Document exists, base precondition on document update time.\n\n\n      return Precondition.updateTime(version);\n    } else {\n      // Document was not read, so we just use the preconditions for a blind\n      // update.\n      return Precondition.exists(true);\n    }\n  };\n\n  Transaction.prototype.write = function (mutations) {\n    this.ensureCommitNotCalled();\n    this.mutations = this.mutations.concat(mutations);\n  };\n\n  Transaction.prototype.ensureCommitNotCalled = function () {\n    assert(!this.committed, 'A transaction object cannot be used after its update callback has been invoked.');\n  };\n\n  return Transaction;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Describes the online state of the Firestore client. Note that this does not\r\n * indicate whether or not the remote store is trying to connect or not. This is\r\n * primarily used by the View / EventManager code to change their behavior while\r\n * offline (e.g. get() calls shouldn't wait for data from the server and\r\n * snapshot events should set metadata.isFromCache=true).\r\n */\n\n\nvar OnlineState;\n\n(function (OnlineState) {\n  /**\r\n   * The Firestore client is in an unknown online state. This means the client\r\n   * is either not actively trying to establish a connection or it is currently\r\n   * trying to establish a connection, but it has not succeeded or failed yet.\r\n   * Higher-level components should not operate in offline mode.\r\n   */\n  OnlineState[OnlineState[\"Unknown\"] = 0] = \"Unknown\";\n  /**\r\n   * The client is connected and the connections are healthy. This state is\r\n   * reached after a successful connection and there has been at least one\r\n   * successful message received from the backends.\r\n   */\n\n  OnlineState[OnlineState[\"Online\"] = 1] = \"Online\";\n  /**\r\n   * The client is either trying to establish a connection but failing, or it\r\n   * has been explicitly marked offline via a call to disableNetwork().\r\n   * Higher-level components should operate in offline mode.\r\n   */\n\n  OnlineState[OnlineState[\"Offline\"] = 2] = \"Offline\";\n})(OnlineState || (OnlineState = {}));\n/** The source of an online state event. */\n\n\nvar OnlineStateSource;\n\n(function (OnlineStateSource) {\n  OnlineStateSource[OnlineStateSource[\"RemoteStore\"] = 0] = \"RemoteStore\";\n  OnlineStateSource[OnlineStateSource[\"SharedClientState\"] = 1] = \"SharedClientState\";\n})(OnlineStateSource || (OnlineStateSource = {}));\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_TAG$6 = 'OnlineStateTracker'; // To deal with transient failures, we allow multiple stream attempts before\n// giving up and transitioning from OnlineState.Unknown to Offline.\n// TODO(mikelehen): This used to be set to 2 as a mitigation for b/66228394.\n// @jdimond thinks that bug is sufficiently fixed so that we can set this back\n// to 1. If that works okay, we could potentially remove this logic entirely.\n\nvar MAX_WATCH_STREAM_FAILURES = 1; // To deal with stream attempts that don't succeed or fail in a timely manner,\n// we have a timeout for OnlineState to reach Online or Offline.\n// If the timeout is reached, we transition to Offline rather than waiting\n// indefinitely.\n\nvar ONLINE_STATE_TIMEOUT_MS = 10 * 1000;\n/**\r\n * A component used by the RemoteStore to track the OnlineState (that is,\r\n * whether or not the client as a whole should be considered to be online or\r\n * offline), implementing the appropriate heuristics.\r\n *\r\n * In particular, when the client is trying to connect to the backend, we\r\n * allow up to MAX_WATCH_STREAM_FAILURES within ONLINE_STATE_TIMEOUT_MS for\r\n * a connection to succeed. If we have too many failures or the timeout elapses,\r\n * then we set the OnlineState to Offline, and the client will behave as if\r\n * it is offline (get()s will return cached data, etc.).\r\n */\n\nvar OnlineStateTracker =\n/** @class */\nfunction () {\n  function OnlineStateTracker(asyncQueue, onlineStateHandler) {\n    this.asyncQueue = asyncQueue;\n    this.onlineStateHandler = onlineStateHandler;\n    /** The current OnlineState. */\n\n    this.state = OnlineState.Unknown;\n    /**\r\n     * A count of consecutive failures to open the stream. If it reaches the\r\n     * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to\r\n     * Offline.\r\n     */\n\n    this.watchStreamFailures = 0;\n    /**\r\n     * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we\r\n     * transition from OnlineState.Unknown to OnlineState.Offline without waiting\r\n     * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).\r\n     */\n\n    this.onlineStateTimer = null;\n    /**\r\n     * Whether the client should log a warning message if it fails to connect to\r\n     * the backend (initially true, cleared after a successful stream, or if we've\r\n     * logged the message already).\r\n     */\n\n    this.shouldWarnClientIsOffline = true;\n  }\n  /**\r\n   * Called by RemoteStore when a watch stream is started (including on each\r\n   * backoff attempt).\r\n   *\r\n   * If this is the first attempt, it sets the OnlineState to Unknown and starts\r\n   * the onlineStateTimer.\r\n   */\n\n\n  OnlineStateTracker.prototype.handleWatchStreamStart = function () {\n    var _this = this;\n\n    if (this.watchStreamFailures === 0) {\n      this.setAndBroadcast(OnlineState.Unknown);\n      assert(this.onlineStateTimer === null, \"onlineStateTimer shouldn't be started yet\");\n      this.onlineStateTimer = this.asyncQueue.enqueueAfterDelay(TimerId.OnlineStateTimeout, ONLINE_STATE_TIMEOUT_MS, function () {\n        _this.onlineStateTimer = null;\n        assert(_this.state === OnlineState.Unknown, 'Timer should be canceled if we transitioned to a different state.');\n\n        _this.logClientOfflineWarningIfNecessary(\"Backend didn't respond within \" + ONLINE_STATE_TIMEOUT_MS / 1000 + \" \" + \"seconds.\");\n\n        _this.setAndBroadcast(OnlineState.Offline); // NOTE: handleWatchStreamFailure() will continue to increment\n        // watchStreamFailures even though we are already marked Offline,\n        // but this is non-harmful.\n\n\n        return Promise.resolve();\n      });\n    }\n  };\n  /**\r\n   * Updates our OnlineState as appropriate after the watch stream reports a\r\n   * failure. The first failure moves us to the 'Unknown' state. We then may\r\n   * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we\r\n   * actually transition to the 'Offline' state.\r\n   */\n\n\n  OnlineStateTracker.prototype.handleWatchStreamFailure = function (error) {\n    if (this.state === OnlineState.Online) {\n      this.setAndBroadcast(OnlineState.Unknown); // To get to OnlineState.Online, set() must have been called which would\n      // have reset our heuristics.\n\n      assert(this.watchStreamFailures === 0, 'watchStreamFailures must be 0');\n      assert(this.onlineStateTimer === null, 'onlineStateTimer must be null');\n    } else {\n      this.watchStreamFailures++;\n\n      if (this.watchStreamFailures >= MAX_WATCH_STREAM_FAILURES) {\n        this.clearOnlineStateTimer();\n        this.logClientOfflineWarningIfNecessary(\"Connection failed \" + MAX_WATCH_STREAM_FAILURES + \" \" + (\"times. Most recent error: \" + error.toString()));\n        this.setAndBroadcast(OnlineState.Offline);\n      }\n    }\n  };\n  /**\r\n   * Explicitly sets the OnlineState to the specified state.\r\n   *\r\n   * Note that this resets our timers / failure counters, etc. used by our\r\n   * Offline heuristics, so must not be used in place of\r\n   * handleWatchStreamStart() and handleWatchStreamFailure().\r\n   */\n\n\n  OnlineStateTracker.prototype.set = function (newState) {\n    this.clearOnlineStateTimer();\n    this.watchStreamFailures = 0;\n\n    if (newState === OnlineState.Online) {\n      // We've connected to watch at least once. Don't warn the developer\n      // about being offline going forward.\n      this.shouldWarnClientIsOffline = false;\n    }\n\n    this.setAndBroadcast(newState);\n  };\n\n  OnlineStateTracker.prototype.setAndBroadcast = function (newState) {\n    if (newState !== this.state) {\n      this.state = newState;\n      this.onlineStateHandler(newState);\n    }\n  };\n\n  OnlineStateTracker.prototype.logClientOfflineWarningIfNecessary = function (details) {\n    var message = \"Could not reach Cloud Firestore backend. \" + details + \"\\n\" + \"This typically indicates that your device does not have a healthy \" + \"Internet connection at the moment. The client will operate in offline \" + \"mode until it is able to successfully connect to the backend.\";\n\n    if (this.shouldWarnClientIsOffline) {\n      error(message);\n      this.shouldWarnClientIsOffline = false;\n    } else {\n      debug(LOG_TAG$6, message);\n    }\n  };\n\n  OnlineStateTracker.prototype.clearOnlineStateTimer = function () {\n    if (this.onlineStateTimer !== null) {\n      this.onlineStateTimer.cancel();\n      this.onlineStateTimer = null;\n    }\n  };\n\n  return OnlineStateTracker;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Error Codes describing the different ways GRPC can fail. These are copied\r\n * directly from GRPC's sources here:\r\n *\r\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\r\n *\r\n * Important! The names of these identifiers matter because the string forms\r\n * are used for reverse lookups from the webchannel stream. Do NOT change the\r\n * names of these identifiers.\r\n */\n\n\nvar RpcCode;\n\n(function (RpcCode) {\n  RpcCode[RpcCode[\"OK\"] = 0] = \"OK\";\n  RpcCode[RpcCode[\"CANCELLED\"] = 1] = \"CANCELLED\";\n  RpcCode[RpcCode[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n  RpcCode[RpcCode[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n  RpcCode[RpcCode[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n  RpcCode[RpcCode[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n  RpcCode[RpcCode[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n  RpcCode[RpcCode[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n  RpcCode[RpcCode[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n  RpcCode[RpcCode[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n  RpcCode[RpcCode[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n  RpcCode[RpcCode[\"ABORTED\"] = 10] = \"ABORTED\";\n  RpcCode[RpcCode[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n  RpcCode[RpcCode[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n  RpcCode[RpcCode[\"INTERNAL\"] = 13] = \"INTERNAL\";\n  RpcCode[RpcCode[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n  RpcCode[RpcCode[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n})(RpcCode || (RpcCode = {}));\n/**\r\n * Determines whether an error code represents a permanent error when received\r\n * in response to a non-write operation.\r\n *\r\n * See isPermanentWriteError for classifying write errors.\r\n */\n\n\nfunction isPermanentError(code) {\n  switch (code) {\n    case Code.OK:\n      return fail('Treated status OK as error');\n\n    case Code.CANCELLED:\n    case Code.UNKNOWN:\n    case Code.DEADLINE_EXCEEDED:\n    case Code.RESOURCE_EXHAUSTED:\n    case Code.INTERNAL:\n    case Code.UNAVAILABLE: // Unauthenticated means something went wrong with our token and we need\n    // to retry with new credentials which will happen automatically.\n\n    case Code.UNAUTHENTICATED:\n      return false;\n\n    case Code.INVALID_ARGUMENT:\n    case Code.NOT_FOUND:\n    case Code.ALREADY_EXISTS:\n    case Code.PERMISSION_DENIED:\n    case Code.FAILED_PRECONDITION: // Aborted might be retried in some scenarios, but that is dependant on\n    // the context and should handled individually by the calling code.\n    // See https://cloud.google.com/apis/design/errors.\n\n    case Code.ABORTED:\n    case Code.OUT_OF_RANGE:\n    case Code.UNIMPLEMENTED:\n    case Code.DATA_LOSS:\n      return true;\n\n    default:\n      return fail('Unknown status code: ' + code);\n  }\n}\n/**\r\n * Determines whether an error code represents a permanent error when received\r\n * in response to a write operation.\r\n *\r\n * Write operations must be handled specially because as of b/119437764, ABORTED\r\n * errors on the write stream should be retried too (even though ABORTED errors\r\n * are not generally retryable).\r\n *\r\n * Note that during the initial handshake on the write stream an ABORTED error\r\n * signals that we should discard our stream token (i.e. it is permanent). This\r\n * means a handshake error should be classified with isPermanentError, above.\r\n */\n\n\nfunction isPermanentWriteError(code) {\n  return isPermanentError(code) && code !== Code.ABORTED;\n}\n/**\r\n * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.\r\n *\r\n * @returns The Code equivalent to the given status string or undefined if\r\n *     there is no match.\r\n */\n\n\nfunction mapCodeFromRpcStatus(status) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, lookup by string\n  var code = RpcCode[status];\n\n  if (code === undefined) {\n    return undefined;\n  }\n\n  return mapCodeFromRpcCode(code);\n}\n/**\r\n * Maps an error Code from GRPC status code number, like 0, 1, or 14. These\r\n * are not the same as HTTP status codes.\r\n *\r\n * @returns The Code equivalent to the given GRPC status code. Fails if there\r\n *     is no match.\r\n */\n\n\nfunction mapCodeFromRpcCode(code) {\n  if (code === undefined) {\n    // This shouldn't normally happen, but in certain error cases (like trying\n    // to send invalid proto messages) we may get an error with no GRPC code.\n    error('GRPC error has no .code');\n    return Code.UNKNOWN;\n  }\n\n  switch (code) {\n    case RpcCode.OK:\n      return Code.OK;\n\n    case RpcCode.CANCELLED:\n      return Code.CANCELLED;\n\n    case RpcCode.UNKNOWN:\n      return Code.UNKNOWN;\n\n    case RpcCode.DEADLINE_EXCEEDED:\n      return Code.DEADLINE_EXCEEDED;\n\n    case RpcCode.RESOURCE_EXHAUSTED:\n      return Code.RESOURCE_EXHAUSTED;\n\n    case RpcCode.INTERNAL:\n      return Code.INTERNAL;\n\n    case RpcCode.UNAVAILABLE:\n      return Code.UNAVAILABLE;\n\n    case RpcCode.UNAUTHENTICATED:\n      return Code.UNAUTHENTICATED;\n\n    case RpcCode.INVALID_ARGUMENT:\n      return Code.INVALID_ARGUMENT;\n\n    case RpcCode.NOT_FOUND:\n      return Code.NOT_FOUND;\n\n    case RpcCode.ALREADY_EXISTS:\n      return Code.ALREADY_EXISTS;\n\n    case RpcCode.PERMISSION_DENIED:\n      return Code.PERMISSION_DENIED;\n\n    case RpcCode.FAILED_PRECONDITION:\n      return Code.FAILED_PRECONDITION;\n\n    case RpcCode.ABORTED:\n      return Code.ABORTED;\n\n    case RpcCode.OUT_OF_RANGE:\n      return Code.OUT_OF_RANGE;\n\n    case RpcCode.UNIMPLEMENTED:\n      return Code.UNIMPLEMENTED;\n\n    case RpcCode.DATA_LOSS:\n      return Code.DATA_LOSS;\n\n    default:\n      return fail('Unknown status code: ' + code);\n  }\n}\n/**\r\n * Maps an RPC code from a Code. This is the reverse operation from\r\n * mapCodeFromRpcCode and should really only be used in tests.\r\n */\n\n\nfunction mapRpcCodeFromCode(code) {\n  if (code === undefined) {\n    return RpcCode.OK;\n  }\n\n  switch (code) {\n    case Code.OK:\n      return RpcCode.OK;\n\n    case Code.CANCELLED:\n      return RpcCode.CANCELLED;\n\n    case Code.UNKNOWN:\n      return RpcCode.UNKNOWN;\n\n    case Code.DEADLINE_EXCEEDED:\n      return RpcCode.DEADLINE_EXCEEDED;\n\n    case Code.RESOURCE_EXHAUSTED:\n      return RpcCode.RESOURCE_EXHAUSTED;\n\n    case Code.INTERNAL:\n      return RpcCode.INTERNAL;\n\n    case Code.UNAVAILABLE:\n      return RpcCode.UNAVAILABLE;\n\n    case Code.UNAUTHENTICATED:\n      return RpcCode.UNAUTHENTICATED;\n\n    case Code.INVALID_ARGUMENT:\n      return RpcCode.INVALID_ARGUMENT;\n\n    case Code.NOT_FOUND:\n      return RpcCode.NOT_FOUND;\n\n    case Code.ALREADY_EXISTS:\n      return RpcCode.ALREADY_EXISTS;\n\n    case Code.PERMISSION_DENIED:\n      return RpcCode.PERMISSION_DENIED;\n\n    case Code.FAILED_PRECONDITION:\n      return RpcCode.FAILED_PRECONDITION;\n\n    case Code.ABORTED:\n      return RpcCode.ABORTED;\n\n    case Code.OUT_OF_RANGE:\n      return RpcCode.OUT_OF_RANGE;\n\n    case Code.UNIMPLEMENTED:\n      return RpcCode.UNIMPLEMENTED;\n\n    case Code.DATA_LOSS:\n      return RpcCode.DATA_LOSS;\n\n    default:\n      return fail('Unknown status code: ' + code);\n  }\n}\n/**\r\n * Converts an HTTP response's error status to the equivalent error code.\r\n *\r\n * @param status An HTTP error response status (\"FAILED_PRECONDITION\",\r\n * \"UNKNOWN\", etc.)\r\n * @returns The equivalent Code. Non-matching responses are mapped to\r\n *     Code.UNKNOWN.\r\n */\n\n\nfunction mapCodeFromHttpResponseErrorStatus(status) {\n  var serverError = status.toLowerCase().replace('_', '-');\n  return Object.values(Code).indexOf(serverError) >= 0 ? serverError : Code.UNKNOWN;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * DocumentSet is an immutable (copy-on-write) collection that holds documents\r\n * in order specified by the provided comparator. We always add a document key\r\n * comparator on top of what is provided to guarantee document equality based on\r\n * the key.\r\n */\n\n\nvar DocumentSet =\n/** @class */\nfunction () {\n  /** The default ordering is by key if the comparator is omitted */\n  function DocumentSet(comp) {\n    // We are adding document key comparator to the end as it's the only\n    // guaranteed unique property of a document.\n    if (comp) {\n      this.comparator = function (d1, d2) {\n        return comp(d1, d2) || DocumentKey.comparator(d1.key, d2.key);\n      };\n    } else {\n      this.comparator = function (d1, d2) {\n        return DocumentKey.comparator(d1.key, d2.key);\n      };\n    }\n\n    this.keyedMap = documentMap();\n    this.sortedSet = new SortedMap(this.comparator);\n  }\n  /**\r\n   * Returns an empty copy of the existing DocumentSet, using the same\r\n   * comparator.\r\n   */\n\n\n  DocumentSet.emptySet = function (oldSet) {\n    return new DocumentSet(oldSet.comparator);\n  };\n\n  DocumentSet.prototype.has = function (key) {\n    return this.keyedMap.get(key) != null;\n  };\n\n  DocumentSet.prototype.get = function (key) {\n    return this.keyedMap.get(key);\n  };\n\n  DocumentSet.prototype.first = function () {\n    return this.sortedSet.minKey();\n  };\n\n  DocumentSet.prototype.last = function () {\n    return this.sortedSet.maxKey();\n  };\n\n  DocumentSet.prototype.isEmpty = function () {\n    return this.sortedSet.isEmpty();\n  };\n  /**\r\n   * Returns the index of the provided key in the document set, or -1 if the\r\n   * document key is not present in the set;\r\n   */\n\n\n  DocumentSet.prototype.indexOf = function (key) {\n    var doc = this.keyedMap.get(key);\n    return doc ? this.sortedSet.indexOf(doc) : -1;\n  };\n\n  Object.defineProperty(DocumentSet.prototype, \"size\", {\n    get: function get() {\n      return this.sortedSet.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** Iterates documents in order defined by \"comparator\" */\n\n  DocumentSet.prototype.forEach = function (cb) {\n    this.sortedSet.inorderTraversal(function (k, v) {\n      cb(k);\n      return false;\n    });\n  };\n  /** Inserts or updates a document with the same key */\n\n\n  DocumentSet.prototype.add = function (doc) {\n    // First remove the element if we have it.\n    var set = this.delete(doc.key);\n    return set.copy(set.keyedMap.insert(doc.key, doc), set.sortedSet.insert(doc, null));\n  };\n  /** Deletes a document with a given key */\n\n\n  DocumentSet.prototype.delete = function (key) {\n    var doc = this.get(key);\n\n    if (!doc) {\n      return this;\n    }\n\n    return this.copy(this.keyedMap.remove(key), this.sortedSet.remove(doc));\n  };\n\n  DocumentSet.prototype.isEqual = function (other) {\n    if (!(other instanceof DocumentSet)) {\n      return false;\n    }\n\n    if (this.size !== other.size) {\n      return false;\n    }\n\n    var thisIt = this.sortedSet.getIterator();\n    var otherIt = other.sortedSet.getIterator();\n\n    while (thisIt.hasNext()) {\n      var thisDoc = thisIt.getNext().key;\n      var otherDoc = otherIt.getNext().key;\n\n      if (!thisDoc.isEqual(otherDoc)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  DocumentSet.prototype.toString = function () {\n    var docStrings = [];\n    this.forEach(function (doc) {\n      docStrings.push(doc.toString());\n    });\n\n    if (docStrings.length === 0) {\n      return 'DocumentSet ()';\n    } else {\n      return 'DocumentSet (\\n  ' + docStrings.join('  \\n') + '\\n)';\n    }\n  };\n\n  DocumentSet.prototype.copy = function (keyedMap, sortedSet) {\n    var newSet = new DocumentSet();\n    newSet.comparator = this.comparator;\n    newSet.keyedMap = keyedMap;\n    newSet.sortedSet = sortedSet;\n    return newSet;\n  };\n\n  return DocumentSet;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ChangeType;\n\n(function (ChangeType) {\n  ChangeType[ChangeType[\"Added\"] = 0] = \"Added\";\n  ChangeType[ChangeType[\"Removed\"] = 1] = \"Removed\";\n  ChangeType[ChangeType[\"Modified\"] = 2] = \"Modified\";\n  ChangeType[ChangeType[\"Metadata\"] = 3] = \"Metadata\";\n})(ChangeType || (ChangeType = {}));\n\nvar SyncState;\n\n(function (SyncState) {\n  SyncState[SyncState[\"Local\"] = 0] = \"Local\";\n  SyncState[SyncState[\"Synced\"] = 1] = \"Synced\";\n})(SyncState || (SyncState = {}));\n/**\r\n * DocumentChangeSet keeps track of a set of changes to docs in a query, merging\r\n * duplicate events for the same doc.\r\n */\n\n\nvar DocumentChangeSet =\n/** @class */\nfunction () {\n  function DocumentChangeSet() {\n    this.changeMap = new SortedMap(DocumentKey.comparator);\n  }\n\n  DocumentChangeSet.prototype.track = function (change) {\n    var key = change.doc.key;\n    var oldChange = this.changeMap.get(key);\n\n    if (!oldChange) {\n      this.changeMap = this.changeMap.insert(key, change);\n      return;\n    } // Merge the new change with the existing change.\n\n\n    if (change.type !== ChangeType.Added && oldChange.type === ChangeType.Metadata) {\n      this.changeMap = this.changeMap.insert(key, change);\n    } else if (change.type === ChangeType.Metadata && oldChange.type !== ChangeType.Removed) {\n      this.changeMap = this.changeMap.insert(key, {\n        type: oldChange.type,\n        doc: change.doc\n      });\n    } else if (change.type === ChangeType.Modified && oldChange.type === ChangeType.Modified) {\n      this.changeMap = this.changeMap.insert(key, {\n        type: ChangeType.Modified,\n        doc: change.doc\n      });\n    } else if (change.type === ChangeType.Modified && oldChange.type === ChangeType.Added) {\n      this.changeMap = this.changeMap.insert(key, {\n        type: ChangeType.Added,\n        doc: change.doc\n      });\n    } else if (change.type === ChangeType.Removed && oldChange.type === ChangeType.Added) {\n      this.changeMap = this.changeMap.remove(key);\n    } else if (change.type === ChangeType.Removed && oldChange.type === ChangeType.Modified) {\n      this.changeMap = this.changeMap.insert(key, {\n        type: ChangeType.Removed,\n        doc: oldChange.doc\n      });\n    } else if (change.type === ChangeType.Added && oldChange.type === ChangeType.Removed) {\n      this.changeMap = this.changeMap.insert(key, {\n        type: ChangeType.Modified,\n        doc: change.doc\n      });\n    } else {\n      // This includes these cases, which don't make sense:\n      // Added->Added\n      // Removed->Removed\n      // Modified->Added\n      // Removed->Modified\n      // Metadata->Added\n      // Removed->Metadata\n      fail('unsupported combination of changes: ' + JSON.stringify(change) + ' after ' + JSON.stringify(oldChange));\n    }\n  };\n\n  DocumentChangeSet.prototype.getChanges = function () {\n    var changes = [];\n    this.changeMap.inorderTraversal(function (key, change) {\n      changes.push(change);\n    });\n    return changes;\n  };\n\n  return DocumentChangeSet;\n}();\n\nvar ViewSnapshot =\n/** @class */\nfunction () {\n  function ViewSnapshot(query, docs, oldDocs, docChanges, mutatedKeys, fromCache, syncStateChanged, excludesMetadataChanges) {\n    this.query = query;\n    this.docs = docs;\n    this.oldDocs = oldDocs;\n    this.docChanges = docChanges;\n    this.mutatedKeys = mutatedKeys;\n    this.fromCache = fromCache;\n    this.syncStateChanged = syncStateChanged;\n    this.excludesMetadataChanges = excludesMetadataChanges;\n  }\n  /** Returns a view snapshot as if all documents in the snapshot were added. */\n\n\n  ViewSnapshot.fromInitialDocuments = function (query, documents, mutatedKeys, fromCache) {\n    var changes = [];\n    documents.forEach(function (doc) {\n      changes.push({\n        type: ChangeType.Added,\n        doc: doc\n      });\n    });\n    return new ViewSnapshot(query, documents, DocumentSet.emptySet(documents), changes, mutatedKeys, fromCache, true, false);\n  };\n\n  Object.defineProperty(ViewSnapshot.prototype, \"hasPendingWrites\", {\n    get: function get() {\n      return !this.mutatedKeys.isEmpty();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ViewSnapshot.prototype.isEqual = function (other) {\n    if (this.fromCache !== other.fromCache || this.syncStateChanged !== other.syncStateChanged || !this.mutatedKeys.isEqual(other.mutatedKeys) || !this.query.isEqual(other.query) || !this.docs.isEqual(other.docs) || !this.oldDocs.isEqual(other.oldDocs)) {\n      return false;\n    }\n\n    var changes = this.docChanges;\n    var otherChanges = other.docChanges;\n\n    if (changes.length !== otherChanges.length) {\n      return false;\n    }\n\n    for (var i = 0; i < changes.length; i++) {\n      if (changes[i].type !== otherChanges[i].type || !changes[i].doc.isEqual(otherChanges[i].doc)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  return ViewSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An event from the RemoteStore. It is split into targetChanges (changes to the\r\n * state or the set of documents in our watched targets) and documentUpdates\r\n * (changes to the actual documents).\r\n */\n\n\nvar RemoteEvent =\n/** @class */\nfunction () {\n  function RemoteEvent(\n  /**\r\n   * The snapshot version this event brings us up to, or MIN if not set.\r\n   */\n  snapshotVersion,\n  /**\r\n   * A map from target to changes to the target. See TargetChange.\r\n   */\n  targetChanges,\n  /**\r\n   * A set of targets that is known to be inconsistent. Listens for these\r\n   * targets should be re-established without resume tokens.\r\n   */\n  targetMismatches,\n  /**\r\n   * A set of which documents have changed or been deleted, along with the\r\n   * doc's new values (if not deleted).\r\n   */\n  documentUpdates,\n  /**\r\n   * A set of which document updates are due only to limbo resolution targets.\r\n   */\n  resolvedLimboDocuments) {\n    this.snapshotVersion = snapshotVersion;\n    this.targetChanges = targetChanges;\n    this.targetMismatches = targetMismatches;\n    this.documentUpdates = documentUpdates;\n    this.resolvedLimboDocuments = resolvedLimboDocuments;\n  }\n  /**\r\n   * HACK: Views require RemoteEvents in order to determine whether the view is\r\n   * CURRENT, but secondary tabs don't receive remote events. So this method is\r\n   * used to create a synthesized RemoteEvent that can be used to apply a\r\n   * CURRENT status change to a View, for queries executed in a different tab.\r\n   */\n  // PORTING NOTE: Multi-tab only\n\n\n  RemoteEvent.createSynthesizedRemoteEventForCurrentChange = function (targetId, current) {\n    var _a;\n\n    var targetChanges = (_a = {}, _a[targetId] = TargetChange.createSynthesizedTargetChangeForCurrentChange(targetId, current), _a);\n    return new RemoteEvent(SnapshotVersion.MIN, targetChanges, targetIdSet(), maybeDocumentMap(), documentKeySet());\n  };\n\n  return RemoteEvent;\n}();\n/**\r\n * A TargetChange specifies the set of changes for a specific target as part of\r\n * a RemoteEvent. These changes track which documents are added, modified or\r\n * removed, as well as the target's resume token and whether the target is\r\n * marked CURRENT.\r\n * The actual changes *to* documents are not part of the TargetChange since\r\n * documents may be part of multiple targets.\r\n */\n\n\nvar TargetChange =\n/** @class */\nfunction () {\n  function TargetChange(\n  /**\r\n   * An opaque, server-assigned token that allows watching a query to be resumed\r\n   * after disconnecting without retransmitting all the data that matches the\r\n   * query. The resume token essentially identifies a point in time from which\r\n   * the server should resume sending results.\r\n   */\n  resumeToken,\n  /**\r\n   * The \"current\" (synced) status of this target. Note that \"current\"\r\n   * has special meaning in the RPC protocol that implies that a target is\r\n   * both up-to-date and consistent with the rest of the watch stream.\r\n   */\n  current,\n  /**\r\n   * The set of documents that were newly assigned to this target as part of\r\n   * this remote event.\r\n   */\n  addedDocuments,\n  /**\r\n   * The set of documents that were already assigned to this target but received\r\n   * an update during this remote event.\r\n   */\n  modifiedDocuments,\n  /**\r\n   * The set of documents that were removed from this target as part of this\r\n   * remote event.\r\n   */\n  removedDocuments) {\n    this.resumeToken = resumeToken;\n    this.current = current;\n    this.addedDocuments = addedDocuments;\n    this.modifiedDocuments = modifiedDocuments;\n    this.removedDocuments = removedDocuments;\n  }\n  /**\r\n   * HACK: Views require TargetChanges in order to determine whether the view is\r\n   * CURRENT, but secondary tabs don't receive remote events. So this method is\r\n   * used to create a synthesized TargetChanges that can be used to apply a\r\n   * CURRENT status change to a View, for queries executed in a different tab.\r\n   */\n  // PORTING NOTE: Multi-tab only\n\n\n  TargetChange.createSynthesizedTargetChangeForCurrentChange = function (targetId, current) {\n    return new TargetChange(emptyByteString(), current, documentKeySet(), documentKeySet(), documentKeySet());\n  };\n\n  return TargetChange;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a changed document and a list of target ids to which this change\r\n * applies.\r\n *\r\n * If document has been deleted NoDocument will be provided.\r\n */\n\n\nvar DocumentWatchChange =\n/** @class */\nfunction () {\n  function DocumentWatchChange(\n  /** The new document applies to all of these targets. */\n  updatedTargetIds,\n  /** The new document is removed from all of these targets. */\n  removedTargetIds,\n  /** The key of the document for this change. */\n  key,\n  /**\r\n   * The new document or NoDocument if it was deleted. Is null if the\r\n   * document went out of view without the server sending a new document.\r\n   */\n  newDoc) {\n    this.updatedTargetIds = updatedTargetIds;\n    this.removedTargetIds = removedTargetIds;\n    this.key = key;\n    this.newDoc = newDoc;\n  }\n\n  return DocumentWatchChange;\n}();\n\nvar ExistenceFilterChange =\n/** @class */\nfunction () {\n  function ExistenceFilterChange(targetId, existenceFilter) {\n    this.targetId = targetId;\n    this.existenceFilter = existenceFilter;\n  }\n\n  return ExistenceFilterChange;\n}();\n\nvar WatchTargetChangeState;\n\n(function (WatchTargetChangeState) {\n  WatchTargetChangeState[WatchTargetChangeState[\"NoChange\"] = 0] = \"NoChange\";\n  WatchTargetChangeState[WatchTargetChangeState[\"Added\"] = 1] = \"Added\";\n  WatchTargetChangeState[WatchTargetChangeState[\"Removed\"] = 2] = \"Removed\";\n  WatchTargetChangeState[WatchTargetChangeState[\"Current\"] = 3] = \"Current\";\n  WatchTargetChangeState[WatchTargetChangeState[\"Reset\"] = 4] = \"Reset\";\n})(WatchTargetChangeState || (WatchTargetChangeState = {}));\n\nvar WatchTargetChange =\n/** @class */\nfunction () {\n  function WatchTargetChange(\n  /** What kind of change occurred to the watch target. */\n  state,\n  /** The target IDs that were added/removed/set. */\n  targetIds,\n  /**\r\n   * An opaque, server-assigned token that allows watching a query to be\r\n   * resumed after disconnecting without retransmitting all the data that\r\n   * matches the query. The resume token essentially identifies a point in\r\n   * time from which the server should resume sending results.\r\n   */\n  resumeToken,\n  /** An RPC error indicating why the watch failed. */\n  cause) {\n    if (resumeToken === void 0) {\n      resumeToken = emptyByteString();\n    }\n\n    if (cause === void 0) {\n      cause = null;\n    }\n\n    this.state = state;\n    this.targetIds = targetIds;\n    this.resumeToken = resumeToken;\n    this.cause = cause;\n  }\n\n  return WatchTargetChange;\n}();\n/** Tracks the internal state of a Watch target. */\n\n\nvar TargetState =\n/** @class */\nfunction () {\n  function TargetState() {\n    /**\r\n     * The number of pending responses (adds or removes) that we are waiting on.\r\n     * We only consider targets active that have no pending responses.\r\n     */\n    this.pendingResponses = 0;\n    /**\r\n     * Keeps track of the document changes since the last raised snapshot.\r\n     *\r\n     * These changes are continuously updated as we receive document updates and\r\n     * always reflect the current set of changes against the last issued snapshot.\r\n     */\n\n    this.documentChanges = snapshotChangesMap();\n    /** See public getters for explanations of these fields. */\n\n    this._resumeToken = emptyByteString();\n    this._current = false;\n    /**\r\n     * Whether this target state should be included in the next snapshot. We\r\n     * initialize to true so that newly-added targets are included in the next\r\n     * RemoteEvent.\r\n     */\n\n    this._hasPendingChanges = true;\n  }\n\n  Object.defineProperty(TargetState.prototype, \"current\", {\n    /**\r\n     * Whether this target has been marked 'current'.\r\n     *\r\n     * 'Current' has special meaning in the RPC protocol: It implies that the\r\n     * Watch backend has sent us all changes up to the point at which the target\r\n     * was added and that the target is consistent with the rest of the watch\r\n     * stream.\r\n     */\n    get: function get() {\n      return this._current;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TargetState.prototype, \"resumeToken\", {\n    /** The last resume token sent to us for this target. */\n    get: function get() {\n      return this._resumeToken;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TargetState.prototype, \"isPending\", {\n    /** Whether this target has pending target adds or target removes. */\n    get: function get() {\n      return this.pendingResponses !== 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TargetState.prototype, \"hasPendingChanges\", {\n    /** Whether we have modified any state that should trigger a snapshot. */\n    get: function get() {\n      return this._hasPendingChanges;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Applies the resume token to the TargetChange, but only when it has a new\r\n   * value. Empty resumeTokens are discarded.\r\n   */\n\n  TargetState.prototype.updateResumeToken = function (resumeToken) {\n    if (resumeToken.length > 0) {\n      this._hasPendingChanges = true;\n      this._resumeToken = resumeToken;\n    }\n  };\n  /**\r\n   * Creates a target change from the current set of changes.\r\n   *\r\n   * To reset the document changes after raising this snapshot, call\r\n   * `clearPendingChanges()`.\r\n   */\n\n\n  TargetState.prototype.toTargetChange = function () {\n    var addedDocuments = documentKeySet();\n    var modifiedDocuments = documentKeySet();\n    var removedDocuments = documentKeySet();\n    this.documentChanges.forEach(function (key, changeType) {\n      switch (changeType) {\n        case ChangeType.Added:\n          addedDocuments = addedDocuments.add(key);\n          break;\n\n        case ChangeType.Modified:\n          modifiedDocuments = modifiedDocuments.add(key);\n          break;\n\n        case ChangeType.Removed:\n          removedDocuments = removedDocuments.add(key);\n          break;\n\n        default:\n          fail('Encountered invalid change type: ' + changeType);\n      }\n    });\n    return new TargetChange(this._resumeToken, this._current, addedDocuments, modifiedDocuments, removedDocuments);\n  };\n  /**\r\n   * Resets the document changes and sets `hasPendingChanges` to false.\r\n   */\n\n\n  TargetState.prototype.clearPendingChanges = function () {\n    this._hasPendingChanges = false;\n    this.documentChanges = snapshotChangesMap();\n  };\n\n  TargetState.prototype.addDocumentChange = function (key, changeType) {\n    this._hasPendingChanges = true;\n    this.documentChanges = this.documentChanges.insert(key, changeType);\n  };\n\n  TargetState.prototype.removeDocumentChange = function (key) {\n    this._hasPendingChanges = true;\n    this.documentChanges = this.documentChanges.remove(key);\n  };\n\n  TargetState.prototype.recordPendingTargetRequest = function () {\n    this.pendingResponses += 1;\n  };\n\n  TargetState.prototype.recordTargetResponse = function () {\n    this.pendingResponses -= 1;\n  };\n\n  TargetState.prototype.markCurrent = function () {\n    this._hasPendingChanges = true;\n    this._current = true;\n  };\n\n  return TargetState;\n}();\n\nvar LOG_TAG$7 = 'WatchChangeAggregator';\n/**\r\n * A helper class to accumulate watch changes into a RemoteEvent.\r\n */\n\nvar WatchChangeAggregator =\n/** @class */\nfunction () {\n  function WatchChangeAggregator(metadataProvider) {\n    this.metadataProvider = metadataProvider;\n    /** The internal state of all tracked targets. */\n\n    this.targetStates = {};\n    /** Keeps track of the documents to update since the last raised snapshot. */\n\n    this.pendingDocumentUpdates = maybeDocumentMap();\n    /** A mapping of document keys to their set of target IDs. */\n\n    this.pendingDocumentTargetMapping = documentTargetMap();\n    /**\r\n     * A list of targets with existence filter mismatches. These targets are\r\n     * known to be inconsistent and their listens needs to be re-established by\r\n     * RemoteStore.\r\n     */\n\n    this.pendingTargetResets = new SortedSet(primitiveComparator);\n  }\n  /**\r\n   * Processes and adds the DocumentWatchChange to the current set of changes.\r\n   */\n\n\n  WatchChangeAggregator.prototype.handleDocumentChange = function (docChange) {\n    for (var _i = 0, _a = docChange.updatedTargetIds; _i < _a.length; _i++) {\n      var targetId = _a[_i];\n\n      if (docChange.newDoc instanceof Document) {\n        this.addDocumentToTarget(targetId, docChange.newDoc);\n      } else if (docChange.newDoc instanceof NoDocument) {\n        this.removeDocumentFromTarget(targetId, docChange.key, docChange.newDoc);\n      }\n    }\n\n    for (var _b = 0, _c = docChange.removedTargetIds; _b < _c.length; _b++) {\n      var targetId = _c[_b];\n      this.removeDocumentFromTarget(targetId, docChange.key, docChange.newDoc);\n    }\n  };\n  /** Processes and adds the WatchTargetChange to the current set of changes. */\n\n\n  WatchChangeAggregator.prototype.handleTargetChange = function (targetChange) {\n    var _this = this;\n\n    this.forEachTarget(targetChange, function (targetId) {\n      var targetState = _this.ensureTargetState(targetId);\n\n      switch (targetChange.state) {\n        case WatchTargetChangeState.NoChange:\n          if (_this.isActiveTarget(targetId)) {\n            targetState.updateResumeToken(targetChange.resumeToken);\n          }\n\n          break;\n\n        case WatchTargetChangeState.Added:\n          // We need to decrement the number of pending acks needed from watch\n          // for this targetId.\n          targetState.recordTargetResponse();\n\n          if (!targetState.isPending) {\n            // We have a freshly added target, so we need to reset any state\n            // that we had previously. This can happen e.g. when remove and add\n            // back a target for existence filter mismatches.\n            targetState.clearPendingChanges();\n          }\n\n          targetState.updateResumeToken(targetChange.resumeToken);\n          break;\n\n        case WatchTargetChangeState.Removed:\n          // We need to keep track of removed targets to we can post-filter and\n          // remove any target changes.\n          // We need to decrement the number of pending acks needed from watch\n          // for this targetId.\n          targetState.recordTargetResponse();\n\n          if (!targetState.isPending) {\n            _this.removeTarget(targetId);\n          }\n\n          assert(!targetChange.cause, 'WatchChangeAggregator does not handle errored targets');\n          break;\n\n        case WatchTargetChangeState.Current:\n          if (_this.isActiveTarget(targetId)) {\n            targetState.markCurrent();\n            targetState.updateResumeToken(targetChange.resumeToken);\n          }\n\n          break;\n\n        case WatchTargetChangeState.Reset:\n          if (_this.isActiveTarget(targetId)) {\n            // Reset the target and synthesizes removes for all existing\n            // documents. The backend will re-add any documents that still\n            // match the target before it sends the next global snapshot.\n            _this.resetTarget(targetId);\n\n            targetState.updateResumeToken(targetChange.resumeToken);\n          }\n\n          break;\n\n        default:\n          fail('Unknown target watch change state: ' + targetChange.state);\n      }\n    });\n  };\n  /**\r\n   * Iterates over all targetIds that the watch change applies to: either the\r\n   * targetIds explicitly listed in the change or the targetIds of all currently\r\n   * active targets.\r\n   */\n\n\n  WatchChangeAggregator.prototype.forEachTarget = function (targetChange, fn) {\n    if (targetChange.targetIds.length > 0) {\n      targetChange.targetIds.forEach(fn);\n    } else {\n      forEachNumber(this.targetStates, fn);\n    }\n  };\n  /**\r\n   * Handles existence filters and synthesizes deletes for filter mismatches.\r\n   * Targets that are invalidated by filter mismatches are added to\r\n   * `pendingTargetResets`.\r\n   */\n\n\n  WatchChangeAggregator.prototype.handleExistenceFilter = function (watchChange) {\n    var targetId = watchChange.targetId;\n    var expectedCount = watchChange.existenceFilter.count;\n    var queryData = this.queryDataForActiveTarget(targetId);\n\n    if (queryData) {\n      var query = queryData.query;\n\n      if (query.isDocumentQuery()) {\n        if (expectedCount === 0) {\n          // The existence filter told us the document does not exist. We deduce\n          // that this document does not exist and apply a deleted document to\n          // our updates. Without applying this deleted document there might be\n          // another query that will raise this document as part of a snapshot\n          // until it is resolved, essentially exposing inconsistency between\n          // queries.\n          var key = new DocumentKey(query.path);\n          this.removeDocumentFromTarget(targetId, key, new NoDocument(key, SnapshotVersion.forDeletedDoc()));\n        } else {\n          assert(expectedCount === 1, 'Single document existence filter with count: ' + expectedCount);\n        }\n      } else {\n        var currentSize = this.getCurrentDocumentCountForTarget(targetId);\n\n        if (currentSize !== expectedCount) {\n          // Existence filter mismatch: We reset the mapping and raise a new\n          // snapshot with `isFromCache:true`.\n          this.resetTarget(targetId);\n          this.pendingTargetResets = this.pendingTargetResets.add(targetId);\n        }\n      }\n    }\n  };\n  /**\r\n   * Converts the currently accumulated state into a remote event at the\r\n   * provided snapshot version. Resets the accumulated changes before returning.\r\n   */\n\n\n  WatchChangeAggregator.prototype.createRemoteEvent = function (snapshotVersion) {\n    var _this = this;\n\n    var targetChanges = {};\n    forEachNumber(this.targetStates, function (targetId, targetState) {\n      var queryData = _this.queryDataForActiveTarget(targetId);\n\n      if (queryData) {\n        if (targetState.current && queryData.query.isDocumentQuery()) {\n          // Document queries for document that don't exist can produce an empty\n          // result set. To update our local cache, we synthesize a document\n          // delete if we have not previously received the document. This\n          // resolves the limbo state of the document, removing it from\n          // limboDocumentRefs.\n          //\n          // TODO(dimond): Ideally we would have an explicit lookup query\n          // instead resulting in an explicit delete message and we could\n          // remove this special logic.\n          var key = new DocumentKey(queryData.query.path);\n\n          if (_this.pendingDocumentUpdates.get(key) === null && !_this.targetContainsDocument(targetId, key)) {\n            _this.removeDocumentFromTarget(targetId, key, new NoDocument(key, snapshotVersion));\n          }\n        }\n\n        if (targetState.hasPendingChanges) {\n          targetChanges[targetId] = targetState.toTargetChange();\n          targetState.clearPendingChanges();\n        }\n      }\n    });\n    var resolvedLimboDocuments = documentKeySet(); // We extract the set of limbo-only document updates as the GC logic\n    // special-cases documents that do not appear in the query cache.\n    //\n    // TODO(gsoltis): Expand on this comment once GC is available in the JS\n    // client.\n\n    this.pendingDocumentTargetMapping.forEach(function (key, targets) {\n      var isOnlyLimboTarget = true;\n      targets.forEachWhile(function (targetId) {\n        var queryData = _this.queryDataForActiveTarget(targetId);\n\n        if (queryData && queryData.purpose !== QueryPurpose.LimboResolution) {\n          isOnlyLimboTarget = false;\n          return false;\n        }\n\n        return true;\n      });\n\n      if (isOnlyLimboTarget) {\n        resolvedLimboDocuments = resolvedLimboDocuments.add(key);\n      }\n    });\n    var remoteEvent = new RemoteEvent(snapshotVersion, targetChanges, this.pendingTargetResets, this.pendingDocumentUpdates, resolvedLimboDocuments);\n    this.pendingDocumentUpdates = maybeDocumentMap();\n    this.pendingDocumentTargetMapping = documentTargetMap();\n    this.pendingTargetResets = new SortedSet(primitiveComparator);\n    return remoteEvent;\n  };\n  /**\r\n   * Adds the provided document to the internal list of document updates and\r\n   * its document key to the given target's mapping.\r\n   */\n  // Visible for testing.\n\n\n  WatchChangeAggregator.prototype.addDocumentToTarget = function (targetId, document) {\n    if (!this.isActiveTarget(targetId)) {\n      return;\n    }\n\n    var changeType = this.targetContainsDocument(targetId, document.key) ? ChangeType.Modified : ChangeType.Added;\n    var targetState = this.ensureTargetState(targetId);\n    targetState.addDocumentChange(document.key, changeType);\n    this.pendingDocumentUpdates = this.pendingDocumentUpdates.insert(document.key, document);\n    this.pendingDocumentTargetMapping = this.pendingDocumentTargetMapping.insert(document.key, this.ensureDocumentTargetMapping(document.key).add(targetId));\n  };\n  /**\r\n   * Removes the provided document from the target mapping. If the\r\n   * document no longer matches the target, but the document's state is still\r\n   * known (e.g. we know that the document was deleted or we received the change\r\n   * that caused the filter mismatch), the new document can be provided\r\n   * to update the remote document cache.\r\n   */\n  // Visible for testing.\n\n\n  WatchChangeAggregator.prototype.removeDocumentFromTarget = function (targetId, key, updatedDocument) {\n    if (!this.isActiveTarget(targetId)) {\n      return;\n    }\n\n    var targetState = this.ensureTargetState(targetId);\n\n    if (this.targetContainsDocument(targetId, key)) {\n      targetState.addDocumentChange(key, ChangeType.Removed);\n    } else {\n      // The document may have entered and left the target before we raised a\n      // snapshot, so we can just ignore the change.\n      targetState.removeDocumentChange(key);\n    }\n\n    this.pendingDocumentTargetMapping = this.pendingDocumentTargetMapping.insert(key, this.ensureDocumentTargetMapping(key).delete(targetId));\n\n    if (updatedDocument) {\n      this.pendingDocumentUpdates = this.pendingDocumentUpdates.insert(key, updatedDocument);\n    }\n  };\n\n  WatchChangeAggregator.prototype.removeTarget = function (targetId) {\n    delete this.targetStates[targetId];\n  };\n  /**\r\n   * Returns the current count of documents in the target. This includes both\r\n   * the number of documents that the LocalStore considers to be part of the\r\n   * target as well as any accumulated changes.\r\n   */\n\n\n  WatchChangeAggregator.prototype.getCurrentDocumentCountForTarget = function (targetId) {\n    var targetState = this.ensureTargetState(targetId);\n    var targetChange = targetState.toTargetChange();\n    return this.metadataProvider.getRemoteKeysForTarget(targetId).size + targetChange.addedDocuments.size - targetChange.removedDocuments.size;\n  };\n  /**\r\n   * Increment the number of acks needed from watch before we can consider the\r\n   * server to be 'in-sync' with the client's active targets.\r\n   */\n\n\n  WatchChangeAggregator.prototype.recordPendingTargetRequest = function (targetId) {\n    // For each request we get we need to record we need a response for it.\n    var targetState = this.ensureTargetState(targetId);\n    targetState.recordPendingTargetRequest();\n  };\n\n  WatchChangeAggregator.prototype.ensureTargetState = function (targetId) {\n    if (!this.targetStates[targetId]) {\n      this.targetStates[targetId] = new TargetState();\n    }\n\n    return this.targetStates[targetId];\n  };\n\n  WatchChangeAggregator.prototype.ensureDocumentTargetMapping = function (key) {\n    var targetMapping = this.pendingDocumentTargetMapping.get(key);\n\n    if (!targetMapping) {\n      targetMapping = new SortedSet(primitiveComparator);\n      this.pendingDocumentTargetMapping = this.pendingDocumentTargetMapping.insert(key, targetMapping);\n    }\n\n    return targetMapping;\n  };\n  /**\r\n   * Verifies that the user is still interested in this target (by calling\r\n   * `getQueryDataForTarget()`) and that we are not waiting for pending ADDs\r\n   * from watch.\r\n   */\n\n\n  WatchChangeAggregator.prototype.isActiveTarget = function (targetId) {\n    var targetActive = this.queryDataForActiveTarget(targetId) !== null;\n\n    if (!targetActive) {\n      debug(LOG_TAG$7, 'Detected inactive target', targetId);\n    }\n\n    return targetActive;\n  };\n  /**\r\n   * Returns the QueryData for an active target (i.e. a target that the user\r\n   * is still interested in that has no outstanding target change requests).\r\n   */\n\n\n  WatchChangeAggregator.prototype.queryDataForActiveTarget = function (targetId) {\n    var targetState = this.targetStates[targetId];\n    return targetState && targetState.isPending ? null : this.metadataProvider.getQueryDataForTarget(targetId);\n  };\n  /**\r\n   * Resets the state of a Watch target to its initial state (e.g. sets\r\n   * 'current' to false, clears the resume token and removes its target mapping\r\n   * from all documents).\r\n   */\n\n\n  WatchChangeAggregator.prototype.resetTarget = function (targetId) {\n    var _this = this;\n\n    assert(!this.targetStates[targetId].isPending, 'Should only reset active targets');\n    this.targetStates[targetId] = new TargetState(); // Trigger removal for any documents currently mapped to this target.\n    // These removals will be part of the initial snapshot if Watch does not\n    // resend these documents.\n\n    var existingKeys = this.metadataProvider.getRemoteKeysForTarget(targetId);\n    existingKeys.forEach(function (key) {\n      _this.removeDocumentFromTarget(targetId, key,\n      /*updatedDocument=*/\n      null);\n    });\n  };\n  /**\r\n   * Returns whether the LocalStore considers the document to be part of the\r\n   * specified target.\r\n   */\n\n\n  WatchChangeAggregator.prototype.targetContainsDocument = function (targetId, key) {\n    var existingKeys = this.metadataProvider.getRemoteKeysForTarget(targetId);\n    return existingKeys.has(key);\n  };\n\n  return WatchChangeAggregator;\n}();\n\nfunction documentTargetMap() {\n  return new SortedMap(DocumentKey.comparator);\n}\n\nfunction snapshotChangesMap() {\n  return new SortedMap(DocumentKey.comparator);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_TAG$8 = 'RemoteStore'; // TODO(b/35853402): Negotiate this with the stream.\n\nvar MAX_PENDING_WRITES = 10;\n/**\r\n * RemoteStore - An interface to remotely stored data, basically providing a\r\n * wrapper around the Datastore that is more reliable for the rest of the\r\n * system.\r\n *\r\n * RemoteStore is responsible for maintaining the connection to the server.\r\n * - maintaining a list of active listens.\r\n * - reconnecting when the connection is dropped.\r\n * - resuming all the active listens on reconnect.\r\n *\r\n * RemoteStore handles all incoming events from the Datastore.\r\n * - listening to the watch stream and repackaging the events as RemoteEvents\r\n * - notifying SyncEngine of any changes to the active listens.\r\n *\r\n * RemoteStore takes writes from other components and handles them reliably.\r\n * - pulling pending mutations from LocalStore and sending them to Datastore.\r\n * - retrying mutations that failed because of network problems.\r\n * - acking mutations to the SyncEngine once they are accepted or rejected.\r\n */\n\nvar RemoteStore =\n/** @class */\nfunction () {\n  function RemoteStore(\n  /**\r\n   * The local store, used to fill the write pipeline with outbound mutations.\r\n   */\n  localStore,\n  /** The client-side proxy for interacting with the backend. */\n  datastore, asyncQueue, onlineStateHandler, connectivityMonitor) {\n    var _this = this;\n\n    this.localStore = localStore;\n    this.datastore = datastore;\n    /**\r\n     * A list of up to MAX_PENDING_WRITES writes that we have fetched from the\r\n     * LocalStore via fillWritePipeline() and have or will send to the write\r\n     * stream.\r\n     *\r\n     * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or\r\n     * restart the write stream. When the stream is established the writes in the\r\n     * pipeline will be sent in order.\r\n     *\r\n     * Writes remain in writePipeline until they are acknowledged by the backend\r\n     * and thus will automatically be re-sent if the stream is interrupted /\r\n     * restarted before they're acknowledged.\r\n     *\r\n     * Write responses from the backend are linked to their originating request\r\n     * purely based on order, and so we can just shift() writes from the front of\r\n     * the writePipeline as we receive responses.\r\n     */\n\n    this.writePipeline = [];\n    /**\r\n     * A mapping of watched targets that the client cares about tracking and the\r\n     * user has explicitly called a 'listen' for this target.\r\n     *\r\n     * These targets may or may not have been sent to or acknowledged by the\r\n     * server. On re-establishing the listen stream, these targets should be sent\r\n     * to the server. The targets removed with unlistens are removed eagerly\r\n     * without waiting for confirmation from the listen stream.\r\n     */\n\n    this.listenTargets = {};\n    this.watchChangeAggregator = null;\n    /**\r\n     * Set to true by enableNetwork() and false by disableNetwork() and indicates\r\n     * the user-preferred network state.\r\n     */\n\n    this.networkEnabled = false;\n    this.isPrimary = false;\n    this.connectivityMonitor = connectivityMonitor;\n    this.connectivityMonitor.addCallback(function (status) {\n      asyncQueue.enqueueAndForget(function () {\n        return tslib_1.__awaiter(_this, void 0, void 0, function () {\n          return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!this.canUseNetwork()) return [3\n                /*break*/\n                , 2];\n                debug(LOG_TAG$8, 'Restarting streams for network reachability change.');\n                return [4\n                /*yield*/\n                , this.restartNetwork()];\n\n              case 1:\n                _a.sent();\n\n                _a.label = 2;\n\n              case 2:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      });\n    });\n    this.onlineStateTracker = new OnlineStateTracker(asyncQueue, onlineStateHandler); // Create streams (but note they're not started yet).\n\n    this.watchStream = this.datastore.newPersistentWatchStream({\n      onOpen: this.onWatchStreamOpen.bind(this),\n      onClose: this.onWatchStreamClose.bind(this),\n      onWatchChange: this.onWatchStreamChange.bind(this)\n    });\n    this.writeStream = this.datastore.newPersistentWriteStream({\n      onOpen: this.onWriteStreamOpen.bind(this),\n      onClose: this.onWriteStreamClose.bind(this),\n      onHandshakeComplete: this.onWriteHandshakeComplete.bind(this),\n      onMutationResult: this.onMutationResult.bind(this)\n    });\n  }\n  /**\r\n   * Starts up the remote store, creating streams, restoring state from\r\n   * LocalStore, etc.\r\n   */\n\n\n  RemoteStore.prototype.start = function () {\n    return this.enableNetwork();\n  };\n  /** Re-enables the network. Idempotent. */\n\n\n  RemoteStore.prototype.enableNetwork = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return tslib_1.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            this.networkEnabled = true;\n            if (!this.canUseNetwork()) return [3\n            /*break*/\n            , 3];\n            _a = this.writeStream;\n            return [4\n            /*yield*/\n            , this.localStore.getLastStreamToken()];\n\n          case 1:\n            _a.lastStreamToken = _b.sent();\n\n            if (this.shouldStartWatchStream()) {\n              this.startWatchStream();\n            } else {\n              this.onlineStateTracker.set(OnlineState.Unknown);\n            } // This will start the write stream if necessary.\n\n\n            return [4\n            /*yield*/\n            , this.fillWritePipeline()];\n\n          case 2:\n            // This will start the write stream if necessary.\n            _b.sent();\n\n            _b.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Temporarily disables the network. The network can be re-enabled using\r\n   * enableNetwork().\r\n   */\n\n\n  RemoteStore.prototype.disableNetwork = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.networkEnabled = false;\n            return [4\n            /*yield*/\n            , this.disableNetworkInternal()];\n\n          case 1:\n            _a.sent(); // Set the OnlineState to Offline so get()s return from cache, etc.\n\n\n            this.onlineStateTracker.set(OnlineState.Offline);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  RemoteStore.prototype.disableNetworkInternal = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.writeStream.stop()];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.watchStream.stop()];\n\n          case 2:\n            _a.sent();\n\n            if (this.writePipeline.length > 0) {\n              debug(LOG_TAG$8, \"Stopping write stream with \" + this.writePipeline.length + \" pending writes\");\n              this.writePipeline = [];\n            }\n\n            this.cleanUpWatchStreamState();\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  RemoteStore.prototype.shutdown = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            debug(LOG_TAG$8, 'RemoteStore shutting down.');\n            this.networkEnabled = false;\n            return [4\n            /*yield*/\n            , this.disableNetworkInternal()];\n\n          case 1:\n            _a.sent();\n\n            this.connectivityMonitor.shutdown(); // Set the OnlineState to Unknown (rather than Offline) to avoid potentially\n            // triggering spurious listener events with cached data, etc.\n\n            this.onlineStateTracker.set(OnlineState.Unknown);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /** Starts new listen for the given query. Uses resume token if provided */\n\n\n  RemoteStore.prototype.listen = function (queryData) {\n    assert(!contains(this.listenTargets, queryData.targetId), 'listen called with duplicate targetId!'); // Mark this as something the client is currently listening for.\n\n    this.listenTargets[queryData.targetId] = queryData;\n\n    if (this.shouldStartWatchStream()) {\n      // The listen will be sent in onWatchStreamOpen\n      this.startWatchStream();\n    } else if (this.watchStream.isOpen()) {\n      this.sendWatchRequest(queryData);\n    }\n  };\n  /** Removes the listen from server */\n\n\n  RemoteStore.prototype.unlisten = function (targetId) {\n    assert(contains(this.listenTargets, targetId), 'unlisten called without assigned target ID!');\n    delete this.listenTargets[targetId];\n\n    if (this.watchStream.isOpen()) {\n      this.sendUnwatchRequest(targetId);\n    }\n\n    if (isEmpty(this.listenTargets)) {\n      if (this.watchStream.isOpen()) {\n        this.watchStream.markIdle();\n      } else if (this.canUseNetwork()) {\n        // Revert to OnlineState.Unknown if the watch stream is not open and we\n        // have no listeners, since without any listens to send we cannot\n        // confirm if the stream is healthy and upgrade to OnlineState.Online.\n        this.onlineStateTracker.set(OnlineState.Unknown);\n      }\n    }\n  };\n  /** {@link TargetMetadataProvider.getQueryDataForTarget} */\n\n\n  RemoteStore.prototype.getQueryDataForTarget = function (targetId) {\n    return this.listenTargets[targetId] || null;\n  };\n  /** {@link TargetMetadataProvider.getRemoteKeysForTarget} */\n\n\n  RemoteStore.prototype.getRemoteKeysForTarget = function (targetId) {\n    return this.syncEngine.getRemoteKeysForTarget(targetId);\n  };\n  /**\r\n   * We need to increment the the expected number of pending responses we're due\r\n   * from watch so we wait for the ack to process any messages from this target.\r\n   */\n\n\n  RemoteStore.prototype.sendWatchRequest = function (queryData) {\n    this.watchChangeAggregator.recordPendingTargetRequest(queryData.targetId);\n    this.watchStream.watch(queryData);\n  };\n  /**\r\n   * We need to increment the expected number of pending responses we're due\r\n   * from watch so we wait for the removal on the server before we process any\r\n   * messages from this target.\r\n   */\n\n\n  RemoteStore.prototype.sendUnwatchRequest = function (targetId) {\n    this.watchChangeAggregator.recordPendingTargetRequest(targetId);\n    this.watchStream.unwatch(targetId);\n  };\n\n  RemoteStore.prototype.startWatchStream = function () {\n    assert(this.shouldStartWatchStream(), 'startWatchStream() called when shouldStartWatchStream() is false.');\n    this.watchChangeAggregator = new WatchChangeAggregator(this);\n    this.watchStream.start();\n    this.onlineStateTracker.handleWatchStreamStart();\n  };\n  /**\r\n   * Returns whether the watch stream should be started because it's necessary\r\n   * and has not yet been started.\r\n   */\n\n\n  RemoteStore.prototype.shouldStartWatchStream = function () {\n    return this.canUseNetwork() && !this.watchStream.isStarted() && !isEmpty(this.listenTargets);\n  };\n\n  RemoteStore.prototype.canUseNetwork = function () {\n    return this.isPrimary && this.networkEnabled;\n  };\n\n  RemoteStore.prototype.cleanUpWatchStreamState = function () {\n    this.watchChangeAggregator = null;\n  };\n\n  RemoteStore.prototype.onWatchStreamOpen = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        forEachNumber(this.listenTargets, function (targetId, queryData) {\n          _this.sendWatchRequest(queryData);\n        });\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  RemoteStore.prototype.onWatchStreamClose = function (error) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        if (error === undefined) {\n          // Graceful stop (due to stop() or idle timeout). Make sure that's\n          // desirable.\n          assert(!this.shouldStartWatchStream(), 'Watch stream was stopped gracefully while still needed.');\n        }\n\n        this.cleanUpWatchStreamState(); // If we still need the watch stream, retry the connection.\n\n        if (this.shouldStartWatchStream()) {\n          this.onlineStateTracker.handleWatchStreamFailure(error);\n          this.startWatchStream();\n        } else {\n          // No need to restart watch stream because there are no active targets.\n          // The online state is set to unknown because there is no active attempt\n          // at establishing a connection\n          this.onlineStateTracker.set(OnlineState.Unknown);\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  RemoteStore.prototype.onWatchStreamChange = function (watchChange, snapshotVersion) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var lastRemoteSnapshotVersion;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Mark the client as online since we got a message from the server\n            this.onlineStateTracker.set(OnlineState.Online);\n\n            if (watchChange instanceof WatchTargetChange && watchChange.state === WatchTargetChangeState.Removed && watchChange.cause) {\n              // There was an error on a target, don't wait for a consistent snapshot\n              // to raise events\n              return [2\n              /*return*/\n              , this.handleTargetError(watchChange)];\n            }\n\n            if (watchChange instanceof DocumentWatchChange) {\n              this.watchChangeAggregator.handleDocumentChange(watchChange);\n            } else if (watchChange instanceof ExistenceFilterChange) {\n              this.watchChangeAggregator.handleExistenceFilter(watchChange);\n            } else {\n              assert(watchChange instanceof WatchTargetChange, 'Expected watchChange to be an instance of WatchTargetChange');\n              this.watchChangeAggregator.handleTargetChange(watchChange);\n            }\n\n            if (!!snapshotVersion.isEqual(SnapshotVersion.MIN)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this.localStore.getLastRemoteSnapshotVersion()];\n\n          case 1:\n            lastRemoteSnapshotVersion = _a.sent();\n            if (!(snapshotVersion.compareTo(lastRemoteSnapshotVersion) >= 0)) return [3\n            /*break*/\n            , 3]; // We have received a target change with a global snapshot if the snapshot\n            // version is not equal to SnapshotVersion.MIN.\n\n            return [4\n            /*yield*/\n            , this.raiseWatchSnapshot(snapshotVersion)];\n\n          case 2:\n            // We have received a target change with a global snapshot if the snapshot\n            // version is not equal to SnapshotVersion.MIN.\n            _a.sent();\n\n            _a.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Takes a batch of changes from the Datastore, repackages them as a\r\n   * RemoteEvent, and passes that on to the listener, which is typically the\r\n   * SyncEngine.\r\n   */\n\n\n  RemoteStore.prototype.raiseWatchSnapshot = function (snapshotVersion) {\n    var _this = this;\n\n    assert(!snapshotVersion.isEqual(SnapshotVersion.MIN), \"Can't raise event for unknown SnapshotVersion\");\n    var remoteEvent = this.watchChangeAggregator.createRemoteEvent(snapshotVersion); // Update in-memory resume tokens. LocalStore will update the\n    // persistent view of these when applying the completed RemoteEvent.\n\n    forEachNumber(remoteEvent.targetChanges, function (targetId, change) {\n      if (change.resumeToken.length > 0) {\n        var queryData = _this.listenTargets[targetId]; // A watched target might have been removed already.\n\n        if (queryData) {\n          _this.listenTargets[targetId] = queryData.withResumeToken(change.resumeToken, snapshotVersion);\n        }\n      }\n    }); // Re-establish listens for the targets that have been invalidated by\n    // existence filter mismatches.\n\n    remoteEvent.targetMismatches.forEach(function (targetId) {\n      var queryData = _this.listenTargets[targetId];\n\n      if (!queryData) {\n        // A watched target might have been removed already.\n        return;\n      } // Clear the resume token for the query, since we're in a known mismatch\n      // state.\n\n\n      _this.listenTargets[targetId] = queryData.withResumeToken(emptyByteString(), queryData.snapshotVersion); // Cause a hard reset by unwatching and rewatching immediately, but\n      // deliberately don't send a resume token so that we get a full update.\n\n      _this.sendUnwatchRequest(targetId); // Mark the query we send as being on behalf of an existence filter\n      // mismatch, but don't actually retain that in listenTargets. This ensures\n      // that we flag the first re-listen this way without impacting future\n      // listens of this target (that might happen e.g. on reconnect).\n\n\n      var requestQueryData = new QueryData(queryData.query, targetId, QueryPurpose.ExistenceFilterMismatch, queryData.sequenceNumber);\n\n      _this.sendWatchRequest(requestQueryData);\n    }); // Finally raise remote event\n\n    return this.syncEngine.applyRemoteEvent(remoteEvent);\n  };\n  /** Handles an error on a target */\n\n\n  RemoteStore.prototype.handleTargetError = function (watchChange) {\n    var _this = this;\n\n    assert(!!watchChange.cause, 'Handling target error without a cause');\n    var error = watchChange.cause;\n    var promiseChain = Promise.resolve();\n    watchChange.targetIds.forEach(function (targetId) {\n      promiseChain = promiseChain.then(function () {\n        return tslib_1.__awaiter(_this, void 0, void 0, function () {\n          return tslib_1.__generator(this, function (_a) {\n            // A watched target might have been removed already.\n            if (contains(this.listenTargets, targetId)) {\n              delete this.listenTargets[targetId];\n              this.watchChangeAggregator.removeTarget(targetId);\n              return [2\n              /*return*/\n              , this.syncEngine.rejectListen(targetId, error)];\n            }\n\n            return [2\n            /*return*/\n            ];\n          });\n        });\n      });\n    });\n    return promiseChain;\n  };\n  /**\r\n   * Attempts to fill our write pipeline with writes from the LocalStore.\r\n   *\r\n   * Called internally to bootstrap or refill the write pipeline and by\r\n   * SyncEngine whenever there are new mutations to process.\r\n   *\r\n   * Starts the write stream if necessary.\r\n   */\n\n\n  RemoteStore.prototype.fillWritePipeline = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var lastBatchIdRetrieved, batch;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.canAddToWritePipeline()) return [3\n            /*break*/\n            , 4];\n            lastBatchIdRetrieved = this.writePipeline.length > 0 ? this.writePipeline[this.writePipeline.length - 1].batchId : BATCHID_UNKNOWN;\n            return [4\n            /*yield*/\n            , this.localStore.nextMutationBatch(lastBatchIdRetrieved)];\n\n          case 1:\n            batch = _a.sent();\n            if (!(batch === null)) return [3\n            /*break*/\n            , 2];\n\n            if (this.writePipeline.length === 0) {\n              this.writeStream.markIdle();\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 2:\n            this.addToWritePipeline(batch);\n            return [4\n            /*yield*/\n            , this.fillWritePipeline()];\n\n          case 3:\n            _a.sent();\n\n            _a.label = 4;\n\n          case 4:\n            if (this.shouldStartWriteStream()) {\n              this.startWriteStream();\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns true if we can add to the write pipeline (i.e. the network is\r\n   * enabled and the write pipeline is not full).\r\n   */\n\n\n  RemoteStore.prototype.canAddToWritePipeline = function () {\n    return this.canUseNetwork() && this.writePipeline.length < MAX_PENDING_WRITES;\n  }; // For testing\n\n\n  RemoteStore.prototype.outstandingWrites = function () {\n    return this.writePipeline.length;\n  };\n  /**\r\n   * Queues additional writes to be sent to the write stream, sending them\r\n   * immediately if the write stream is established.\r\n   */\n\n\n  RemoteStore.prototype.addToWritePipeline = function (batch) {\n    assert(this.canAddToWritePipeline(), 'addToWritePipeline called when pipeline is full');\n    this.writePipeline.push(batch);\n\n    if (this.writeStream.isOpen() && this.writeStream.handshakeComplete) {\n      this.writeStream.writeMutations(batch.mutations);\n    }\n  };\n\n  RemoteStore.prototype.shouldStartWriteStream = function () {\n    return this.canUseNetwork() && !this.writeStream.isStarted() && this.writePipeline.length > 0;\n  };\n\n  RemoteStore.prototype.startWriteStream = function () {\n    assert(this.shouldStartWriteStream(), 'startWriteStream() called when shouldStartWriteStream() is false.');\n    this.writeStream.start();\n  };\n\n  RemoteStore.prototype.onWriteStreamOpen = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        this.writeStream.writeHandshake();\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  RemoteStore.prototype.onWriteHandshakeComplete = function () {\n    var _this = this; // Record the stream token.\n\n\n    return this.localStore.setLastStreamToken(this.writeStream.lastStreamToken).then(function () {\n      // Send the write pipeline now that the stream is established.\n      for (var _i = 0, _a = _this.writePipeline; _i < _a.length; _i++) {\n        var batch = _a[_i];\n\n        _this.writeStream.writeMutations(batch.mutations);\n      }\n    }).catch(ignoreIfPrimaryLeaseLoss);\n  };\n\n  RemoteStore.prototype.onMutationResult = function (commitVersion, results) {\n    var _this = this; // This is a response to a write containing mutations and should be\n    // correlated to the first write in our write pipeline.\n\n\n    assert(this.writePipeline.length > 0, 'Got result for empty write pipeline');\n    var batch = this.writePipeline.shift();\n    var success = MutationBatchResult.from(batch, commitVersion, results, this.writeStream.lastStreamToken);\n    return this.syncEngine.applySuccessfulWrite(success).then(function () {\n      // It's possible that with the completion of this mutation another\n      // slot has freed up.\n      return _this.fillWritePipeline();\n    });\n  };\n\n  RemoteStore.prototype.onWriteStreamClose = function (error) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var errorHandling;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        if (error === undefined) {\n          // Graceful stop (due to stop() or idle timeout). Make sure that's\n          // desirable.\n          assert(!this.shouldStartWriteStream(), 'Write stream was stopped gracefully while still needed.');\n        } // If the write stream closed due to an error, invoke the error callbacks if\n        // there are pending writes.\n\n\n        if (error && this.writePipeline.length > 0) {\n          errorHandling = void 0;\n\n          if (this.writeStream.handshakeComplete) {\n            // This error affects the actual write.\n            errorHandling = this.handleWriteError(error);\n          } else {\n            // If there was an error before the handshake has finished, it's\n            // possible that the server is unable to process the stream token\n            // we're sending. (Perhaps it's too old?)\n            errorHandling = this.handleHandshakeError(error);\n          }\n\n          return [2\n          /*return*/\n          , errorHandling.then(function () {\n            // The write stream might have been started by refilling the write\n            // pipeline for failed writes\n            if (_this.shouldStartWriteStream()) {\n              _this.startWriteStream();\n            }\n          })];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  RemoteStore.prototype.handleHandshakeError = function (error) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        // Reset the token if it's a permanent error, signaling the write stream is\n        // no longer valid. Note that the handshake does not count as a write: see\n        // comments on isPermanentWriteError for details.\n        if (isPermanentError(error.code)) {\n          debug(LOG_TAG$8, 'RemoteStore error before completed handshake; resetting stream token: ', this.writeStream.lastStreamToken);\n          this.writeStream.lastStreamToken = emptyByteString();\n          return [2\n          /*return*/\n          , this.localStore.setLastStreamToken(emptyByteString()).catch(ignoreIfPrimaryLeaseLoss)];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  RemoteStore.prototype.handleWriteError = function (error) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var batch;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        // Only handle permanent errors here. If it's transient, just let the retry\n        // logic kick in.\n        if (isPermanentWriteError(error.code)) {\n          batch = this.writePipeline.shift(); // In this case it's also unlikely that the server itself is melting\n          // down -- this was just a bad request so inhibit backoff on the next\n          // restart.\n\n          this.writeStream.inhibitBackoff();\n          return [2\n          /*return*/\n          , this.syncEngine.rejectFailedWrite(batch.batchId, error).then(function () {\n            // It's possible that with the completion of this mutation\n            // another slot has freed up.\n            return _this.fillWritePipeline();\n          })];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  RemoteStore.prototype.createTransaction = function () {\n    return new Transaction(this.datastore);\n  };\n\n  RemoteStore.prototype.restartNetwork = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.networkEnabled = false;\n            return [4\n            /*yield*/\n            , this.disableNetworkInternal()];\n\n          case 1:\n            _a.sent();\n\n            this.onlineStateTracker.set(OnlineState.Unknown);\n            return [4\n            /*yield*/\n            , this.enableNetwork()];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  RemoteStore.prototype.handleCredentialChange = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.canUseNetwork()) return [3\n            /*break*/\n            , 2]; // Tear down and re-create our network streams. This will ensure we get a fresh auth token\n            // for the new user and re-fill the write pipeline with new mutations from the LocalStore\n            // (since mutations are per-user).\n\n            debug(LOG_TAG$8, 'RemoteStore restarting streams for new credential');\n            return [4\n            /*yield*/\n            , this.restartNetwork()];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Toggles the network state when the client gains or loses its primary lease.\r\n   */\n\n\n  RemoteStore.prototype.applyPrimaryState = function (isPrimary) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.isPrimary = isPrimary;\n            if (!(isPrimary && this.networkEnabled)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.enableNetwork()];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 2:\n            if (!!isPrimary) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this.disableNetworkInternal()];\n\n          case 3:\n            _a.sent();\n\n            this.onlineStateTracker.set(OnlineState.Unknown);\n            _a.label = 4;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return RemoteStore;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Immutable class representing a geo point as latitude-longitude pair.\r\n * This class is directly exposed in the public API, including its constructor.\r\n */\n\n\nvar GeoPoint =\n/** @class */\nfunction () {\n  function GeoPoint(latitude, longitude) {\n    validateExactNumberOfArgs('GeoPoint', arguments, 2);\n    validateArgType('GeoPoint', 'number', 1, latitude);\n    validateArgType('GeoPoint', 'number', 2, longitude);\n\n    if (!isFinite(latitude) || latitude < -90 || latitude > 90) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'Latitude must be a number between -90 and 90, but was: ' + latitude);\n    }\n\n    if (!isFinite(longitude) || longitude < -180 || longitude > 180) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'Longitude must be a number between -180 and 180, but was: ' + longitude);\n    }\n\n    this._lat = latitude;\n    this._long = longitude;\n  }\n\n  Object.defineProperty(GeoPoint.prototype, \"latitude\", {\n    /**\r\n     * Returns the latitude of this geo point, a number between -90 and 90.\r\n     */\n    get: function get() {\n      return this._lat;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GeoPoint.prototype, \"longitude\", {\n    /**\r\n     * Returns the longitude of this geo point, a number between -180 and 180.\r\n     */\n    get: function get() {\n      return this._long;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  GeoPoint.prototype.isEqual = function (other) {\n    return this._lat === other._lat && this._long === other._long;\n  };\n  /**\r\n   * Actually private to JS consumers of our API, so this function is prefixed\r\n   * with an underscore.\r\n   */\n\n\n  GeoPoint.prototype._compareTo = function (other) {\n    return primitiveComparator(this._lat, other._lat) || primitiveComparator(this._long, other._long);\n  };\n\n  return GeoPoint;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  /**\r\n   * Initializes a Query with a path and optional additional query constraints.\r\n   * Path must currently be empty if this is a collection group query.\r\n   */\n  function Query(path, collectionGroup, explicitOrderBy, filters, limit, startAt, endAt) {\n    if (collectionGroup === void 0) {\n      collectionGroup = null;\n    }\n\n    if (explicitOrderBy === void 0) {\n      explicitOrderBy = [];\n    }\n\n    if (filters === void 0) {\n      filters = [];\n    }\n\n    if (limit === void 0) {\n      limit = null;\n    }\n\n    if (startAt === void 0) {\n      startAt = null;\n    }\n\n    if (endAt === void 0) {\n      endAt = null;\n    }\n\n    this.path = path;\n    this.collectionGroup = collectionGroup;\n    this.explicitOrderBy = explicitOrderBy;\n    this.filters = filters;\n    this.limit = limit;\n    this.startAt = startAt;\n    this.endAt = endAt;\n    this.memoizedCanonicalId = null;\n    this.memoizedOrderBy = null;\n\n    if (this.startAt) {\n      this.assertValidBound(this.startAt);\n    }\n\n    if (this.endAt) {\n      this.assertValidBound(this.endAt);\n    }\n  }\n\n  Query.atPath = function (path) {\n    return new Query(path);\n  };\n\n  Object.defineProperty(Query.prototype, \"orderBy\", {\n    get: function get() {\n      if (this.memoizedOrderBy === null) {\n        var inequalityField = this.getInequalityFilterField();\n        var firstOrderByField = this.getFirstOrderByField();\n\n        if (inequalityField !== null && firstOrderByField === null) {\n          // In order to implicitly add key ordering, we must also add the\n          // inequality filter field for it to be a valid query.\n          // Note that the default inequality field and key ordering is ascending.\n          if (inequalityField.isKeyField()) {\n            this.memoizedOrderBy = [KEY_ORDERING_ASC];\n          } else {\n            this.memoizedOrderBy = [new OrderBy(inequalityField), KEY_ORDERING_ASC];\n          }\n        } else {\n          assert(inequalityField === null || firstOrderByField !== null && inequalityField.isEqual(firstOrderByField), 'First orderBy should match inequality field.');\n          this.memoizedOrderBy = [];\n          var foundKeyOrdering = false;\n\n          for (var _i = 0, _a = this.explicitOrderBy; _i < _a.length; _i++) {\n            var orderBy = _a[_i];\n            this.memoizedOrderBy.push(orderBy);\n\n            if (orderBy.field.isKeyField()) {\n              foundKeyOrdering = true;\n            }\n          }\n\n          if (!foundKeyOrdering) {\n            // The order of the implicit key ordering always matches the last\n            // explicit order by\n            var lastDirection = this.explicitOrderBy.length > 0 ? this.explicitOrderBy[this.explicitOrderBy.length - 1].dir : Direction.ASCENDING;\n            this.memoizedOrderBy.push(lastDirection === Direction.ASCENDING ? KEY_ORDERING_ASC : KEY_ORDERING_DESC);\n          }\n        }\n      }\n\n      return this.memoizedOrderBy;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Query.prototype.addFilter = function (filter) {\n    assert(this.getInequalityFilterField() == null || !(filter instanceof FieldFilter) || !filter.isInequality() || filter.field.isEqual(this.getInequalityFilterField()), 'Query must only have one inequality field.');\n    assert(!this.isDocumentQuery(), 'No filtering allowed for document query');\n    var newFilters = this.filters.concat([filter]);\n    return new Query(this.path, this.collectionGroup, this.explicitOrderBy.slice(), newFilters, this.limit, this.startAt, this.endAt);\n  };\n\n  Query.prototype.addOrderBy = function (orderBy) {\n    assert(!this.startAt && !this.endAt, 'Bounds must be set after orderBy'); // TODO(dimond): validate that orderBy does not list the same key twice.\n\n    var newOrderBy = this.explicitOrderBy.concat([orderBy]);\n    return new Query(this.path, this.collectionGroup, newOrderBy, this.filters.slice(), this.limit, this.startAt, this.endAt);\n  };\n\n  Query.prototype.withLimit = function (limit) {\n    return new Query(this.path, this.collectionGroup, this.explicitOrderBy.slice(), this.filters.slice(), limit, this.startAt, this.endAt);\n  };\n\n  Query.prototype.withStartAt = function (bound) {\n    return new Query(this.path, this.collectionGroup, this.explicitOrderBy.slice(), this.filters.slice(), this.limit, bound, this.endAt);\n  };\n\n  Query.prototype.withEndAt = function (bound) {\n    return new Query(this.path, this.collectionGroup, this.explicitOrderBy.slice(), this.filters.slice(), this.limit, this.startAt, bound);\n  };\n  /**\r\n   * Helper to convert a collection group query into a collection query at a\r\n   * specific path. This is used when executing collection group queries, since\r\n   * we have to split the query into a set of collection queries at multiple\r\n   * paths.\r\n   */\n\n\n  Query.prototype.asCollectionQueryAtPath = function (path) {\n    return new Query(path,\n    /*collectionGroup=*/\n    null, this.explicitOrderBy.slice(), this.filters.slice(), this.limit, this.startAt, this.endAt);\n  }; // TODO(b/29183165): This is used to get a unique string from a query to, for\n  // example, use as a dictionary key, but the implementation is subject to\n  // collisions. Make it collision-free.\n\n\n  Query.prototype.canonicalId = function () {\n    if (this.memoizedCanonicalId === null) {\n      var canonicalId = this.path.canonicalString();\n\n      if (this.isCollectionGroupQuery()) {\n        canonicalId += '|cg:' + this.collectionGroup;\n      }\n\n      canonicalId += '|f:';\n\n      for (var _i = 0, _a = this.filters; _i < _a.length; _i++) {\n        var filter = _a[_i];\n        canonicalId += filter.canonicalId();\n        canonicalId += ',';\n      }\n\n      canonicalId += '|ob:'; // TODO(dimond): make this collision resistant\n\n      for (var _b = 0, _c = this.orderBy; _b < _c.length; _b++) {\n        var orderBy = _c[_b];\n        canonicalId += orderBy.canonicalId();\n        canonicalId += ',';\n      }\n\n      if (!isNullOrUndefined(this.limit)) {\n        canonicalId += '|l:';\n        canonicalId += this.limit;\n      }\n\n      if (this.startAt) {\n        canonicalId += '|lb:';\n        canonicalId += this.startAt.canonicalId();\n      }\n\n      if (this.endAt) {\n        canonicalId += '|ub:';\n        canonicalId += this.endAt.canonicalId();\n      }\n\n      this.memoizedCanonicalId = canonicalId;\n    }\n\n    return this.memoizedCanonicalId;\n  };\n\n  Query.prototype.toString = function () {\n    var str = 'Query(' + this.path.canonicalString();\n\n    if (this.isCollectionGroupQuery()) {\n      str += ' collectionGroup=' + this.collectionGroup;\n    }\n\n    if (this.filters.length > 0) {\n      str += \", filters: [\" + this.filters.join(', ') + \"]\";\n    }\n\n    if (!isNullOrUndefined(this.limit)) {\n      str += ', limit: ' + this.limit;\n    }\n\n    if (this.explicitOrderBy.length > 0) {\n      str += \", orderBy: [\" + this.explicitOrderBy.join(', ') + \"]\";\n    }\n\n    if (this.startAt) {\n      str += ', startAt: ' + this.startAt.canonicalId();\n    }\n\n    if (this.endAt) {\n      str += ', endAt: ' + this.endAt.canonicalId();\n    }\n\n    return str + ')';\n  };\n\n  Query.prototype.isEqual = function (other) {\n    if (this.limit !== other.limit) {\n      return false;\n    }\n\n    if (this.orderBy.length !== other.orderBy.length) {\n      return false;\n    }\n\n    for (var i = 0; i < this.orderBy.length; i++) {\n      if (!this.orderBy[i].isEqual(other.orderBy[i])) {\n        return false;\n      }\n    }\n\n    if (this.filters.length !== other.filters.length) {\n      return false;\n    }\n\n    for (var i = 0; i < this.filters.length; i++) {\n      if (!this.filters[i].isEqual(other.filters[i])) {\n        return false;\n      }\n    }\n\n    if (this.collectionGroup !== other.collectionGroup) {\n      return false;\n    }\n\n    if (!this.path.isEqual(other.path)) {\n      return false;\n    }\n\n    if (this.startAt !== null ? !this.startAt.isEqual(other.startAt) : other.startAt !== null) {\n      return false;\n    }\n\n    return this.endAt !== null ? this.endAt.isEqual(other.endAt) : other.endAt === null;\n  };\n\n  Query.prototype.docComparator = function (d1, d2) {\n    var comparedOnKeyField = false;\n\n    for (var _i = 0, _a = this.orderBy; _i < _a.length; _i++) {\n      var orderBy = _a[_i];\n      var comp = orderBy.compare(d1, d2);\n\n      if (comp !== 0) {\n        return comp;\n      }\n\n      comparedOnKeyField = comparedOnKeyField || orderBy.field.isKeyField();\n    } // Assert that we actually compared by key\n\n\n    assert(comparedOnKeyField, \"orderBy used that doesn't compare on key field\");\n    return 0;\n  };\n\n  Query.prototype.matches = function (doc) {\n    return this.matchesPathAndCollectionGroup(doc) && this.matchesOrderBy(doc) && this.matchesFilters(doc) && this.matchesBounds(doc);\n  };\n\n  Query.prototype.hasLimit = function () {\n    return !isNullOrUndefined(this.limit);\n  };\n\n  Query.prototype.getFirstOrderByField = function () {\n    return this.explicitOrderBy.length > 0 ? this.explicitOrderBy[0].field : null;\n  };\n\n  Query.prototype.getInequalityFilterField = function () {\n    for (var _i = 0, _a = this.filters; _i < _a.length; _i++) {\n      var filter = _a[_i];\n\n      if (filter instanceof FieldFilter && filter.isInequality()) {\n        return filter.field;\n      }\n    }\n\n    return null;\n  }; // Checks if any of the provided Operators are included in the query and\n  // returns the first one that is, or null if none are.\n\n\n  Query.prototype.findFilterOperator = function (operators) {\n    for (var _i = 0, _a = this.filters; _i < _a.length; _i++) {\n      var filter = _a[_i];\n\n      if (filter instanceof FieldFilter) {\n        if (operators.indexOf(filter.op) >= 0) {\n          return filter.op;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  Query.prototype.isDocumentQuery = function () {\n    return DocumentKey.isDocumentKey(this.path) && this.collectionGroup === null && this.filters.length === 0;\n  };\n\n  Query.prototype.isCollectionGroupQuery = function () {\n    return this.collectionGroup !== null;\n  };\n\n  Query.prototype.matchesPathAndCollectionGroup = function (doc) {\n    var docPath = doc.key.path;\n\n    if (this.collectionGroup !== null) {\n      // NOTE: this.path is currently always empty since we don't expose Collection\n      // Group queries rooted at a document path yet.\n      return doc.key.hasCollectionId(this.collectionGroup) && this.path.isPrefixOf(docPath);\n    } else if (DocumentKey.isDocumentKey(this.path)) {\n      // exact match for document queries\n      return this.path.isEqual(docPath);\n    } else {\n      // shallow ancestor queries by default\n      return this.path.isImmediateParentOf(docPath);\n    }\n  };\n  /**\r\n   * A document must have a value for every ordering clause in order to show up\r\n   * in the results.\r\n   */\n\n\n  Query.prototype.matchesOrderBy = function (doc) {\n    for (var _i = 0, _a = this.explicitOrderBy; _i < _a.length; _i++) {\n      var orderBy = _a[_i]; // order by key always matches\n\n      if (!orderBy.field.isKeyField() && doc.field(orderBy.field) === null) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  Query.prototype.matchesFilters = function (doc) {\n    for (var _i = 0, _a = this.filters; _i < _a.length; _i++) {\n      var filter = _a[_i];\n\n      if (!filter.matches(doc)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   * Makes sure a document is within the bounds, if provided.\r\n   */\n\n\n  Query.prototype.matchesBounds = function (doc) {\n    if (this.startAt && !this.startAt.sortsBeforeDocument(this.orderBy, doc)) {\n      return false;\n    }\n\n    if (this.endAt && this.endAt.sortsBeforeDocument(this.orderBy, doc)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  Query.prototype.assertValidBound = function (bound) {\n    assert(bound.position.length <= this.orderBy.length, 'Bound is longer than orderBy');\n  };\n\n  return Query;\n}();\n\nvar Filter =\n/** @class */\nfunction () {\n  function Filter() {}\n\n  return Filter;\n}();\n\nvar Operator =\n/** @class */\nfunction () {\n  function Operator(name) {\n    this.name = name;\n  }\n\n  Operator.fromString = function (op) {\n    switch (op) {\n      case '<':\n        return Operator.LESS_THAN;\n\n      case '<=':\n        return Operator.LESS_THAN_OR_EQUAL;\n\n      case '==':\n        return Operator.EQUAL;\n\n      case '>=':\n        return Operator.GREATER_THAN_OR_EQUAL;\n\n      case '>':\n        return Operator.GREATER_THAN;\n\n      case 'array-contains':\n        return Operator.ARRAY_CONTAINS;\n\n      case 'in':\n        return Operator.IN;\n\n      case 'array-contains-any':\n        return Operator.ARRAY_CONTAINS_ANY;\n\n      default:\n        return fail('Unknown FieldFilter operator: ' + op);\n    }\n  };\n\n  Operator.prototype.toString = function () {\n    return this.name;\n  };\n\n  Operator.prototype.isEqual = function (other) {\n    return this.name === other.name;\n  };\n\n  Operator.LESS_THAN = new Operator('<');\n  Operator.LESS_THAN_OR_EQUAL = new Operator('<=');\n  Operator.EQUAL = new Operator('==');\n  Operator.GREATER_THAN = new Operator('>');\n  Operator.GREATER_THAN_OR_EQUAL = new Operator('>=');\n  Operator.ARRAY_CONTAINS = new Operator('array-contains');\n  Operator.IN = new Operator('in');\n  Operator.ARRAY_CONTAINS_ANY = new Operator('array-contains-any');\n  return Operator;\n}();\n\nvar FieldFilter =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(FieldFilter, _super);\n\n  function FieldFilter(field, op, value) {\n    var _this = _super.call(this) || this;\n\n    _this.field = field;\n    _this.op = op;\n    _this.value = value;\n    return _this;\n  }\n  /**\r\n   * Creates a filter based on the provided arguments.\r\n   */\n\n\n  FieldFilter.create = function (field, op, value) {\n    if (field.isKeyField()) {\n      if (op === Operator.IN) {\n        assert(value instanceof ArrayValue, 'Comparing on key with IN, but filter value not an ArrayValue');\n        assert(value.internalValue.every(function (elem) {\n          return elem instanceof RefValue;\n        }), 'Comparing on key with IN, but an array value was not a RefValue');\n        return new KeyFieldInFilter(field, value);\n      } else {\n        assert(value instanceof RefValue, 'Comparing on key, but filter value not a RefValue');\n        assert(op !== Operator.ARRAY_CONTAINS && op !== Operator.ARRAY_CONTAINS_ANY, \"'\" + op.toString() + \"' queries don't make sense on document keys.\");\n        return new KeyFieldFilter(field, op, value);\n      }\n    } else if (value.isEqual(NullValue.INSTANCE)) {\n      if (op !== Operator.EQUAL) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. Null supports only equality comparisons.');\n      }\n\n      return new FieldFilter(field, op, value);\n    } else if (value.isEqual(DoubleValue.NAN)) {\n      if (op !== Operator.EQUAL) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. NaN supports only equality comparisons.');\n      }\n\n      return new FieldFilter(field, op, value);\n    } else if (op === Operator.ARRAY_CONTAINS) {\n      return new ArrayContainsFilter(field, value);\n    } else if (op === Operator.IN) {\n      assert(value instanceof ArrayValue, 'IN filter has invalid value: ' + value.toString());\n      return new InFilter(field, value);\n    } else if (op === Operator.ARRAY_CONTAINS_ANY) {\n      assert(value instanceof ArrayValue, 'ARRAY_CONTAINS_ANY filter has invalid value: ' + value.toString());\n      return new ArrayContainsAnyFilter(field, value);\n    } else {\n      return new FieldFilter(field, op, value);\n    }\n  };\n\n  FieldFilter.prototype.matches = function (doc) {\n    var other = doc.field(this.field); // Only compare types with matching backend order (such as double and int).\n\n    return other !== null && this.value.typeOrder === other.typeOrder && this.matchesComparison(other.compareTo(this.value));\n  };\n\n  FieldFilter.prototype.matchesComparison = function (comparison) {\n    switch (this.op) {\n      case Operator.LESS_THAN:\n        return comparison < 0;\n\n      case Operator.LESS_THAN_OR_EQUAL:\n        return comparison <= 0;\n\n      case Operator.EQUAL:\n        return comparison === 0;\n\n      case Operator.GREATER_THAN:\n        return comparison > 0;\n\n      case Operator.GREATER_THAN_OR_EQUAL:\n        return comparison >= 0;\n\n      default:\n        return fail('Unknown FieldFilter operator: ' + this.op);\n    }\n  };\n\n  FieldFilter.prototype.isInequality = function () {\n    return [Operator.LESS_THAN, Operator.LESS_THAN_OR_EQUAL, Operator.GREATER_THAN, Operator.GREATER_THAN_OR_EQUAL].indexOf(this.op) >= 0;\n  };\n\n  FieldFilter.prototype.canonicalId = function () {\n    // TODO(b/29183165): Technically, this won't be unique if two values have\n    // the same description, such as the int 3 and the string \"3\". So we should\n    // add the types in here somehow, too.\n    return this.field.canonicalString() + this.op.toString() + this.value.toString();\n  };\n\n  FieldFilter.prototype.isEqual = function (other) {\n    if (other instanceof FieldFilter) {\n      return this.op.isEqual(other.op) && this.field.isEqual(other.field) && this.value.isEqual(other.value);\n    } else {\n      return false;\n    }\n  };\n\n  FieldFilter.prototype.toString = function () {\n    return this.field.canonicalString() + \" \" + this.op + \" \" + this.value.value();\n  };\n\n  return FieldFilter;\n}(Filter);\n/** Filter that matches on key fields (i.e. '__name__'). */\n\n\nvar KeyFieldFilter =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(KeyFieldFilter, _super);\n\n  function KeyFieldFilter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  KeyFieldFilter.prototype.matches = function (doc) {\n    var refValue = this.value;\n    var comparison = DocumentKey.comparator(doc.key, refValue.key);\n    return this.matchesComparison(comparison);\n  };\n\n  return KeyFieldFilter;\n}(FieldFilter);\n/** Filter that matches on key fields within an array. */\n\n\nvar KeyFieldInFilter =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(KeyFieldInFilter, _super);\n\n  function KeyFieldInFilter(field, value) {\n    var _this = _super.call(this, field, Operator.IN, value) || this;\n\n    _this.value = value;\n    return _this;\n  }\n\n  KeyFieldInFilter.prototype.matches = function (doc) {\n    var arrayValue = this.value;\n    return arrayValue.internalValue.some(function (refValue) {\n      return doc.key.isEqual(refValue.key);\n    });\n  };\n\n  return KeyFieldInFilter;\n}(FieldFilter);\n/** A Filter that implements the array-contains operator. */\n\n\nvar ArrayContainsFilter =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ArrayContainsFilter, _super);\n\n  function ArrayContainsFilter(field, value) {\n    return _super.call(this, field, Operator.ARRAY_CONTAINS, value) || this;\n  }\n\n  ArrayContainsFilter.prototype.matches = function (doc) {\n    var other = doc.field(this.field);\n    return other instanceof ArrayValue && other.contains(this.value);\n  };\n\n  return ArrayContainsFilter;\n}(FieldFilter);\n/** A Filter that implements the IN operator. */\n\n\nvar InFilter =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(InFilter, _super);\n\n  function InFilter(field, value) {\n    var _this = _super.call(this, field, Operator.IN, value) || this;\n\n    _this.value = value;\n    return _this;\n  }\n\n  InFilter.prototype.matches = function (doc) {\n    var arrayValue = this.value;\n    var other = doc.field(this.field);\n    return other !== null && arrayValue.contains(other);\n  };\n\n  return InFilter;\n}(FieldFilter);\n/** A Filter that implements the array-contains-any operator. */\n\n\nvar ArrayContainsAnyFilter =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ArrayContainsAnyFilter, _super);\n\n  function ArrayContainsAnyFilter(field, value) {\n    var _this = _super.call(this, field, Operator.ARRAY_CONTAINS_ANY, value) || this;\n\n    _this.value = value;\n    return _this;\n  }\n\n  ArrayContainsAnyFilter.prototype.matches = function (doc) {\n    var _this = this;\n\n    var other = doc.field(this.field);\n    return other instanceof ArrayValue && other.internalValue.some(function (lhsElem) {\n      return _this.value.contains(lhsElem);\n    });\n  };\n\n  return ArrayContainsAnyFilter;\n}(FieldFilter);\n/**\r\n * The direction of sorting in an order by.\r\n */\n\n\nvar Direction =\n/** @class */\nfunction () {\n  function Direction(name) {\n    this.name = name;\n  }\n\n  Direction.prototype.toString = function () {\n    return this.name;\n  };\n\n  Direction.ASCENDING = new Direction('asc');\n  Direction.DESCENDING = new Direction('desc');\n  return Direction;\n}();\n/**\r\n * Represents a bound of a query.\r\n *\r\n * The bound is specified with the given components representing a position and\r\n * whether it's just before or just after the position (relative to whatever the\r\n * query order is).\r\n *\r\n * The position represents a logical index position for a query. It's a prefix\r\n * of values for the (potentially implicit) order by clauses of a query.\r\n *\r\n * Bound provides a function to determine whether a document comes before or\r\n * after a bound. This is influenced by whether the position is just before or\r\n * just after the provided values.\r\n */\n\n\nvar Bound =\n/** @class */\nfunction () {\n  function Bound(position, before) {\n    this.position = position;\n    this.before = before;\n  }\n\n  Bound.prototype.canonicalId = function () {\n    // TODO(b/29183165): Make this collision robust.\n    var canonicalId = this.before ? 'b:' : 'a:';\n\n    for (var _i = 0, _a = this.position; _i < _a.length; _i++) {\n      var component = _a[_i];\n      canonicalId += component.toString();\n    }\n\n    return canonicalId;\n  };\n  /**\r\n   * Returns true if a document sorts before a bound using the provided sort\r\n   * order.\r\n   */\n\n\n  Bound.prototype.sortsBeforeDocument = function (orderBy, doc) {\n    assert(this.position.length <= orderBy.length, \"Bound has more components than query's orderBy\");\n    var comparison = 0;\n\n    for (var i = 0; i < this.position.length; i++) {\n      var orderByComponent = orderBy[i];\n      var component = this.position[i];\n\n      if (orderByComponent.field.isKeyField()) {\n        assert(component instanceof RefValue, 'Bound has a non-key value where the key path is being used.');\n        comparison = DocumentKey.comparator(component.key, doc.key);\n      } else {\n        var docValue = doc.field(orderByComponent.field);\n        assert(docValue !== null, 'Field should exist since document matched the orderBy already.');\n        comparison = component.compareTo(docValue);\n      }\n\n      if (orderByComponent.dir === Direction.DESCENDING) {\n        comparison = comparison * -1;\n      }\n\n      if (comparison !== 0) {\n        break;\n      }\n    }\n\n    return this.before ? comparison <= 0 : comparison < 0;\n  };\n\n  Bound.prototype.isEqual = function (other) {\n    if (other === null) {\n      return false;\n    }\n\n    if (this.before !== other.before || this.position.length !== other.position.length) {\n      return false;\n    }\n\n    for (var i = 0; i < this.position.length; i++) {\n      var thisPosition = this.position[i];\n      var otherPosition = other.position[i];\n\n      if (!thisPosition.isEqual(otherPosition)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  return Bound;\n}();\n/**\r\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\r\n */\n\n\nvar OrderBy =\n/** @class */\nfunction () {\n  function OrderBy(field, dir) {\n    this.field = field;\n\n    if (dir === undefined) {\n      dir = Direction.ASCENDING;\n    }\n\n    this.dir = dir;\n    this.isKeyOrderBy = field.isKeyField();\n  }\n\n  OrderBy.prototype.compare = function (d1, d2) {\n    var comparison = this.isKeyOrderBy ? Document.compareByKey(d1, d2) : Document.compareByField(this.field, d1, d2);\n\n    switch (this.dir) {\n      case Direction.ASCENDING:\n        return comparison;\n\n      case Direction.DESCENDING:\n        return -1 * comparison;\n\n      default:\n        return fail('Unknown direction: ' + this.dir);\n    }\n  };\n\n  OrderBy.prototype.canonicalId = function () {\n    // TODO(b/29183165): Make this collision robust.\n    return this.field.canonicalString() + this.dir.toString();\n  };\n\n  OrderBy.prototype.toString = function () {\n    return this.field.canonicalString() + \" (\" + this.dir + \")\";\n  };\n\n  OrderBy.prototype.isEqual = function (other) {\n    return this.dir === other.dir && this.field.isEqual(other.field);\n  };\n\n  return OrderBy;\n}();\n\nvar KEY_ORDERING_ASC = new OrderBy(FieldPath.keyField(), Direction.ASCENDING);\nvar KEY_ORDERING_DESC = new OrderBy(FieldPath.keyField(), Direction.DESCENDING);\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Transforms a value into a server-generated timestamp. */\n\nvar ServerTimestampTransform =\n/** @class */\nfunction () {\n  function ServerTimestampTransform() {}\n\n  ServerTimestampTransform.prototype.applyToLocalView = function (previousValue, localWriteTime) {\n    return new ServerTimestampValue(localWriteTime, previousValue);\n  };\n\n  ServerTimestampTransform.prototype.applyToRemoteDocument = function (previousValue, transformResult) {\n    return transformResult;\n  };\n\n  ServerTimestampTransform.prototype.computeBaseValue = function (previousValue) {\n    return null; // Server timestamps are idempotent and don't require a base value.\n  };\n\n  ServerTimestampTransform.prototype.isEqual = function (other) {\n    return other instanceof ServerTimestampTransform;\n  };\n\n  ServerTimestampTransform.instance = new ServerTimestampTransform();\n  return ServerTimestampTransform;\n}();\n/** Transforms an array value via a union operation. */\n\n\nvar ArrayUnionTransformOperation =\n/** @class */\nfunction () {\n  function ArrayUnionTransformOperation(elements) {\n    this.elements = elements;\n  }\n\n  ArrayUnionTransformOperation.prototype.applyToLocalView = function (previousValue, localWriteTime) {\n    return this.apply(previousValue);\n  };\n\n  ArrayUnionTransformOperation.prototype.applyToRemoteDocument = function (previousValue, transformResult) {\n    // The server just sends null as the transform result for array operations,\n    // so we have to calculate a result the same as we do for local\n    // applications.\n    return this.apply(previousValue);\n  };\n\n  ArrayUnionTransformOperation.prototype.apply = function (previousValue) {\n    var result = coercedFieldValuesArray(previousValue);\n\n    var _loop_1 = function _loop_1(toUnion) {\n      if (!result.find(function (element) {\n        return element.isEqual(toUnion);\n      })) {\n        result.push(toUnion);\n      }\n    };\n\n    for (var _i = 0, _a = this.elements; _i < _a.length; _i++) {\n      var toUnion = _a[_i];\n\n      _loop_1(toUnion);\n    }\n\n    return new ArrayValue(result);\n  };\n\n  ArrayUnionTransformOperation.prototype.computeBaseValue = function (previousValue) {\n    return null; // Array transforms are idempotent and don't require a base value.\n  };\n\n  ArrayUnionTransformOperation.prototype.isEqual = function (other) {\n    return other instanceof ArrayUnionTransformOperation && arrayEquals(other.elements, this.elements);\n  };\n\n  return ArrayUnionTransformOperation;\n}();\n/** Transforms an array value via a remove operation. */\n\n\nvar ArrayRemoveTransformOperation =\n/** @class */\nfunction () {\n  function ArrayRemoveTransformOperation(elements) {\n    this.elements = elements;\n  }\n\n  ArrayRemoveTransformOperation.prototype.applyToLocalView = function (previousValue, localWriteTime) {\n    return this.apply(previousValue);\n  };\n\n  ArrayRemoveTransformOperation.prototype.applyToRemoteDocument = function (previousValue, transformResult) {\n    // The server just sends null as the transform result for array operations,\n    // so we have to calculate a result the same as we do for local\n    // applications.\n    return this.apply(previousValue);\n  };\n\n  ArrayRemoveTransformOperation.prototype.apply = function (previousValue) {\n    var result = coercedFieldValuesArray(previousValue);\n\n    var _loop_2 = function _loop_2(toRemove) {\n      result = result.filter(function (element) {\n        return !element.isEqual(toRemove);\n      });\n    };\n\n    for (var _i = 0, _a = this.elements; _i < _a.length; _i++) {\n      var toRemove = _a[_i];\n\n      _loop_2(toRemove);\n    }\n\n    return new ArrayValue(result);\n  };\n\n  ArrayRemoveTransformOperation.prototype.computeBaseValue = function (previousValue) {\n    return null; // Array transforms are idempotent and don't require a base value.\n  };\n\n  ArrayRemoveTransformOperation.prototype.isEqual = function (other) {\n    return other instanceof ArrayRemoveTransformOperation && arrayEquals(other.elements, this.elements);\n  };\n\n  return ArrayRemoveTransformOperation;\n}();\n/**\r\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\r\n * transforms. Converts all field values to integers or doubles, but unlike the\r\n * backend does not cap integer values at 2^63. Instead, JavaScript number\r\n * arithmetic is used and precision loss can occur for values greater than 2^53.\r\n */\n\n\nvar NumericIncrementTransformOperation =\n/** @class */\nfunction () {\n  function NumericIncrementTransformOperation(operand) {\n    this.operand = operand;\n  }\n\n  NumericIncrementTransformOperation.prototype.applyToLocalView = function (previousValue, localWriteTime) {\n    var baseValue = this.computeBaseValue(previousValue); // PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit\n    // precision and resolves overflows by reducing precision, we do not\n    // manually cap overflows at 2^63.\n    // Return an integer value iff the previous value and the operand is an\n    // integer.\n\n    if (baseValue instanceof IntegerValue && this.operand instanceof IntegerValue) {\n      var sum = baseValue.internalValue + this.operand.internalValue;\n      return new IntegerValue(sum);\n    } else {\n      var sum = baseValue.internalValue + this.operand.internalValue;\n      return new DoubleValue(sum);\n    }\n  };\n\n  NumericIncrementTransformOperation.prototype.applyToRemoteDocument = function (previousValue, transformResult) {\n    assert(transformResult !== null, \"Didn't receive transformResult for NUMERIC_ADD transform\");\n    return transformResult;\n  };\n  /**\r\n   * Inspects the provided value, returning the provided value if it is already\r\n   * a NumberValue, otherwise returning a coerced IntegerValue of 0.\r\n   */\n\n\n  NumericIncrementTransformOperation.prototype.computeBaseValue = function (previousValue) {\n    return previousValue instanceof NumberValue ? previousValue : new IntegerValue(0);\n  };\n\n  NumericIncrementTransformOperation.prototype.isEqual = function (other) {\n    return other instanceof NumericIncrementTransformOperation && this.operand.isEqual(other.operand);\n  };\n\n  return NumericIncrementTransformOperation;\n}();\n\nfunction coercedFieldValuesArray(value) {\n  if (value instanceof ArrayValue) {\n    return value.internalValue.slice();\n  } else {\n    // coerce to empty array.\n    return [];\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ExistenceFilter =\n/** @class */\nfunction () {\n  // TODO(b/33078163): just use simplest form of existence filter for now\n  function ExistenceFilter(count) {\n    this.count = count;\n  }\n\n  ExistenceFilter.prototype.isEqual = function (other) {\n    return other && other.count === this.count;\n  };\n\n  return ExistenceFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DIRECTIONS = function () {\n  var dirs = {};\n  dirs[Direction.ASCENDING.name] = 'ASCENDING';\n  dirs[Direction.DESCENDING.name] = 'DESCENDING';\n  return dirs;\n}();\n\nvar OPERATORS = function () {\n  var ops = {};\n  ops[Operator.LESS_THAN.name] = 'LESS_THAN';\n  ops[Operator.LESS_THAN_OR_EQUAL.name] = 'LESS_THAN_OR_EQUAL';\n  ops[Operator.GREATER_THAN.name] = 'GREATER_THAN';\n  ops[Operator.GREATER_THAN_OR_EQUAL.name] = 'GREATER_THAN_OR_EQUAL';\n  ops[Operator.EQUAL.name] = 'EQUAL';\n  ops[Operator.ARRAY_CONTAINS.name] = 'ARRAY_CONTAINS';\n  ops[Operator.IN.name] = 'IN';\n  ops[Operator.ARRAY_CONTAINS_ANY.name] = 'ARRAY_CONTAINS_ANY';\n  return ops;\n}(); // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n\n\nvar ISO_REG_EXP = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\nfunction assertPresent(value, description) {\n  assert(!isNullOrUndefined(value), description + ' is missing');\n}\n\nfunction parseInt64(value) {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  if (typeof value === 'number') {\n    return value;\n  } else if (typeof value === 'string') {\n    return Number(value);\n  } else {\n    return fail(\"can't parse \" + value);\n  }\n}\n/**\r\n * Generates JsonObject values for the Datastore API suitable for sending to\r\n * either GRPC stub methods or via the JSON/HTTP REST API.\r\n * TODO(klimt): We can remove the databaseId argument if we keep the full\r\n * resource name in documents.\r\n */\n\n\nvar JsonProtoSerializer =\n/** @class */\nfunction () {\n  function JsonProtoSerializer(databaseId, options) {\n    this.databaseId = databaseId;\n    this.options = options;\n  }\n\n  JsonProtoSerializer.prototype.emptyByteString = function () {\n    if (this.options.useProto3Json) {\n      return '';\n    } else {\n      return new Uint8Array(0);\n    }\n  };\n\n  JsonProtoSerializer.prototype.unsafeCastProtoByteString = function (byteString) {\n    // byteStrings can be either string or UInt8Array, but the typings say\n    // it's always a string. Cast as string to avoid type check failing\n    return byteString;\n  };\n\n  JsonProtoSerializer.prototype.fromRpcStatus = function (status) {\n    var code = status.code === undefined ? Code.UNKNOWN : mapCodeFromRpcCode(status.code);\n    return new FirestoreError(code, status.message || '');\n  };\n  /**\r\n   * Returns a value for a number (or undefined) that's appropriate to put into\r\n   * a google.protobuf.Int32Value proto.\r\n   * DO NOT USE THIS FOR ANYTHING ELSE.\r\n   * This method cheats. It's typed as returning \"number\" because that's what\r\n   * our generated proto interfaces say Int32Value must be. But GRPC actually\r\n   * expects a { value: <number> } struct.\r\n   */\n\n\n  JsonProtoSerializer.prototype.toInt32Value = function (val) {\n    if (!isNullOrUndefined(val)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, We need to match generated Proto types.\n      return {\n        value: val\n      };\n    } else {\n      return undefined;\n    }\n  };\n  /**\r\n   * Returns a number (or null) from a google.protobuf.Int32Value proto.\r\n   * DO NOT USE THIS FOR ANYTHING ELSE.\r\n   * This method cheats. It's typed as accepting \"number\" because that's what\r\n   * our generated proto interfaces say Int32Value must be, but it actually\r\n   * accepts { value: number } to match our serialization in toInt32Value().\r\n   */\n\n\n  JsonProtoSerializer.prototype.fromInt32Value = function (val) {\n    var result;\n\n    if (typeof val === 'object') {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, We need to match generated Proto types.\n      result = val.value;\n    } else {\n      // We accept raw numbers (without the {value: ... } wrapper) for\n      // compatibility with legacy persisted data.\n      result = val;\n    }\n\n    return isNullOrUndefined(result) ? null : result;\n  };\n  /**\r\n   * Returns a value for a Date that's appropriate to put into a proto.\r\n   * DO NOT USE THIS FOR ANYTHING ELSE.\r\n   * This method cheats. It's typed as returning \"string\" because that's what\r\n   * our generated proto interfaces say dates must be. But it's easier and safer\r\n   * to actually return a Timestamp proto.\r\n   */\n\n\n  JsonProtoSerializer.prototype.toTimestamp = function (timestamp) {\n    return {\n      seconds: '' + timestamp.seconds,\n      nanos: timestamp.nanoseconds // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    };\n  };\n\n  JsonProtoSerializer.prototype.fromTimestamp = function (date) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (typeof date === 'string') {\n      // TODO(b/37282237): Use strings for Proto3 timestamps\n      // assert(this.options.useProto3Json,\n      //   'The timestamp string format requires Proto3.');\n      return this.fromIso8601String(date);\n    } else {\n      assert(!!date, 'Cannot deserialize null or undefined timestamp.'); // TODO(b/37282237): Use strings for Proto3 timestamps\n      // assert(!this.options.useProto3Json,\n      //   'The timestamp instance format requires Proto JS.');\n\n      var seconds = parseInt64(date.seconds || '0');\n      var nanos = date.nanos || 0;\n      return new Timestamp(seconds, nanos);\n    }\n  };\n\n  JsonProtoSerializer.prototype.fromIso8601String = function (utc) {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n    // Parse the nanos right out of the string.\n    var nanos = 0;\n    var fraction = ISO_REG_EXP.exec(utc);\n    assert(!!fraction, 'invalid timestamp: ' + utc);\n\n    if (fraction[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      var nanoStr = fraction[1];\n      nanoStr = (nanoStr + '000000000').substr(0, 9);\n      nanos = Number(nanoStr);\n    } // Parse the date to get the seconds.\n\n\n    var date = new Date(utc);\n    var seconds = Math.floor(date.getTime() / 1000);\n    return new Timestamp(seconds, nanos);\n  };\n  /**\r\n   * Returns a value for bytes that's appropriate to put in a proto.\r\n   * DO NOT USE THIS FOR ANYTHING ELSE.\r\n   * This method cheats. It's typed as returning \"string\" because that's what\r\n   * our generated proto interfaces say bytes must be. But it should return\r\n   * an Uint8Array in Node.\r\n   */\n\n\n  JsonProtoSerializer.prototype.toBytes = function (bytes) {\n    if (this.options.useProto3Json) {\n      return bytes.toBase64();\n    } else {\n      // The typings say it's a string, but it needs to be a Uint8Array in Node.\n      return this.unsafeCastProtoByteString(bytes.toUint8Array());\n    }\n  };\n  /**\r\n   * Parse the blob from the protos into the internal Blob class. Note that the\r\n   * typings assume all blobs are strings, but they are actually Uint8Arrays\r\n   * on Node.\r\n   */\n\n\n  JsonProtoSerializer.prototype.fromBlob = function (blob) {\n    if (typeof blob === 'string') {\n      assert(this.options.useProto3Json, 'Expected bytes to be passed in as Uint8Array, but got a string instead.');\n      return Blob.fromBase64String(blob);\n    } else {\n      assert(!this.options.useProto3Json, 'Expected bytes to be passed in as Uint8Array, but got a string instead.');\n      return Blob.fromUint8Array(blob);\n    }\n  };\n\n  JsonProtoSerializer.prototype.toVersion = function (version) {\n    return this.toTimestamp(version.toTimestamp());\n  };\n\n  JsonProtoSerializer.prototype.fromVersion = function (version) {\n    assert(!!version, \"Trying to deserialize version that isn't set\");\n    return SnapshotVersion.fromTimestamp(this.fromTimestamp(version));\n  };\n\n  JsonProtoSerializer.prototype.toResourceName = function (databaseId, path) {\n    return this.fullyQualifiedPrefixPath(databaseId).child('documents').child(path).canonicalString();\n  };\n\n  JsonProtoSerializer.prototype.fromResourceName = function (name) {\n    var resource = ResourcePath.fromString(name);\n    assert(this.isValidResourceName(resource), 'Tried to deserialize invalid key ' + resource.toString());\n    return resource;\n  };\n\n  JsonProtoSerializer.prototype.toName = function (key) {\n    return this.toResourceName(this.databaseId, key.path);\n  };\n\n  JsonProtoSerializer.prototype.fromName = function (name) {\n    var resource = this.fromResourceName(name);\n    assert(resource.get(1) === this.databaseId.projectId, 'Tried to deserialize key from different project: ' + resource.get(1) + ' vs ' + this.databaseId.projectId);\n    assert(!resource.get(3) && !this.databaseId.database || resource.get(3) === this.databaseId.database, 'Tried to deserialize key from different database: ' + resource.get(3) + ' vs ' + this.databaseId.database);\n    return new DocumentKey(this.extractLocalPathFromResourceName(resource));\n  };\n\n  JsonProtoSerializer.prototype.toQueryPath = function (path) {\n    return this.toResourceName(this.databaseId, path);\n  };\n\n  JsonProtoSerializer.prototype.fromQueryPath = function (name) {\n    var resourceName = this.fromResourceName(name); // In v1beta1 queries for collections at the root did not have a trailing\n    // \"/documents\". In v1 all resource paths contain \"/documents\". Preserve the\n    // ability to read the v1beta1 form for compatibility with queries persisted\n    // in the local query cache.\n\n    if (resourceName.length === 4) {\n      return ResourcePath.EMPTY_PATH;\n    }\n\n    return this.extractLocalPathFromResourceName(resourceName);\n  };\n\n  Object.defineProperty(JsonProtoSerializer.prototype, \"encodedDatabaseId\", {\n    get: function get() {\n      var path = new ResourcePath(['projects', this.databaseId.projectId, 'databases', this.databaseId.database]);\n      return path.canonicalString();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  JsonProtoSerializer.prototype.fullyQualifiedPrefixPath = function (databaseId) {\n    return new ResourcePath(['projects', databaseId.projectId, 'databases', databaseId.database]);\n  };\n\n  JsonProtoSerializer.prototype.extractLocalPathFromResourceName = function (resourceName) {\n    assert(resourceName.length > 4 && resourceName.get(4) === 'documents', 'tried to deserialize invalid key ' + resourceName.toString());\n    return resourceName.popFirst(5);\n  };\n\n  JsonProtoSerializer.prototype.isValidResourceName = function (path) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return path.length >= 4 && path.get(0) === 'projects' && path.get(2) === 'databases';\n  };\n\n  JsonProtoSerializer.prototype.toValue = function (val) {\n    if (val instanceof NullValue) {\n      return {\n        nullValue: 'NULL_VALUE'\n      };\n    } else if (val instanceof BooleanValue) {\n      return {\n        booleanValue: val.value()\n      };\n    } else if (val instanceof IntegerValue) {\n      return {\n        integerValue: '' + val.value()\n      };\n    } else if (val instanceof DoubleValue) {\n      var doubleValue = val.value();\n\n      if (this.options.useProto3Json) {\n        // Proto 3 let's us encode NaN and Infinity as string values as\n        // expected by the backend. This is currently not checked by our unit\n        // tests because they rely on protobuf.js.\n        if (isNaN(doubleValue)) {\n          return {\n            doubleValue: 'NaN'\n          };\n        } else if (doubleValue === Infinity) {\n          return {\n            doubleValue: 'Infinity'\n          };\n        } else if (doubleValue === -Infinity) {\n          return {\n            doubleValue: '-Infinity'\n          };\n        }\n      }\n\n      return {\n        doubleValue: val.value()\n      };\n    } else if (val instanceof StringValue) {\n      return {\n        stringValue: val.value()\n      };\n    } else if (val instanceof ObjectValue) {\n      return {\n        mapValue: this.toMapValue(val)\n      };\n    } else if (val instanceof ArrayValue) {\n      return {\n        arrayValue: this.toArrayValue(val)\n      };\n    } else if (val instanceof TimestampValue) {\n      return {\n        timestampValue: this.toTimestamp(val.internalValue)\n      };\n    } else if (val instanceof GeoPointValue) {\n      return {\n        geoPointValue: {\n          latitude: val.value().latitude,\n          longitude: val.value().longitude\n        }\n      };\n    } else if (val instanceof BlobValue) {\n      return {\n        bytesValue: this.toBytes(val.value())\n      };\n    } else if (val instanceof RefValue) {\n      return {\n        referenceValue: this.toResourceName(val.databaseId, val.key.path)\n      };\n    } else {\n      return fail('Unknown FieldValue ' + JSON.stringify(val));\n    }\n  };\n\n  JsonProtoSerializer.prototype.fromValue = function (obj) {\n    var _this = this;\n\n    if ('nullValue' in obj) {\n      return NullValue.INSTANCE;\n    } else if ('booleanValue' in obj) {\n      return BooleanValue.of(obj.booleanValue);\n    } else if ('integerValue' in obj) {\n      return new IntegerValue(parseInt64(obj.integerValue));\n    } else if ('doubleValue' in obj) {\n      if (this.options.useProto3Json) {\n        // Proto 3 uses the string values 'NaN' and 'Infinity'.\n        if (obj.doubleValue === 'NaN') {\n          return DoubleValue.NAN;\n        } else if (obj.doubleValue === 'Infinity') {\n          return DoubleValue.POSITIVE_INFINITY;\n        } else if (obj.doubleValue === '-Infinity') {\n          return DoubleValue.NEGATIVE_INFINITY;\n        }\n      }\n\n      return new DoubleValue(obj.doubleValue);\n    } else if ('stringValue' in obj) {\n      return new StringValue(obj.stringValue);\n    } else if ('mapValue' in obj) {\n      return this.fromFields(obj.mapValue.fields || {});\n    } else if ('arrayValue' in obj) {\n      // \"values\" is not present if the array is empty\n      assertPresent(obj.arrayValue, 'arrayValue');\n      var values = obj.arrayValue.values || [];\n      return new ArrayValue(values.map(function (v) {\n        return _this.fromValue(v);\n      }));\n    } else if ('timestampValue' in obj) {\n      assertPresent(obj.timestampValue, 'timestampValue');\n      return new TimestampValue(this.fromTimestamp(obj.timestampValue));\n    } else if ('geoPointValue' in obj) {\n      assertPresent(obj.geoPointValue, 'geoPointValue');\n      var latitude = obj.geoPointValue.latitude || 0;\n      var longitude = obj.geoPointValue.longitude || 0;\n      return new GeoPointValue(new GeoPoint(latitude, longitude));\n    } else if ('bytesValue' in obj) {\n      assertPresent(obj.bytesValue, 'bytesValue');\n      var blob = this.fromBlob(obj.bytesValue);\n      return new BlobValue(blob);\n    } else if ('referenceValue' in obj) {\n      assertPresent(obj.referenceValue, 'referenceValue');\n      var resourceName = this.fromResourceName(obj.referenceValue);\n      var dbId = new DatabaseId(resourceName.get(1), resourceName.get(3));\n      var key = new DocumentKey(this.extractLocalPathFromResourceName(resourceName));\n      return new RefValue(dbId, key);\n    } else {\n      return fail('Unknown Value proto ' + JSON.stringify(obj));\n    }\n  };\n  /** Creates an api.Document from key and fields (but no create/update time) */\n\n\n  JsonProtoSerializer.prototype.toMutationDocument = function (key, fields) {\n    return {\n      name: this.toName(key),\n      fields: this.toFields(fields)\n    };\n  };\n\n  JsonProtoSerializer.prototype.toDocument = function (document) {\n    assert(!document.hasLocalMutations, \"Can't serialize documents with mutations.\");\n    return {\n      name: this.toName(document.key),\n      fields: this.toFields(document.data()),\n      updateTime: this.toTimestamp(document.version.toTimestamp())\n    };\n  };\n\n  JsonProtoSerializer.prototype.fromDocument = function (document, hasCommittedMutations) {\n    var _this = this;\n\n    var key = this.fromName(document.name);\n    var version = this.fromVersion(document.updateTime);\n    return new Document(key, version, {\n      hasCommittedMutations: !!hasCommittedMutations\n    }, undefined, document, function (v) {\n      return _this.fromValue(v);\n    });\n  };\n\n  JsonProtoSerializer.prototype.toFields = function (fields) {\n    var _this = this;\n\n    var result = {};\n    fields.forEach(function (key, value) {\n      result[key] = _this.toValue(value);\n    });\n    return result;\n  };\n\n  JsonProtoSerializer.prototype.fromFields = function (object) {\n    var _this = this; // Proto map<string, Value> gets mapped to Object, so cast it.\n\n\n    var map = object;\n    var result = ObjectValue.EMPTY;\n    forEach(map, function (key, value) {\n      result = result.set(new FieldPath([key]), _this.fromValue(value));\n    });\n    return result;\n  };\n\n  JsonProtoSerializer.prototype.toMapValue = function (map) {\n    return {\n      fields: this.toFields(map)\n    };\n  };\n\n  JsonProtoSerializer.prototype.toArrayValue = function (array) {\n    var _this = this;\n\n    var result = [];\n    array.forEach(function (value) {\n      result.push(_this.toValue(value));\n    });\n    return {\n      values: result\n    };\n  };\n\n  JsonProtoSerializer.prototype.fromFound = function (doc) {\n    var _this = this;\n\n    assert(!!doc.found, 'Tried to deserialize a found document from a missing document.');\n    assertPresent(doc.found.name, 'doc.found.name');\n    assertPresent(doc.found.updateTime, 'doc.found.updateTime');\n    var key = this.fromName(doc.found.name);\n    var version = this.fromVersion(doc.found.updateTime);\n    return new Document(key, version, {}, undefined, doc.found, function (v) {\n      return _this.fromValue(v);\n    });\n  };\n\n  JsonProtoSerializer.prototype.fromMissing = function (result) {\n    assert(!!result.missing, 'Tried to deserialize a missing document from a found document.');\n    assert(!!result.readTime, 'Tried to deserialize a missing document without a read time.');\n    var key = this.fromName(result.missing);\n    var version = this.fromVersion(result.readTime);\n    return new NoDocument(key, version);\n  };\n\n  JsonProtoSerializer.prototype.fromMaybeDocument = function (result) {\n    if ('found' in result) {\n      return this.fromFound(result);\n    } else if ('missing' in result) {\n      return this.fromMissing(result);\n    }\n\n    return fail('invalid batch get response: ' + JSON.stringify(result));\n  };\n\n  JsonProtoSerializer.prototype.toWatchTargetChangeState = function (state) {\n    switch (state) {\n      case WatchTargetChangeState.Added:\n        return 'ADD';\n\n      case WatchTargetChangeState.Current:\n        return 'CURRENT';\n\n      case WatchTargetChangeState.NoChange:\n        return 'NO_CHANGE';\n\n      case WatchTargetChangeState.Removed:\n        return 'REMOVE';\n\n      case WatchTargetChangeState.Reset:\n        return 'RESET';\n\n      default:\n        return fail('Unknown WatchTargetChangeState: ' + state);\n    }\n  };\n\n  JsonProtoSerializer.prototype.toTestWatchChange = function (watchChange) {\n    if (watchChange instanceof ExistenceFilterChange) {\n      return {\n        filter: {\n          count: watchChange.existenceFilter.count,\n          targetId: watchChange.targetId\n        }\n      };\n    }\n\n    if (watchChange instanceof DocumentWatchChange) {\n      if (watchChange.newDoc instanceof Document) {\n        var doc = watchChange.newDoc;\n        return {\n          documentChange: {\n            document: {\n              name: this.toName(doc.key),\n              fields: this.toFields(doc.data()),\n              updateTime: this.toVersion(doc.version)\n            },\n            targetIds: watchChange.updatedTargetIds,\n            removedTargetIds: watchChange.removedTargetIds\n          }\n        };\n      } else if (watchChange.newDoc instanceof NoDocument) {\n        var doc = watchChange.newDoc;\n        return {\n          documentDelete: {\n            document: this.toName(doc.key),\n            readTime: this.toVersion(doc.version),\n            removedTargetIds: watchChange.removedTargetIds\n          }\n        };\n      } else if (watchChange.newDoc === null) {\n        return {\n          documentRemove: {\n            document: this.toName(watchChange.key),\n            removedTargetIds: watchChange.removedTargetIds\n          }\n        };\n      }\n    }\n\n    if (watchChange instanceof WatchTargetChange) {\n      var cause = undefined;\n\n      if (watchChange.cause) {\n        cause = {\n          code: mapRpcCodeFromCode(watchChange.cause.code),\n          message: watchChange.cause.message\n        };\n      }\n\n      return {\n        targetChange: {\n          targetChangeType: this.toWatchTargetChangeState(watchChange.state),\n          targetIds: watchChange.targetIds,\n          resumeToken: this.unsafeCastProtoByteString(watchChange.resumeToken),\n          cause: cause\n        }\n      };\n    }\n\n    return fail('Unrecognized watch change: ' + JSON.stringify(watchChange));\n  };\n\n  JsonProtoSerializer.prototype.fromWatchChange = function (change) {\n    var _this = this;\n\n    var watchChange;\n\n    if ('targetChange' in change) {\n      assertPresent(change.targetChange, 'targetChange'); // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'\n      // if unset\n\n      var state = this.fromWatchTargetChangeState(change.targetChange.targetChangeType || 'NO_CHANGE');\n      var targetIds = change.targetChange.targetIds || [];\n      var resumeToken = change.targetChange.resumeToken || this.emptyByteString();\n      var causeProto = change.targetChange.cause;\n      var cause = causeProto && this.fromRpcStatus(causeProto);\n      watchChange = new WatchTargetChange(state, targetIds, resumeToken, cause || null);\n    } else if ('documentChange' in change) {\n      assertPresent(change.documentChange, 'documentChange');\n      assertPresent(change.documentChange.document, 'documentChange.name');\n      assertPresent(change.documentChange.document.name, 'documentChange.document.name');\n      assertPresent(change.documentChange.document.updateTime, 'documentChange.document.updateTime');\n      var entityChange = change.documentChange;\n      var key = this.fromName(entityChange.document.name);\n      var version = this.fromVersion(entityChange.document.updateTime);\n      var doc = new Document(key, version, {}, undefined, entityChange.document, function (v) {\n        return _this.fromValue(v);\n      });\n      var updatedTargetIds = entityChange.targetIds || [];\n      var removedTargetIds = entityChange.removedTargetIds || [];\n      watchChange = new DocumentWatchChange(updatedTargetIds, removedTargetIds, doc.key, doc);\n    } else if ('documentDelete' in change) {\n      assertPresent(change.documentDelete, 'documentDelete');\n      assertPresent(change.documentDelete.document, 'documentDelete.document');\n      var docDelete = change.documentDelete;\n      var key = this.fromName(docDelete.document);\n      var version = docDelete.readTime ? this.fromVersion(docDelete.readTime) : SnapshotVersion.forDeletedDoc();\n      var doc = new NoDocument(key, version);\n      var removedTargetIds = docDelete.removedTargetIds || [];\n      watchChange = new DocumentWatchChange([], removedTargetIds, doc.key, doc);\n    } else if ('documentRemove' in change) {\n      assertPresent(change.documentRemove, 'documentRemove');\n      assertPresent(change.documentRemove.document, 'documentRemove');\n      var docRemove = change.documentRemove;\n      var key = this.fromName(docRemove.document);\n      var removedTargetIds = docRemove.removedTargetIds || [];\n      watchChange = new DocumentWatchChange([], removedTargetIds, key, null);\n    } else if ('filter' in change) {\n      // TODO(dimond): implement existence filter parsing with strategy.\n      assertPresent(change.filter, 'filter');\n      assertPresent(change.filter.targetId, 'filter.targetId');\n      var filter = change.filter;\n      var count = filter.count || 0;\n      var existenceFilter = new ExistenceFilter(count);\n      var targetId = filter.targetId;\n      watchChange = new ExistenceFilterChange(targetId, existenceFilter);\n    } else {\n      return fail('Unknown change type ' + JSON.stringify(change));\n    }\n\n    return watchChange;\n  };\n\n  JsonProtoSerializer.prototype.fromWatchTargetChangeState = function (state) {\n    if (state === 'NO_CHANGE') {\n      return WatchTargetChangeState.NoChange;\n    } else if (state === 'ADD') {\n      return WatchTargetChangeState.Added;\n    } else if (state === 'REMOVE') {\n      return WatchTargetChangeState.Removed;\n    } else if (state === 'CURRENT') {\n      return WatchTargetChangeState.Current;\n    } else if (state === 'RESET') {\n      return WatchTargetChangeState.Reset;\n    } else {\n      return fail('Got unexpected TargetChange.state: ' + state);\n    }\n  };\n\n  JsonProtoSerializer.prototype.versionFromListenResponse = function (change) {\n    // We have only reached a consistent snapshot for the entire stream if there\n    // is a read_time set and it applies to all targets (i.e. the list of\n    // targets is empty). The backend is guaranteed to send such responses.\n    if (!('targetChange' in change)) {\n      return SnapshotVersion.MIN;\n    }\n\n    var targetChange = change.targetChange;\n\n    if (targetChange.targetIds && targetChange.targetIds.length) {\n      return SnapshotVersion.MIN;\n    }\n\n    if (!targetChange.readTime) {\n      return SnapshotVersion.MIN;\n    }\n\n    return this.fromVersion(targetChange.readTime);\n  };\n\n  JsonProtoSerializer.prototype.toMutation = function (mutation) {\n    var _this = this;\n\n    var result;\n\n    if (mutation instanceof SetMutation) {\n      result = {\n        update: this.toMutationDocument(mutation.key, mutation.value)\n      };\n    } else if (mutation instanceof DeleteMutation) {\n      result = {\n        delete: this.toName(mutation.key)\n      };\n    } else if (mutation instanceof PatchMutation) {\n      result = {\n        update: this.toMutationDocument(mutation.key, mutation.data),\n        updateMask: this.toDocumentMask(mutation.fieldMask)\n      };\n    } else if (mutation instanceof TransformMutation) {\n      result = {\n        transform: {\n          document: this.toName(mutation.key),\n          fieldTransforms: mutation.fieldTransforms.map(function (transform) {\n            return _this.toFieldTransform(transform);\n          })\n        }\n      };\n    } else {\n      return fail('Unknown mutation type ' + mutation.type);\n    }\n\n    if (!mutation.precondition.isNone) {\n      result.currentDocument = this.toPrecondition(mutation.precondition);\n    }\n\n    return result;\n  };\n\n  JsonProtoSerializer.prototype.fromMutation = function (proto) {\n    var _this = this;\n\n    var precondition = proto.currentDocument ? this.fromPrecondition(proto.currentDocument) : Precondition.NONE;\n\n    if (proto.update) {\n      assertPresent(proto.update.name, 'name');\n      var key = this.fromName(proto.update.name);\n      var value = this.fromFields(proto.update.fields || {});\n\n      if (proto.updateMask) {\n        var fieldMask = this.fromDocumentMask(proto.updateMask);\n        return new PatchMutation(key, value, fieldMask, precondition);\n      } else {\n        return new SetMutation(key, value, precondition);\n      }\n    } else if (proto.delete) {\n      var key = this.fromName(proto.delete);\n      return new DeleteMutation(key, precondition);\n    } else if (proto.transform) {\n      var key = this.fromName(proto.transform.document);\n      var fieldTransforms = proto.transform.fieldTransforms.map(function (transform) {\n        return _this.fromFieldTransform(transform);\n      });\n      assert(precondition.exists === true, 'Transforms only support precondition \"exists == true\"');\n      return new TransformMutation(key, fieldTransforms);\n    } else {\n      return fail('unknown mutation proto: ' + JSON.stringify(proto));\n    }\n  };\n\n  JsonProtoSerializer.prototype.toPrecondition = function (precondition) {\n    assert(!precondition.isNone, \"Can't serialize an empty precondition\");\n\n    if (precondition.updateTime !== undefined) {\n      return {\n        updateTime: this.toVersion(precondition.updateTime)\n      };\n    } else if (precondition.exists !== undefined) {\n      return {\n        exists: precondition.exists\n      };\n    } else {\n      return fail('Unknown precondition');\n    }\n  };\n\n  JsonProtoSerializer.prototype.fromPrecondition = function (precondition) {\n    if (precondition.updateTime !== undefined) {\n      return Precondition.updateTime(this.fromVersion(precondition.updateTime));\n    } else if (precondition.exists !== undefined) {\n      return Precondition.exists(precondition.exists);\n    } else {\n      return Precondition.NONE;\n    }\n  };\n\n  JsonProtoSerializer.prototype.fromWriteResult = function (proto, commitTime) {\n    var _this = this; // NOTE: Deletes don't have an updateTime.\n\n\n    var version = proto.updateTime ? this.fromVersion(proto.updateTime) : this.fromVersion(commitTime);\n    var transformResults = null;\n\n    if (proto.transformResults && proto.transformResults.length > 0) {\n      transformResults = proto.transformResults.map(function (result) {\n        return _this.fromValue(result);\n      });\n    }\n\n    return new MutationResult(version, transformResults);\n  };\n\n  JsonProtoSerializer.prototype.fromWriteResults = function (protos, commitTime) {\n    var _this = this;\n\n    if (protos && protos.length > 0) {\n      assert(commitTime !== undefined, 'Received a write result without a commit time');\n      return protos.map(function (proto) {\n        return _this.fromWriteResult(proto, commitTime);\n      });\n    } else {\n      return [];\n    }\n  };\n\n  JsonProtoSerializer.prototype.toFieldTransform = function (fieldTransform) {\n    var _this = this;\n\n    var transform = fieldTransform.transform;\n\n    if (transform instanceof ServerTimestampTransform) {\n      return {\n        fieldPath: fieldTransform.field.canonicalString(),\n        setToServerValue: 'REQUEST_TIME'\n      };\n    } else if (transform instanceof ArrayUnionTransformOperation) {\n      return {\n        fieldPath: fieldTransform.field.canonicalString(),\n        appendMissingElements: {\n          values: transform.elements.map(function (v) {\n            return _this.toValue(v);\n          })\n        }\n      };\n    } else if (transform instanceof ArrayRemoveTransformOperation) {\n      return {\n        fieldPath: fieldTransform.field.canonicalString(),\n        removeAllFromArray: {\n          values: transform.elements.map(function (v) {\n            return _this.toValue(v);\n          })\n        }\n      };\n    } else if (transform instanceof NumericIncrementTransformOperation) {\n      return {\n        fieldPath: fieldTransform.field.canonicalString(),\n        increment: this.toValue(transform.operand)\n      };\n    } else {\n      throw fail('Unknown transform: ' + fieldTransform.transform);\n    }\n  };\n\n  JsonProtoSerializer.prototype.fromFieldTransform = function (proto) {\n    var _this = this;\n\n    var transform = null;\n\n    if ('setToServerValue' in proto) {\n      assert(proto.setToServerValue === 'REQUEST_TIME', 'Unknown server value transform proto: ' + JSON.stringify(proto));\n      transform = ServerTimestampTransform.instance;\n    } else if ('appendMissingElements' in proto) {\n      var values = proto.appendMissingElements.values || [];\n      transform = new ArrayUnionTransformOperation(values.map(function (v) {\n        return _this.fromValue(v);\n      }));\n    } else if ('removeAllFromArray' in proto) {\n      var values = proto.removeAllFromArray.values || [];\n      transform = new ArrayRemoveTransformOperation(values.map(function (v) {\n        return _this.fromValue(v);\n      }));\n    } else if ('increment' in proto) {\n      var operand = this.fromValue(proto.increment);\n      assert(operand instanceof NumberValue, 'NUMERIC_ADD transform requires a NumberValue');\n      transform = new NumericIncrementTransformOperation(operand);\n    } else {\n      fail('Unknown transform proto: ' + JSON.stringify(proto));\n    }\n\n    var fieldPath = FieldPath.fromServerFormat(proto.fieldPath);\n    return new FieldTransform(fieldPath, transform);\n  };\n\n  JsonProtoSerializer.prototype.toDocumentsTarget = function (query) {\n    return {\n      documents: [this.toQueryPath(query.path)]\n    };\n  };\n\n  JsonProtoSerializer.prototype.fromDocumentsTarget = function (documentsTarget) {\n    var count = documentsTarget.documents.length;\n    assert(count === 1, 'DocumentsTarget contained other than 1 document: ' + count);\n    var name = documentsTarget.documents[0];\n    return Query.atPath(this.fromQueryPath(name));\n  };\n\n  JsonProtoSerializer.prototype.toQueryTarget = function (query) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    var result = {\n      structuredQuery: {}\n    };\n    var path = query.path;\n\n    if (query.collectionGroup !== null) {\n      assert(path.length % 2 === 0, 'Collection Group queries should be within a document path or root.');\n      result.parent = this.toQueryPath(path);\n      result.structuredQuery.from = [{\n        collectionId: query.collectionGroup,\n        allDescendants: true\n      }];\n    } else {\n      assert(path.length % 2 !== 0, 'Document queries with filters are not supported.');\n      result.parent = this.toQueryPath(path.popLast());\n      result.structuredQuery.from = [{\n        collectionId: path.lastSegment()\n      }];\n    }\n\n    var where = this.toFilter(query.filters);\n\n    if (where) {\n      result.structuredQuery.where = where;\n    }\n\n    var orderBy = this.toOrder(query.orderBy);\n\n    if (orderBy) {\n      result.structuredQuery.orderBy = orderBy;\n    }\n\n    var limit = this.toInt32Value(query.limit);\n\n    if (limit !== undefined) {\n      result.structuredQuery.limit = limit;\n    }\n\n    if (query.startAt) {\n      result.structuredQuery.startAt = this.toCursor(query.startAt);\n    }\n\n    if (query.endAt) {\n      result.structuredQuery.endAt = this.toCursor(query.endAt);\n    }\n\n    return result;\n  };\n\n  JsonProtoSerializer.prototype.fromQueryTarget = function (target) {\n    var path = this.fromQueryPath(target.parent);\n    var query = target.structuredQuery;\n    var fromCount = query.from ? query.from.length : 0;\n    var collectionGroup = null;\n\n    if (fromCount > 0) {\n      assert(fromCount === 1, 'StructuredQuery.from with more than one collection is not supported.');\n      var from = query.from[0];\n\n      if (from.allDescendants) {\n        collectionGroup = from.collectionId;\n      } else {\n        path = path.child(from.collectionId);\n      }\n    }\n\n    var filterBy = [];\n\n    if (query.where) {\n      filterBy = this.fromFilter(query.where);\n    }\n\n    var orderBy = [];\n\n    if (query.orderBy) {\n      orderBy = this.fromOrder(query.orderBy);\n    }\n\n    var limit = null;\n\n    if (query.limit) {\n      limit = this.fromInt32Value(query.limit);\n    }\n\n    var startAt = null;\n\n    if (query.startAt) {\n      startAt = this.fromCursor(query.startAt);\n    }\n\n    var endAt = null;\n\n    if (query.endAt) {\n      endAt = this.fromCursor(query.endAt);\n    }\n\n    return new Query(path, collectionGroup, orderBy, filterBy, limit, startAt, endAt);\n  };\n\n  JsonProtoSerializer.prototype.toListenRequestLabels = function (queryData) {\n    var value = this.toLabel(queryData.purpose);\n\n    if (value == null) {\n      return null;\n    } else {\n      return {\n        'goog-listen-tags': value\n      };\n    }\n  };\n\n  JsonProtoSerializer.prototype.toLabel = function (purpose) {\n    switch (purpose) {\n      case QueryPurpose.Listen:\n        return null;\n\n      case QueryPurpose.ExistenceFilterMismatch:\n        return 'existence-filter-mismatch';\n\n      case QueryPurpose.LimboResolution:\n        return 'limbo-document';\n\n      default:\n        return fail('Unrecognized query purpose: ' + purpose);\n    }\n  };\n\n  JsonProtoSerializer.prototype.toTarget = function (queryData) {\n    var result;\n    var query = queryData.query;\n\n    if (query.isDocumentQuery()) {\n      result = {\n        documents: this.toDocumentsTarget(query)\n      };\n    } else {\n      result = {\n        query: this.toQueryTarget(query)\n      };\n    }\n\n    result.targetId = queryData.targetId;\n\n    if (queryData.resumeToken.length > 0) {\n      result.resumeToken = this.unsafeCastProtoByteString(queryData.resumeToken);\n    }\n\n    return result;\n  };\n\n  JsonProtoSerializer.prototype.toFilter = function (filters) {\n    var _this = this;\n\n    if (filters.length === 0) {\n      return;\n    }\n\n    var protos = filters.map(function (filter) {\n      if (filter instanceof FieldFilter) {\n        return _this.toUnaryOrFieldFilter(filter);\n      } else {\n        return fail('Unrecognized filter: ' + JSON.stringify(filter));\n      }\n    });\n\n    if (protos.length === 1) {\n      return protos[0];\n    }\n\n    return {\n      compositeFilter: {\n        op: 'AND',\n        filters: protos\n      }\n    };\n  };\n\n  JsonProtoSerializer.prototype.fromFilter = function (filter) {\n    var _this = this;\n\n    if (!filter) {\n      return [];\n    } else if (filter.unaryFilter !== undefined) {\n      return [this.fromUnaryFilter(filter)];\n    } else if (filter.fieldFilter !== undefined) {\n      return [this.fromFieldFilter(filter)];\n    } else if (filter.compositeFilter !== undefined) {\n      return filter.compositeFilter.filters.map(function (f) {\n        return _this.fromFilter(f);\n      }).reduce(function (accum, current) {\n        return accum.concat(current);\n      });\n    } else {\n      return fail('Unknown filter: ' + JSON.stringify(filter));\n    }\n  };\n\n  JsonProtoSerializer.prototype.toOrder = function (orderBys) {\n    var _this = this;\n\n    if (orderBys.length === 0) {\n      return;\n    }\n\n    return orderBys.map(function (order) {\n      return _this.toPropertyOrder(order);\n    });\n  };\n\n  JsonProtoSerializer.prototype.fromOrder = function (orderBys) {\n    var _this = this;\n\n    return orderBys.map(function (order) {\n      return _this.fromPropertyOrder(order);\n    });\n  };\n\n  JsonProtoSerializer.prototype.toCursor = function (cursor) {\n    var _this = this;\n\n    return {\n      before: cursor.before,\n      values: cursor.position.map(function (component) {\n        return _this.toValue(component);\n      })\n    };\n  };\n\n  JsonProtoSerializer.prototype.fromCursor = function (cursor) {\n    var _this = this;\n\n    var before = !!cursor.before;\n    var position = cursor.values.map(function (component) {\n      return _this.fromValue(component);\n    });\n    return new Bound(position, before);\n  }; // visible for testing\n\n\n  JsonProtoSerializer.prototype.toDirection = function (dir) {\n    return DIRECTIONS[dir.name];\n  }; // visible for testing\n\n\n  JsonProtoSerializer.prototype.fromDirection = function (dir) {\n    switch (dir) {\n      case 'ASCENDING':\n        return Direction.ASCENDING;\n\n      case 'DESCENDING':\n        return Direction.DESCENDING;\n\n      default:\n        return undefined;\n    }\n  }; // visible for testing\n\n\n  JsonProtoSerializer.prototype.toOperatorName = function (op) {\n    return OPERATORS[op.name];\n  };\n\n  JsonProtoSerializer.prototype.fromOperatorName = function (op) {\n    switch (op) {\n      case 'EQUAL':\n        return Operator.EQUAL;\n\n      case 'GREATER_THAN':\n        return Operator.GREATER_THAN;\n\n      case 'GREATER_THAN_OR_EQUAL':\n        return Operator.GREATER_THAN_OR_EQUAL;\n\n      case 'LESS_THAN':\n        return Operator.LESS_THAN;\n\n      case 'LESS_THAN_OR_EQUAL':\n        return Operator.LESS_THAN_OR_EQUAL;\n\n      case 'ARRAY_CONTAINS':\n        return Operator.ARRAY_CONTAINS;\n\n      case 'IN':\n        return Operator.IN;\n\n      case 'ARRAY_CONTAINS_ANY':\n        return Operator.ARRAY_CONTAINS_ANY;\n\n      case 'OPERATOR_UNSPECIFIED':\n        return fail('Unspecified operator');\n\n      default:\n        return fail('Unknown operator');\n    }\n  };\n\n  JsonProtoSerializer.prototype.toFieldPathReference = function (path) {\n    return {\n      fieldPath: path.canonicalString()\n    };\n  };\n\n  JsonProtoSerializer.prototype.fromFieldPathReference = function (fieldReference) {\n    return FieldPath.fromServerFormat(fieldReference.fieldPath);\n  }; // visible for testing\n\n\n  JsonProtoSerializer.prototype.toPropertyOrder = function (orderBy) {\n    return {\n      field: this.toFieldPathReference(orderBy.field),\n      direction: this.toDirection(orderBy.dir)\n    };\n  };\n\n  JsonProtoSerializer.prototype.fromPropertyOrder = function (orderBy) {\n    return new OrderBy(this.fromFieldPathReference(orderBy.field), this.fromDirection(orderBy.direction));\n  };\n\n  JsonProtoSerializer.prototype.fromFieldFilter = function (filter) {\n    return FieldFilter.create(this.fromFieldPathReference(filter.fieldFilter.field), this.fromOperatorName(filter.fieldFilter.op), this.fromValue(filter.fieldFilter.value));\n  }; // visible for testing\n\n\n  JsonProtoSerializer.prototype.toUnaryOrFieldFilter = function (filter) {\n    if (filter.op === Operator.EQUAL) {\n      if (filter.value.isEqual(DoubleValue.NAN)) {\n        return {\n          unaryFilter: {\n            field: this.toFieldPathReference(filter.field),\n            op: 'IS_NAN'\n          }\n        };\n      } else if (filter.value.isEqual(NullValue.INSTANCE)) {\n        return {\n          unaryFilter: {\n            field: this.toFieldPathReference(filter.field),\n            op: 'IS_NULL'\n          }\n        };\n      }\n    }\n\n    return {\n      fieldFilter: {\n        field: this.toFieldPathReference(filter.field),\n        op: this.toOperatorName(filter.op),\n        value: this.toValue(filter.value)\n      }\n    };\n  };\n\n  JsonProtoSerializer.prototype.fromUnaryFilter = function (filter) {\n    switch (filter.unaryFilter.op) {\n      case 'IS_NAN':\n        var nanField = this.fromFieldPathReference(filter.unaryFilter.field);\n        return FieldFilter.create(nanField, Operator.EQUAL, DoubleValue.NAN);\n\n      case 'IS_NULL':\n        var nullField = this.fromFieldPathReference(filter.unaryFilter.field);\n        return FieldFilter.create(nullField, Operator.EQUAL, NullValue.INSTANCE);\n\n      case 'OPERATOR_UNSPECIFIED':\n        return fail('Unspecified filter');\n\n      default:\n        return fail('Unknown filter');\n    }\n  };\n\n  JsonProtoSerializer.prototype.toDocumentMask = function (fieldMask) {\n    var canonicalFields = [];\n    fieldMask.fields.forEach(function (field) {\n      return canonicalFields.push(field.canonicalString());\n    });\n    return {\n      fieldPaths: canonicalFields\n    };\n  };\n\n  JsonProtoSerializer.prototype.fromDocumentMask = function (proto) {\n    var paths = proto.fieldPaths || [];\n    var fields = paths.map(function (path) {\n      return FieldPath.fromServerFormat(path);\n    });\n    return FieldMask.fromArray(fields);\n  };\n\n  return JsonProtoSerializer;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Holds the listeners and the last received ViewSnapshot for a query being\r\n * tracked by EventManager.\r\n */\n\n\nvar QueryListenersInfo =\n/** @class */\nfunction () {\n  function QueryListenersInfo() {\n    this.viewSnap = null;\n    this.targetId = 0;\n    this.listeners = [];\n  }\n\n  return QueryListenersInfo;\n}();\n/**\r\n * EventManager is responsible for mapping queries to query event emitters.\r\n * It handles \"fan-out\". -- Identical queries will re-use the same watch on the\r\n * backend.\r\n */\n\n\nvar EventManager =\n/** @class */\nfunction () {\n  function EventManager(syncEngine) {\n    this.syncEngine = syncEngine;\n    this.queries = new ObjectMap(function (q) {\n      return q.canonicalId();\n    });\n    this.onlineState = OnlineState.Unknown;\n    this.snapshotsInSyncListeners = new Set();\n    this.syncEngine.subscribe(this);\n  }\n\n  EventManager.prototype.listen = function (listener) {\n    var query = listener.query;\n    var firstListen = false;\n    var queryInfo = this.queries.get(query);\n\n    if (!queryInfo) {\n      firstListen = true;\n      queryInfo = new QueryListenersInfo();\n      this.queries.set(query, queryInfo);\n    }\n\n    queryInfo.listeners.push(listener); // Run global snapshot listeners if a consistent snapshot has been emitted.\n\n    var raisedEvent = listener.applyOnlineStateChange(this.onlineState);\n    assert(!raisedEvent, \"applyOnlineStateChange() shouldn't raise an event for brand-new listeners.\");\n\n    if (queryInfo.viewSnap) {\n      var raisedEvent_1 = listener.onViewSnapshot(queryInfo.viewSnap);\n\n      if (raisedEvent_1) {\n        this.raiseSnapshotsInSyncEvent();\n      }\n    }\n\n    if (firstListen) {\n      return this.syncEngine.listen(query).then(function (targetId) {\n        queryInfo.targetId = targetId;\n        return targetId;\n      });\n    } else {\n      return Promise.resolve(queryInfo.targetId);\n    }\n  };\n\n  EventManager.prototype.unlisten = function (listener) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var query, lastListen, queryInfo, i;\n      return tslib_1.__generator(this, function (_a) {\n        query = listener.query;\n        lastListen = false;\n        queryInfo = this.queries.get(query);\n\n        if (queryInfo) {\n          i = queryInfo.listeners.indexOf(listener);\n\n          if (i >= 0) {\n            queryInfo.listeners.splice(i, 1);\n            lastListen = queryInfo.listeners.length === 0;\n          }\n        }\n\n        if (lastListen) {\n          this.queries.delete(query);\n          return [2\n          /*return*/\n          , this.syncEngine.unlisten(query)];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  EventManager.prototype.onWatchChange = function (viewSnaps) {\n    var raisedEvent = false;\n\n    for (var _i = 0, viewSnaps_1 = viewSnaps; _i < viewSnaps_1.length; _i++) {\n      var viewSnap = viewSnaps_1[_i];\n      var query = viewSnap.query;\n      var queryInfo = this.queries.get(query);\n\n      if (queryInfo) {\n        for (var _a = 0, _b = queryInfo.listeners; _a < _b.length; _a++) {\n          var listener = _b[_a];\n\n          if (listener.onViewSnapshot(viewSnap)) {\n            raisedEvent = true;\n          }\n        }\n\n        queryInfo.viewSnap = viewSnap;\n      }\n    }\n\n    if (raisedEvent) {\n      this.raiseSnapshotsInSyncEvent();\n    }\n  };\n\n  EventManager.prototype.onWatchError = function (query, error) {\n    var queryInfo = this.queries.get(query);\n\n    if (queryInfo) {\n      for (var _i = 0, _a = queryInfo.listeners; _i < _a.length; _i++) {\n        var listener = _a[_i];\n        listener.onError(error);\n      }\n    } // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()\n    // after an error.\n\n\n    this.queries.delete(query);\n  };\n\n  EventManager.prototype.onOnlineStateChange = function (onlineState) {\n    this.onlineState = onlineState;\n    var raisedEvent = false;\n    this.queries.forEach(function (_, queryInfo) {\n      for (var _i = 0, _a = queryInfo.listeners; _i < _a.length; _i++) {\n        var listener = _a[_i]; // Run global snapshot listeners if a consistent snapshot has been emitted.\n\n        if (listener.applyOnlineStateChange(onlineState)) {\n          raisedEvent = true;\n        }\n      }\n    });\n\n    if (raisedEvent) {\n      this.raiseSnapshotsInSyncEvent();\n    }\n  };\n\n  EventManager.prototype.addSnapshotsInSyncListener = function (observer) {\n    this.snapshotsInSyncListeners.add(observer); // Immediately fire an initial event, indicating all existing listeners\n    // are in-sync.\n\n    observer.next();\n  };\n\n  EventManager.prototype.removeSnapshotsInSyncListener = function (observer) {\n    this.snapshotsInSyncListeners.delete(observer);\n  }; // Call all global snapshot listeners that have been set.\n\n\n  EventManager.prototype.raiseSnapshotsInSyncEvent = function () {\n    this.snapshotsInSyncListeners.forEach(function (observer) {\n      observer.next();\n    });\n  };\n\n  return EventManager;\n}();\n/**\r\n * QueryListener takes a series of internal view snapshots and determines\r\n * when to raise the event.\r\n *\r\n * It uses an Observer to dispatch events.\r\n */\n\n\nvar QueryListener =\n/** @class */\nfunction () {\n  function QueryListener(query, queryObserver, options) {\n    this.query = query;\n    this.queryObserver = queryObserver;\n    /**\r\n     * Initial snapshots (e.g. from cache) may not be propagated to the wrapped\r\n     * observer. This flag is set to true once we've actually raised an event.\r\n     */\n\n    this.raisedInitialEvent = false;\n    this.snap = null;\n    this.onlineState = OnlineState.Unknown;\n    this.options = options || {};\n  }\n  /**\r\n   * Applies the new ViewSnapshot to this listener, raising a user-facing event\r\n   * if applicable (depending on what changed, whether the user has opted into\r\n   * metadata-only changes, etc.). Returns true if a user-facing event was\r\n   * indeed raised.\r\n   */\n\n\n  QueryListener.prototype.onViewSnapshot = function (snap) {\n    assert(snap.docChanges.length > 0 || snap.syncStateChanged, 'We got a new snapshot with no changes?');\n\n    if (!this.options.includeMetadataChanges) {\n      // Remove the metadata only changes.\n      var docChanges = [];\n\n      for (var _i = 0, _a = snap.docChanges; _i < _a.length; _i++) {\n        var docChange = _a[_i];\n\n        if (docChange.type !== ChangeType.Metadata) {\n          docChanges.push(docChange);\n        }\n      }\n\n      snap = new ViewSnapshot(snap.query, snap.docs, snap.oldDocs, docChanges, snap.mutatedKeys, snap.fromCache, snap.syncStateChanged,\n      /* excludesMetadataChanges= */\n      true);\n    }\n\n    var raisedEvent = false;\n\n    if (!this.raisedInitialEvent) {\n      if (this.shouldRaiseInitialEvent(snap, this.onlineState)) {\n        this.raiseInitialEvent(snap);\n        raisedEvent = true;\n      }\n    } else if (this.shouldRaiseEvent(snap)) {\n      this.queryObserver.next(snap);\n      raisedEvent = true;\n    }\n\n    this.snap = snap;\n    return raisedEvent;\n  };\n\n  QueryListener.prototype.onError = function (error) {\n    this.queryObserver.error(error);\n  };\n  /** Returns whether a snapshot was raised. */\n\n\n  QueryListener.prototype.applyOnlineStateChange = function (onlineState) {\n    this.onlineState = onlineState;\n    var raisedEvent = false;\n\n    if (this.snap && !this.raisedInitialEvent && this.shouldRaiseInitialEvent(this.snap, onlineState)) {\n      this.raiseInitialEvent(this.snap);\n      raisedEvent = true;\n    }\n\n    return raisedEvent;\n  };\n\n  QueryListener.prototype.shouldRaiseInitialEvent = function (snap, onlineState) {\n    assert(!this.raisedInitialEvent, 'Determining whether to raise first event but already had first event'); // Always raise the first event when we're synced\n\n    if (!snap.fromCache) {\n      return true;\n    } // NOTE: We consider OnlineState.Unknown as online (it should become Offline\n    // or Online if we wait long enough).\n\n\n    var maybeOnline = onlineState !== OnlineState.Offline; // Don't raise the event if we're online, aren't synced yet (checked\n    // above) and are waiting for a sync.\n\n    if (this.options.waitForSyncWhenOnline && maybeOnline) {\n      assert(snap.fromCache, 'Waiting for sync, but snapshot is not from cache');\n      return false;\n    } // Raise data from cache if we have any documents or we are offline\n\n\n    return !snap.docs.isEmpty() || onlineState === OnlineState.Offline;\n  };\n\n  QueryListener.prototype.shouldRaiseEvent = function (snap) {\n    // We don't need to handle includeDocumentMetadataChanges here because\n    // the Metadata only changes have already been stripped out if needed.\n    // At this point the only changes we will see are the ones we should\n    // propagate.\n    if (snap.docChanges.length > 0) {\n      return true;\n    }\n\n    var hasPendingWritesChanged = this.snap && this.snap.hasPendingWrites !== snap.hasPendingWrites;\n\n    if (snap.syncStateChanged || hasPendingWritesChanged) {\n      return this.options.includeMetadataChanges === true;\n    } // Generally we should have hit one of the cases above, but it's possible\n    // to get here if there were only metadata docChanges and they got\n    // stripped out.\n\n\n    return false;\n  };\n\n  QueryListener.prototype.raiseInitialEvent = function (snap) {\n    assert(!this.raisedInitialEvent, 'Trying to raise initial events for second time');\n    snap = ViewSnapshot.fromInitialDocuments(snap.query, snap.docs, snap.mutatedKeys, snap.fromCache);\n    this.raisedInitialEvent = true;\n    this.queryObserver.next(snap);\n  };\n\n  return QueryListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A set of changes to what documents are currently in view and out of view for\r\n * a given query. These changes are sent to the LocalStore by the View (via\r\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\r\n */\n\n\nvar LocalViewChanges =\n/** @class */\nfunction () {\n  function LocalViewChanges(targetId, addedKeys, removedKeys) {\n    this.targetId = targetId;\n    this.addedKeys = addedKeys;\n    this.removedKeys = removedKeys;\n  }\n\n  LocalViewChanges.fromSnapshot = function (targetId, viewSnapshot) {\n    var addedKeys = documentKeySet();\n    var removedKeys = documentKeySet();\n\n    for (var _i = 0, _a = viewSnapshot.docChanges; _i < _a.length; _i++) {\n      var docChange = _a[_i];\n\n      switch (docChange.type) {\n        case ChangeType.Added:\n          addedKeys = addedKeys.add(docChange.doc.key);\n          break;\n\n        case ChangeType.Removed:\n          removedKeys = removedKeys.add(docChange.doc.key);\n          break;\n\n        default: // do nothing\n\n      }\n    }\n\n    return new LocalViewChanges(targetId, addedKeys, removedKeys);\n  };\n\n  return LocalViewChanges;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AddedLimboDocument =\n/** @class */\nfunction () {\n  function AddedLimboDocument(key) {\n    this.key = key;\n  }\n\n  return AddedLimboDocument;\n}();\n\nvar RemovedLimboDocument =\n/** @class */\nfunction () {\n  function RemovedLimboDocument(key) {\n    this.key = key;\n  }\n\n  return RemovedLimboDocument;\n}();\n/**\r\n * View is responsible for computing the final merged truth of what docs are in\r\n * a query. It gets notified of local and remote changes to docs, and applies\r\n * the query filters and limits to determine the most correct possible results.\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  function View(query,\n  /** Documents included in the remote target */\n  _syncedDocuments) {\n    this.query = query;\n    this._syncedDocuments = _syncedDocuments;\n    this.syncState = null;\n    /**\r\n     * A flag whether the view is current with the backend. A view is considered\r\n     * current after it has seen the current flag from the backend and did not\r\n     * lose consistency within the watch stream (e.g. because of an existence\r\n     * filter mismatch).\r\n     */\n\n    this.current = false;\n    /** Documents in the view but not in the remote target */\n\n    this.limboDocuments = documentKeySet();\n    /** Document Keys that have local changes */\n\n    this.mutatedKeys = documentKeySet();\n    this.documentSet = new DocumentSet(query.docComparator.bind(query));\n  }\n\n  Object.defineProperty(View.prototype, \"syncedDocuments\", {\n    /**\r\n     * The set of remote documents that the server has told us belongs to the target associated with\r\n     * this view.\r\n     */\n    get: function get() {\n      return this._syncedDocuments;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Iterates over a set of doc changes, applies the query limit, and computes\r\n   * what the new results should be, what the changes were, and whether we may\r\n   * need to go back to the local cache for more results. Does not make any\r\n   * changes to the view.\r\n   * @param docChanges The doc changes to apply to this view.\r\n   * @param previousChanges If this is being called with a refill, then start\r\n   *        with this set of docs and changes instead of the current view.\r\n   * @return a new set of docs, changes, and refill flag.\r\n   */\n\n  View.prototype.computeDocChanges = function (docChanges, previousChanges) {\n    var _this = this;\n\n    var changeSet = previousChanges ? previousChanges.changeSet : new DocumentChangeSet();\n    var oldDocumentSet = previousChanges ? previousChanges.documentSet : this.documentSet;\n    var newMutatedKeys = previousChanges ? previousChanges.mutatedKeys : this.mutatedKeys;\n    var newDocumentSet = oldDocumentSet;\n    var needsRefill = false; // Track the last doc in a (full) limit. This is necessary, because some\n    // update (a delete, or an update moving a doc past the old limit) might\n    // mean there is some other document in the local cache that either should\n    // come (1) between the old last limit doc and the new last document, in the\n    // case of updates, or (2) after the new last document, in the case of\n    // deletes. So we keep this doc at the old limit to compare the updates to.\n    //\n    // Note that this should never get used in a refill (when previousChanges is\n    // set), because there will only be adds -- no deletes or updates.\n\n    var lastDocInLimit = this.query.hasLimit() && oldDocumentSet.size === this.query.limit ? oldDocumentSet.last() : null;\n    docChanges.inorderTraversal(function (key, newMaybeDoc) {\n      var oldDoc = oldDocumentSet.get(key);\n      var newDoc = newMaybeDoc instanceof Document ? newMaybeDoc : null;\n\n      if (newDoc) {\n        assert(key.isEqual(newDoc.key), 'Mismatching keys found in document changes: ' + key + ' != ' + newDoc.key);\n        newDoc = _this.query.matches(newDoc) ? newDoc : null;\n      }\n\n      var oldDocHadPendingMutations = oldDoc ? _this.mutatedKeys.has(oldDoc.key) : false;\n      var newDocHasPendingMutations = newDoc ? newDoc.hasLocalMutations || // We only consider committed mutations for documents that were\n      // mutated during the lifetime of the view.\n      _this.mutatedKeys.has(newDoc.key) && newDoc.hasCommittedMutations : false;\n      var changeApplied = false; // Calculate change\n\n      if (oldDoc && newDoc) {\n        var docsEqual = oldDoc.data().isEqual(newDoc.data());\n\n        if (!docsEqual) {\n          if (!_this.shouldWaitForSyncedDocument(oldDoc, newDoc)) {\n            changeSet.track({\n              type: ChangeType.Modified,\n              doc: newDoc\n            });\n            changeApplied = true;\n\n            if (lastDocInLimit && _this.query.docComparator(newDoc, lastDocInLimit) > 0) {\n              // This doc moved from inside the limit to after the limit.\n              // That means there may be some doc in the local cache that's\n              // actually less than this one.\n              needsRefill = true;\n            }\n          }\n        } else if (oldDocHadPendingMutations !== newDocHasPendingMutations) {\n          changeSet.track({\n            type: ChangeType.Metadata,\n            doc: newDoc\n          });\n          changeApplied = true;\n        }\n      } else if (!oldDoc && newDoc) {\n        changeSet.track({\n          type: ChangeType.Added,\n          doc: newDoc\n        });\n        changeApplied = true;\n      } else if (oldDoc && !newDoc) {\n        changeSet.track({\n          type: ChangeType.Removed,\n          doc: oldDoc\n        });\n        changeApplied = true;\n\n        if (lastDocInLimit) {\n          // A doc was removed from a full limit query. We'll need to\n          // requery from the local cache to see if we know about some other\n          // doc that should be in the results.\n          needsRefill = true;\n        }\n      }\n\n      if (changeApplied) {\n        if (newDoc) {\n          newDocumentSet = newDocumentSet.add(newDoc);\n\n          if (newDocHasPendingMutations) {\n            newMutatedKeys = newMutatedKeys.add(key);\n          } else {\n            newMutatedKeys = newMutatedKeys.delete(key);\n          }\n        } else {\n          newDocumentSet = newDocumentSet.delete(key);\n          newMutatedKeys = newMutatedKeys.delete(key);\n        }\n      }\n    });\n\n    if (this.query.hasLimit()) {\n      while (newDocumentSet.size > this.query.limit) {\n        var oldDoc = newDocumentSet.last();\n        newDocumentSet = newDocumentSet.delete(oldDoc.key);\n        newMutatedKeys = newMutatedKeys.delete(oldDoc.key);\n        changeSet.track({\n          type: ChangeType.Removed,\n          doc: oldDoc\n        });\n      }\n    }\n\n    assert(!needsRefill || !previousChanges, 'View was refilled using docs that themselves needed refilling.');\n    return {\n      documentSet: newDocumentSet,\n      changeSet: changeSet,\n      needsRefill: needsRefill,\n      mutatedKeys: newMutatedKeys\n    };\n  };\n\n  View.prototype.shouldWaitForSyncedDocument = function (oldDoc, newDoc) {\n    // We suppress the initial change event for documents that were modified as\n    // part of a write acknowledgment (e.g. when the value of a server transform\n    // is applied) as Watch will send us the same document again.\n    // By suppressing the event, we only raise two user visible events (one with\n    // `hasPendingWrites` and the final state of the document) instead of three\n    // (one with `hasPendingWrites`, the modified document with\n    // `hasPendingWrites` and the final state of the document).\n    return oldDoc.hasLocalMutations && newDoc.hasCommittedMutations && !newDoc.hasLocalMutations;\n  };\n  /**\r\n   * Updates the view with the given ViewDocumentChanges and optionally updates\r\n   * limbo docs and sync state from the provided target change.\r\n   * @param docChanges The set of changes to make to the view's docs.\r\n   * @param updateLimboDocuments Whether to update limbo documents based on this\r\n   *        change.\r\n   * @param targetChange A target change to apply for computing limbo docs and\r\n   *        sync state.\r\n   * @return A new ViewChange with the given docs, changes, and sync state.\r\n   */\n  // PORTING NOTE: The iOS/Android clients always compute limbo document changes.\n\n\n  View.prototype.applyChanges = function (docChanges, updateLimboDocuments, targetChange) {\n    var _this = this;\n\n    assert(!docChanges.needsRefill, 'Cannot apply changes that need a refill');\n    var oldDocs = this.documentSet;\n    this.documentSet = docChanges.documentSet;\n    this.mutatedKeys = docChanges.mutatedKeys; // Sort changes based on type and query comparator\n\n    var changes = docChanges.changeSet.getChanges();\n    changes.sort(function (c1, c2) {\n      return compareChangeType(c1.type, c2.type) || _this.query.docComparator(c1.doc, c2.doc);\n    });\n    this.applyTargetChange(targetChange);\n    var limboChanges = updateLimboDocuments ? this.updateLimboDocuments() : [];\n    var synced = this.limboDocuments.size === 0 && this.current;\n    var newSyncState = synced ? SyncState.Synced : SyncState.Local;\n    var syncStateChanged = newSyncState !== this.syncState;\n    this.syncState = newSyncState;\n\n    if (changes.length === 0 && !syncStateChanged) {\n      // no changes\n      return {\n        limboChanges: limboChanges\n      };\n    } else {\n      var snap = new ViewSnapshot(this.query, docChanges.documentSet, oldDocs, changes, docChanges.mutatedKeys, newSyncState === SyncState.Local, syncStateChanged,\n      /* excludesMetadataChanges= */\n      false);\n      return {\n        snapshot: snap,\n        limboChanges: limboChanges\n      };\n    }\n  };\n  /**\r\n   * Applies an OnlineState change to the view, potentially generating a\r\n   * ViewChange if the view's syncState changes as a result.\r\n   */\n\n\n  View.prototype.applyOnlineStateChange = function (onlineState) {\n    if (this.current && onlineState === OnlineState.Offline) {\n      // If we're offline, set `current` to false and then call applyChanges()\n      // to refresh our syncState and generate a ViewChange as appropriate. We\n      // are guaranteed to get a new TargetChange that sets `current` back to\n      // true once the client is back online.\n      this.current = false;\n      return this.applyChanges({\n        documentSet: this.documentSet,\n        changeSet: new DocumentChangeSet(),\n        mutatedKeys: this.mutatedKeys,\n        needsRefill: false\n      },\n      /* updateLimboDocuments= */\n      false);\n    } else {\n      // No effect, just return a no-op ViewChange.\n      return {\n        limboChanges: []\n      };\n    }\n  };\n  /**\r\n   * Returns whether the doc for the given key should be in limbo.\r\n   */\n\n\n  View.prototype.shouldBeInLimbo = function (key) {\n    // If the remote end says it's part of this query, it's not in limbo.\n    if (this._syncedDocuments.has(key)) {\n      return false;\n    } // The local store doesn't think it's a result, so it shouldn't be in limbo.\n\n\n    if (!this.documentSet.has(key)) {\n      return false;\n    } // If there are local changes to the doc, they might explain why the server\n    // doesn't know that it's part of the query. So don't put it in limbo.\n    // TODO(klimt): Ideally, we would only consider changes that might actually\n    // affect this specific query.\n\n\n    if (this.documentSet.get(key).hasLocalMutations) {\n      return false;\n    } // Everything else is in limbo.\n\n\n    return true;\n  };\n  /**\r\n   * Updates syncedDocuments, current, and limbo docs based on the given change.\r\n   * Returns the list of changes to which docs are in limbo.\r\n   */\n\n\n  View.prototype.applyTargetChange = function (targetChange) {\n    var _this = this;\n\n    if (targetChange) {\n      targetChange.addedDocuments.forEach(function (key) {\n        return _this._syncedDocuments = _this._syncedDocuments.add(key);\n      });\n      targetChange.modifiedDocuments.forEach(function (key) {\n        return assert(_this._syncedDocuments.has(key), \"Modified document \" + key + \" not found in view.\");\n      });\n      targetChange.removedDocuments.forEach(function (key) {\n        return _this._syncedDocuments = _this._syncedDocuments.delete(key);\n      });\n      this.current = targetChange.current;\n    }\n  };\n\n  View.prototype.updateLimboDocuments = function () {\n    var _this = this; // We can only determine limbo documents when we're in-sync with the server.\n\n\n    if (!this.current) {\n      return [];\n    } // TODO(klimt): Do this incrementally so that it's not quadratic when\n    // updating many documents.\n\n\n    var oldLimboDocuments = this.limboDocuments;\n    this.limboDocuments = documentKeySet();\n    this.documentSet.forEach(function (doc) {\n      if (_this.shouldBeInLimbo(doc.key)) {\n        _this.limboDocuments = _this.limboDocuments.add(doc.key);\n      }\n    }); // Diff the new limbo docs with the old limbo docs.\n\n    var changes = [];\n    oldLimboDocuments.forEach(function (key) {\n      if (!_this.limboDocuments.has(key)) {\n        changes.push(new RemovedLimboDocument(key));\n      }\n    });\n    this.limboDocuments.forEach(function (key) {\n      if (!oldLimboDocuments.has(key)) {\n        changes.push(new AddedLimboDocument(key));\n      }\n    });\n    return changes;\n  };\n  /**\r\n   * Update the in-memory state of the current view with the state read from\r\n   * persistence.\r\n   *\r\n   * We update the query view whenever a client's primary status changes:\r\n   * - When a client transitions from primary to secondary, it can miss\r\n   *   LocalStorage updates and its query views may temporarily not be\r\n   *   synchronized with the state on disk.\r\n   * - For secondary to primary transitions, the client needs to update the list\r\n   *   of `syncedDocuments` since secondary clients update their query views\r\n   *   based purely on synthesized RemoteEvents.\r\n   *\r\n   * @param localDocs - The documents that match the query according to the\r\n   * LocalStore.\r\n   * @param remoteKeys - The keys of the documents that match the query\r\n   * according to the backend.\r\n   *\r\n   * @return The ViewChange that resulted from this synchronization.\r\n   */\n  // PORTING NOTE: Multi-tab only.\n\n\n  View.prototype.synchronizeWithPersistedState = function (localDocs, remoteKeys) {\n    this._syncedDocuments = remoteKeys;\n    this.limboDocuments = documentKeySet();\n    var docChanges = this.computeDocChanges(localDocs);\n    return this.applyChanges(docChanges,\n    /*updateLimboDocuments=*/\n    true);\n  };\n  /**\r\n   * Returns a view snapshot as if this query was just listened to. Contains\r\n   * a document add for every existing document and the `fromCache` and\r\n   * `hasPendingWrites` status of the already established view.\r\n   */\n  // PORTING NOTE: Multi-tab only.\n\n\n  View.prototype.computeInitialSnapshot = function () {\n    return ViewSnapshot.fromInitialDocuments(this.query, this.documentSet, this.mutatedKeys, this.syncState === SyncState.Local);\n  };\n\n  return View;\n}();\n\nfunction compareChangeType(c1, c2) {\n  var order = function order(change) {\n    switch (change) {\n      case ChangeType.Added:\n        return 1;\n\n      case ChangeType.Modified:\n        return 2;\n\n      case ChangeType.Metadata:\n        // A metadata change is converted to a modified change at the public\n        // api layer.  Since we sort by document key and then change type,\n        // metadata and modified changes must be sorted equivalently.\n        return 2;\n\n      case ChangeType.Removed:\n        return 0;\n\n      default:\n        return fail('Unknown ChangeType: ' + change);\n    }\n  };\n\n  return order(c1) - order(c2);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RETRY_COUNT = 5;\n/**\r\n * TransactionRunner encapsulates the logic needed to run and retry transactions\r\n * with backoff.\r\n */\n\nvar TransactionRunner =\n/** @class */\nfunction () {\n  function TransactionRunner(asyncQueue, remoteStore, updateFunction, deferred) {\n    this.asyncQueue = asyncQueue;\n    this.remoteStore = remoteStore;\n    this.updateFunction = updateFunction;\n    this.deferred = deferred;\n    this.retries = RETRY_COUNT;\n    this.backoff = new ExponentialBackoff(this.asyncQueue, TimerId.RetryTransaction);\n  }\n  /** Runs the transaction and sets the result on deferred. */\n\n\n  TransactionRunner.prototype.run = function () {\n    this.runWithBackOff();\n  };\n\n  TransactionRunner.prototype.runWithBackOff = function () {\n    var _this = this;\n\n    this.backoff.backoffAndRun(function () {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var transaction, userPromise;\n\n        var _this = this;\n\n        return tslib_1.__generator(this, function (_a) {\n          transaction = this.remoteStore.createTransaction();\n          userPromise = this.tryRunUpdateFunction(transaction);\n\n          if (userPromise) {\n            userPromise.then(function (result) {\n              _this.asyncQueue.enqueueAndForget(function () {\n                return transaction.commit().then(function () {\n                  _this.deferred.resolve(result);\n                }).catch(function (commitError) {\n                  _this.handleTransactionError(commitError);\n                });\n              });\n            }).catch(function (userPromiseError) {\n              _this.handleTransactionError(userPromiseError);\n            });\n          }\n\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    });\n  };\n\n  TransactionRunner.prototype.tryRunUpdateFunction = function (transaction) {\n    try {\n      var userPromise = this.updateFunction(transaction);\n\n      if (isNullOrUndefined(userPromise) || !userPromise.catch || !userPromise.then) {\n        this.deferred.reject(Error('Transaction callback must return a Promise'));\n        return null;\n      }\n\n      return userPromise;\n    } catch (error) {\n      // Do not retry errors thrown by user provided updateFunction.\n      this.deferred.reject(error);\n      return null;\n    }\n  };\n\n  TransactionRunner.prototype.handleTransactionError = function (error) {\n    var _this = this;\n\n    if (this.retries > 0 && this.isRetryableTransactionError(error)) {\n      this.retries -= 1;\n      this.asyncQueue.enqueueAndForget(function () {\n        _this.runWithBackOff();\n\n        return Promise.resolve();\n      });\n    } else {\n      this.deferred.reject(error);\n    }\n  };\n\n  TransactionRunner.prototype.isRetryableTransactionError = function (error) {\n    if (error.name === 'FirebaseError') {\n      // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n      // non-matching document versions with ABORTED. These errors should be retried.\n      var code = error.code;\n      return code === 'aborted' || code === 'failed-precondition' || !isPermanentError(code);\n    }\n\n    return false;\n  };\n\n  return TransactionRunner;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_TAG$9 = 'SyncEngine';\n/**\r\n * QueryView contains all of the data that SyncEngine needs to keep track of for\r\n * a particular query.\r\n */\n\nvar QueryView =\n/** @class */\nfunction () {\n  function QueryView(\n  /**\r\n   * The query itself.\r\n   */\n  query,\n  /**\r\n   * The target number created by the client that is used in the watch\r\n   * stream to identify this query.\r\n   */\n  targetId,\n  /**\r\n   * The view is responsible for computing the final merged truth of what\r\n   * docs are in the query. It gets notified of local and remote changes,\r\n   * and applies the query filters and limits to determine the most correct\r\n   * possible results.\r\n   */\n  view) {\n    this.query = query;\n    this.targetId = targetId;\n    this.view = view;\n  }\n\n  return QueryView;\n}();\n/** Tracks a limbo resolution. */\n\n\nvar LimboResolution =\n/** @class */\nfunction () {\n  function LimboResolution(key) {\n    this.key = key;\n    /**\r\n     * Set to true once we've received a document. This is used in\r\n     * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to\r\n     * decide whether it needs to manufacture a delete event for the target once\r\n     * the target is CURRENT.\r\n     */\n\n    this.receivedDocument = false;\n  }\n\n  return LimboResolution;\n}();\n/**\r\n * SyncEngine is the central controller in the client SDK architecture. It is\r\n * the glue code between the EventManager, LocalStore, and RemoteStore. Some of\r\n * SyncEngine's responsibilities include:\r\n * 1. Coordinating client requests and remote events between the EventManager\r\n *    and the local and remote data stores.\r\n * 2. Managing a View object for each query, providing the unified view between\r\n *    the local and remote data stores.\r\n * 3. Notifying the RemoteStore when the LocalStore has new mutations in its\r\n *    queue that need sending to the backend.\r\n *\r\n * The SyncEngine’s methods should only ever be called by methods running in the\r\n * global async queue.\r\n */\n\n\nvar SyncEngine =\n/** @class */\nfunction () {\n  function SyncEngine(localStore, remoteStore, // PORTING NOTE: Manages state synchronization in multi-tab environments.\n  sharedClientState, currentUser) {\n    this.localStore = localStore;\n    this.remoteStore = remoteStore;\n    this.sharedClientState = sharedClientState;\n    this.currentUser = currentUser;\n    this.syncEngineListener = null;\n    this.queryViewsByQuery = new ObjectMap(function (q) {\n      return q.canonicalId();\n    });\n    this.queryViewsByTarget = {};\n    this.limboTargetsByKey = new SortedMap(DocumentKey.comparator);\n    this.limboResolutionsByTarget = {};\n    this.limboDocumentRefs = new ReferenceSet();\n    /** Stores user completion handlers, indexed by User and BatchId. */\n\n    this.mutationUserCallbacks = {};\n    /** Stores user callbacks waiting for all pending writes to be acknowledged. */\n\n    this.pendingWritesCallbacks = new Map();\n    this.limboTargetIdGenerator = TargetIdGenerator.forSyncEngine(); // The primary state is set to `true` or `false` immediately after Firestore\n    // startup. In the interim, a client should only be considered primary if\n    // `isPrimary` is true.\n\n    this.isPrimary = undefined;\n    this.onlineState = OnlineState.Unknown;\n  }\n\n  Object.defineProperty(SyncEngine.prototype, \"isPrimaryClient\", {\n    // Only used for testing.\n    get: function get() {\n      return this.isPrimary === true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** Subscribes to SyncEngine notifications. Has to be called exactly once. */\n\n  SyncEngine.prototype.subscribe = function (syncEngineListener) {\n    assert(syncEngineListener !== null, 'SyncEngine listener cannot be null');\n    assert(this.syncEngineListener === null, 'SyncEngine already has a subscriber.');\n    this.syncEngineListener = syncEngineListener;\n  };\n  /**\r\n   * Initiates the new listen, resolves promise when listen enqueued to the\r\n   * server. All the subsequent view snapshots or errors are sent to the\r\n   * subscribed handlers. Returns the targetId of the query.\r\n   */\n\n\n  SyncEngine.prototype.listen = function (query) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var targetId, viewSnapshot, queryView, queryData, status_1;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.assertSubscribed('listen()');\n            queryView = this.queryViewsByQuery.get(query);\n            if (!queryView) return [3\n            /*break*/\n            , 1]; // PORTING NOTE: With Multi-Tab Web, it is possible that a query view\n            // already exists when EventManager calls us for the first time. This\n            // happens when the primary tab is already listening to this query on\n            // behalf of another tab and the user of the primary also starts listening\n            // to the query. EventManager will not have an assigned target ID in this\n            // case and calls `listen` to obtain this ID.\n\n            targetId = queryView.targetId;\n            this.sharedClientState.addLocalQueryTarget(targetId);\n            viewSnapshot = queryView.view.computeInitialSnapshot();\n            return [3\n            /*break*/\n            , 4];\n\n          case 1:\n            return [4\n            /*yield*/\n            , this.localStore.allocateQuery(query)];\n\n          case 2:\n            queryData = _a.sent();\n            status_1 = this.sharedClientState.addLocalQueryTarget(queryData.targetId);\n            targetId = queryData.targetId;\n            return [4\n            /*yield*/\n            , this.initializeViewAndComputeSnapshot(queryData, status_1 === 'current')];\n\n          case 3:\n            viewSnapshot = _a.sent();\n\n            if (this.isPrimary) {\n              this.remoteStore.listen(queryData);\n            }\n\n            _a.label = 4;\n\n          case 4:\n            this.syncEngineListener.onWatchChange([viewSnapshot]);\n            return [2\n            /*return*/\n            , targetId];\n        }\n      });\n    });\n  };\n  /**\r\n   * Registers a view for a previously unknown query and computes its initial\r\n   * snapshot.\r\n   */\n\n\n  SyncEngine.prototype.initializeViewAndComputeSnapshot = function (queryData, current) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var query, docs, remoteKeys, view, viewDocChanges, synthesizedTargetChange, viewChange, data;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            query = queryData.query;\n            return [4\n            /*yield*/\n            , this.localStore.executeQuery(query)];\n\n          case 1:\n            docs = _a.sent();\n            return [4\n            /*yield*/\n            , this.localStore.remoteDocumentKeys(queryData.targetId)];\n\n          case 2:\n            remoteKeys = _a.sent();\n            view = new View(query, remoteKeys);\n            viewDocChanges = view.computeDocChanges(docs);\n            synthesizedTargetChange = TargetChange.createSynthesizedTargetChangeForCurrentChange(queryData.targetId, current && this.onlineState !== OnlineState.Offline);\n            viewChange = view.applyChanges(viewDocChanges,\n            /* updateLimboDocuments= */\n            this.isPrimary === true, synthesizedTargetChange);\n            assert(viewChange.limboChanges.length === 0, 'View returned limbo docs before target ack from the server.');\n            assert(!!viewChange.snapshot, 'applyChanges for new view should always return a snapshot');\n            data = new QueryView(query, queryData.targetId, view);\n            this.queryViewsByQuery.set(query, data);\n            this.queryViewsByTarget[queryData.targetId] = data;\n            return [2\n            /*return*/\n            , viewChange.snapshot];\n        }\n      });\n    });\n  };\n  /**\r\n   * Reconcile the list of synced documents in an existing view with those\r\n   * from persistence.\r\n   */\n  // PORTING NOTE: Multi-tab only.\n\n\n  SyncEngine.prototype.synchronizeViewAndComputeSnapshot = function (queryView) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var docs, remoteKeys, viewSnapshot;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.localStore.executeQuery(queryView.query)];\n\n          case 1:\n            docs = _a.sent();\n            return [4\n            /*yield*/\n            , this.localStore.remoteDocumentKeys(queryView.targetId)];\n\n          case 2:\n            remoteKeys = _a.sent();\n            viewSnapshot = queryView.view.synchronizeWithPersistedState(docs, remoteKeys);\n\n            if (this.isPrimary) {\n              this.updateTrackedLimbos(queryView.targetId, viewSnapshot.limboChanges);\n            }\n\n            return [2\n            /*return*/\n            , viewSnapshot];\n        }\n      });\n    });\n  };\n  /** Stops listening to the query. */\n\n\n  SyncEngine.prototype.unlisten = function (query) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var queryView, targetRemainsActive;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.assertSubscribed('unlisten()');\n            queryView = this.queryViewsByQuery.get(query);\n            assert(!!queryView, 'Trying to unlisten on query not found:' + query);\n            if (!this.isPrimary) return [3\n            /*break*/\n            , 3]; // We need to remove the local query target first to allow us to verify\n            // whether any other client is still interested in this target.\n\n            this.sharedClientState.removeLocalQueryTarget(queryView.targetId);\n            targetRemainsActive = this.sharedClientState.isActiveQueryTarget(queryView.targetId);\n            if (!!targetRemainsActive) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.localStore.releaseQuery(query,\n            /*keepPersistedQueryData=*/\n            false).then(function () {\n              _this.sharedClientState.clearQueryState(queryView.targetId);\n\n              _this.remoteStore.unlisten(queryView.targetId);\n\n              _this.removeAndCleanupQuery(queryView);\n            }).catch(ignoreIfPrimaryLeaseLoss)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            this.removeAndCleanupQuery(queryView);\n            return [4\n            /*yield*/\n            , this.localStore.releaseQuery(query,\n            /*keepPersistedQueryData=*/\n            true)];\n\n          case 4:\n            _a.sent();\n\n            _a.label = 5;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Initiates the write of local mutation batch which involves adding the\r\n   * writes to the mutation queue, notifying the remote store about new\r\n   * mutations and raising events for any changes this write caused.\r\n   *\r\n   * The promise returned by this call is resolved when the above steps\r\n   * have completed, *not* when the write was acked by the backend. The\r\n   * userCallback is resolved once the write was acked/rejected by the\r\n   * backend (or failed locally for any other reason).\r\n   */\n\n\n  SyncEngine.prototype.write = function (batch, userCallback) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var result;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.assertSubscribed('write()');\n            return [4\n            /*yield*/\n            , this.localStore.localWrite(batch)];\n\n          case 1:\n            result = _a.sent();\n            this.sharedClientState.addPendingMutation(result.batchId);\n            this.addMutationCallback(result.batchId, userCallback);\n            return [4\n            /*yield*/\n            , this.emitNewSnapsAndNotifyLocalStore(result.changes)];\n\n          case 2:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.remoteStore.fillWritePipeline()];\n\n          case 3:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Takes an updateFunction in which a set of reads and writes can be performed\r\n   * atomically. In the updateFunction, the client can read and write values\r\n   * using the supplied transaction object. After the updateFunction, all\r\n   * changes will be committed. If a retryable error occurs (ex: some other\r\n   * client has changed any of the data referenced), then the updateFunction\r\n   * will be called again after a backoff. If the updateFunction still fails\r\n   * after all retries, then the transaction will be rejected.\r\n   *\r\n   * The transaction object passed to the updateFunction contains methods for\r\n   * accessing documents and collections. Unlike other datastore access, data\r\n   * accessed with the transaction will not reflect local changes that have not\r\n   * been committed. For this reason, it is required that all reads are\r\n   * performed before any writes. Transactions must be performed while online.\r\n   *\r\n   * The Deferred input is resolved when the transaction is fully committed.\r\n   */\n\n\n  SyncEngine.prototype.runTransaction = function (asyncQueue, updateFunction, deferred) {\n    new TransactionRunner(asyncQueue, this.remoteStore, updateFunction, deferred).run();\n  };\n\n  SyncEngine.prototype.applyRemoteEvent = function (remoteEvent) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var changes, error_1;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.assertSubscribed('applyRemoteEvent()');\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 6]);\n\n            return [4\n            /*yield*/\n            , this.localStore.applyRemoteEvent(remoteEvent)];\n\n          case 2:\n            changes = _a.sent(); // Update `receivedDocument` as appropriate for any limbo targets.\n\n            forEach(remoteEvent.targetChanges, function (targetId, targetChange) {\n              var limboResolution = _this.limboResolutionsByTarget[Number(targetId)];\n\n              if (limboResolution) {\n                // Since this is a limbo resolution lookup, it's for a single document\n                // and it could be added, modified, or removed, but not a combination.\n                assert(targetChange.addedDocuments.size + targetChange.modifiedDocuments.size + targetChange.removedDocuments.size <= 1, 'Limbo resolution for single document contains multiple changes.');\n\n                if (targetChange.addedDocuments.size > 0) {\n                  limboResolution.receivedDocument = true;\n                } else if (targetChange.modifiedDocuments.size > 0) {\n                  assert(limboResolution.receivedDocument, 'Received change for limbo target document without add.');\n                } else if (targetChange.removedDocuments.size > 0) {\n                  assert(limboResolution.receivedDocument, 'Received remove for limbo target document without add.');\n                  limboResolution.receivedDocument = false;\n                }\n              }\n            });\n            return [4\n            /*yield*/\n            , this.emitNewSnapsAndNotifyLocalStore(changes, remoteEvent)];\n\n          case 3:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 4:\n            error_1 = _a.sent();\n            return [4\n            /*yield*/\n            , ignoreIfPrimaryLeaseLoss(error_1)];\n\n          case 5:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Applies an OnlineState change to the sync engine and notifies any views of\r\n   * the change.\r\n   */\n\n\n  SyncEngine.prototype.applyOnlineStateChange = function (onlineState, source) {\n    // If we are the secondary client, we explicitly ignore the remote store's\n    // online state (the local client may go offline, even though the primary\n    // tab remains online) and only apply the primary tab's online state from\n    // SharedClientState.\n    if (this.isPrimary && source === OnlineStateSource.RemoteStore || !this.isPrimary && source === OnlineStateSource.SharedClientState) {\n      this.assertSubscribed('applyOnlineStateChange()');\n      var newViewSnapshots_1 = [];\n      this.queryViewsByQuery.forEach(function (query, queryView) {\n        var viewChange = queryView.view.applyOnlineStateChange(onlineState);\n        assert(viewChange.limboChanges.length === 0, 'OnlineState should not affect limbo documents.');\n\n        if (viewChange.snapshot) {\n          newViewSnapshots_1.push(viewChange.snapshot);\n        }\n      });\n      this.syncEngineListener.onOnlineStateChange(onlineState);\n      this.syncEngineListener.onWatchChange(newViewSnapshots_1);\n      this.onlineState = onlineState;\n\n      if (this.isPrimary) {\n        this.sharedClientState.setOnlineState(onlineState);\n      }\n    }\n  };\n\n  SyncEngine.prototype.rejectListen = function (targetId, err) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var limboResolution, limboKey, documentUpdates, resolvedLimboDocuments, event_1, queryView_1;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.assertSubscribed('rejectListens()'); // PORTING NOTE: Multi-tab only.\n\n            this.sharedClientState.updateQueryState(targetId, 'rejected', err);\n            limboResolution = this.limboResolutionsByTarget[targetId];\n            limboKey = limboResolution && limboResolution.key;\n            if (!limboKey) return [3\n            /*break*/\n            , 1]; // Since this query failed, we won't want to manually unlisten to it.\n            // So go ahead and remove it from bookkeeping.\n\n            this.limboTargetsByKey = this.limboTargetsByKey.remove(limboKey);\n            delete this.limboResolutionsByTarget[targetId];\n            documentUpdates = new SortedMap(DocumentKey.comparator);\n            documentUpdates = documentUpdates.insert(limboKey, new NoDocument(limboKey, SnapshotVersion.forDeletedDoc()));\n            resolvedLimboDocuments = documentKeySet().add(limboKey);\n            event_1 = new RemoteEvent(SnapshotVersion.MIN,\n            /* targetChanges= */\n            {},\n            /* targetMismatches= */\n            new SortedSet(primitiveComparator), documentUpdates, resolvedLimboDocuments);\n            return [2\n            /*return*/\n            , this.applyRemoteEvent(event_1)];\n\n          case 1:\n            queryView_1 = this.queryViewsByTarget[targetId];\n            assert(!!queryView_1, 'Unknown targetId: ' + targetId);\n            return [4\n            /*yield*/\n            , this.localStore.releaseQuery(queryView_1.query,\n            /* keepPersistedQueryData */\n            false).then(function () {\n              return _this.removeAndCleanupQuery(queryView_1);\n            }).catch(ignoreIfPrimaryLeaseLoss)];\n\n          case 2:\n            _a.sent();\n\n            this.syncEngineListener.onWatchError(queryView_1.query, err);\n            _a.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // PORTING NOTE: Multi-tab only\n\n\n  SyncEngine.prototype.applyBatchState = function (batchId, batchState, error) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var documents;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.assertSubscribed('applyBatchState()');\n            return [4\n            /*yield*/\n            , this.localStore.lookupMutationDocuments(batchId)];\n\n          case 1:\n            documents = _a.sent();\n\n            if (documents === null) {\n              // A throttled tab may not have seen the mutation before it was completed\n              // and removed from the mutation queue, in which case we won't have cached\n              // the affected documents. In this case we can safely ignore the update\n              // since that means we didn't apply the mutation locally at all (if we\n              // had, we would have cached the affected documents), and so we will just\n              // see any resulting document changes via normal remote document updates\n              // as applicable.\n              debug(LOG_TAG$9, 'Cannot apply mutation batch with id: ' + batchId);\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (!(batchState === 'pending')) return [3\n            /*break*/\n            , 3]; // If we are the primary client, we need to send this write to the\n            // backend. Secondary clients will ignore these writes since their remote\n            // connection is disabled.\n\n            return [4\n            /*yield*/\n            , this.remoteStore.fillWritePipeline()];\n\n          case 2:\n            // If we are the primary client, we need to send this write to the\n            // backend. Secondary clients will ignore these writes since their remote\n            // connection is disabled.\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            if (batchState === 'acknowledged' || batchState === 'rejected') {\n              // NOTE: Both these methods are no-ops for batches that originated from\n              // other clients.\n              this.processUserCallback(batchId, error ? error : null);\n              this.localStore.removeCachedMutationBatchMetadata(batchId);\n            } else {\n              fail(\"Unknown batchState: \" + batchState);\n            }\n\n            _a.label = 4;\n\n          case 4:\n            return [4\n            /*yield*/\n            , this.emitNewSnapsAndNotifyLocalStore(documents)];\n\n          case 5:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SyncEngine.prototype.applySuccessfulWrite = function (mutationBatchResult) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var batchId, changes, error_2;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.assertSubscribed('applySuccessfulWrite()');\n            batchId = mutationBatchResult.batch.batchId; // The local store may or may not be able to apply the write result and\n            // raise events immediately (depending on whether the watcher is caught\n            // up), so we raise user callbacks first so that they consistently happen\n            // before listen events.\n\n            this.processUserCallback(batchId,\n            /*error=*/\n            null);\n            this.triggerPendingWritesCallbacks(batchId);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 6]);\n\n            return [4\n            /*yield*/\n            , this.localStore.acknowledgeBatch(mutationBatchResult)];\n\n          case 2:\n            changes = _a.sent();\n            this.sharedClientState.updateMutationState(batchId, 'acknowledged');\n            return [4\n            /*yield*/\n            , this.emitNewSnapsAndNotifyLocalStore(changes)];\n\n          case 3:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 4:\n            error_2 = _a.sent();\n            return [4\n            /*yield*/\n            , ignoreIfPrimaryLeaseLoss(error_2)];\n\n          case 5:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SyncEngine.prototype.rejectFailedWrite = function (batchId, error) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var changes, error_3;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.assertSubscribed('rejectFailedWrite()'); // The local store may or may not be able to apply the write result and\n            // raise events immediately (depending on whether the watcher is caught up),\n            // so we raise user callbacks first so that they consistently happen before\n            // listen events.\n\n            this.processUserCallback(batchId, error);\n            this.triggerPendingWritesCallbacks(batchId);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 6]);\n\n            return [4\n            /*yield*/\n            , this.localStore.rejectBatch(batchId)];\n\n          case 2:\n            changes = _a.sent();\n            this.sharedClientState.updateMutationState(batchId, 'rejected', error);\n            return [4\n            /*yield*/\n            , this.emitNewSnapsAndNotifyLocalStore(changes)];\n\n          case 3:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 4:\n            error_3 = _a.sent();\n            return [4\n            /*yield*/\n            , ignoreIfPrimaryLeaseLoss(error_3)];\n\n          case 5:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Registers a user callback that resolves when all pending mutations at the moment of calling\r\n   * are acknowledged .\r\n   */\n\n\n  SyncEngine.prototype.registerPendingWritesCallback = function (callback) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var highestBatchId, callbacks;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.remoteStore.canUseNetwork()) {\n              debug(LOG_TAG$9, 'The network is disabled. The task returned by ' + \"'awaitPendingWrites()' will not complete until the network is enabled.\");\n            }\n\n            return [4\n            /*yield*/\n            , this.localStore.getHighestUnacknowledgedBatchId()];\n\n          case 1:\n            highestBatchId = _a.sent();\n\n            if (highestBatchId === BATCHID_UNKNOWN) {\n              // Trigger the callback right away if there is no pending writes at the moment.\n              callback.resolve();\n              return [2\n              /*return*/\n              ];\n            }\n\n            callbacks = this.pendingWritesCallbacks.get(highestBatchId) || [];\n            callbacks.push(callback);\n            this.pendingWritesCallbacks.set(highestBatchId, callbacks);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,\r\n   * if there are any.\r\n   */\n\n\n  SyncEngine.prototype.triggerPendingWritesCallbacks = function (batchId) {\n    (this.pendingWritesCallbacks.get(batchId) || []).forEach(function (callback) {\n      callback.resolve();\n    });\n    this.pendingWritesCallbacks.delete(batchId);\n  };\n  /** Reject all outstanding callbacks waiting for pending writes to complete. */\n\n\n  SyncEngine.prototype.rejectOutstandingPendingWritesCallbacks = function (errorMessage) {\n    this.pendingWritesCallbacks.forEach(function (callbacks) {\n      callbacks.forEach(function (callback) {\n        callback.reject(new FirestoreError(Code.CANCELLED, errorMessage));\n      });\n    });\n    this.pendingWritesCallbacks.clear();\n  };\n\n  SyncEngine.prototype.addMutationCallback = function (batchId, callback) {\n    var newCallbacks = this.mutationUserCallbacks[this.currentUser.toKey()];\n\n    if (!newCallbacks) {\n      newCallbacks = new SortedMap(primitiveComparator);\n    }\n\n    newCallbacks = newCallbacks.insert(batchId, callback);\n    this.mutationUserCallbacks[this.currentUser.toKey()] = newCallbacks;\n  };\n  /**\r\n   * Resolves or rejects the user callback for the given batch and then discards\r\n   * it.\r\n   */\n\n\n  SyncEngine.prototype.processUserCallback = function (batchId, error) {\n    var newCallbacks = this.mutationUserCallbacks[this.currentUser.toKey()]; // NOTE: Mutations restored from persistence won't have callbacks, so it's\n    // okay for there to be no callback for this ID.\n\n    if (newCallbacks) {\n      var callback = newCallbacks.get(batchId);\n\n      if (callback) {\n        assert(batchId === newCallbacks.minKey(), 'Mutation callbacks processed out-of-order?');\n\n        if (error) {\n          callback.reject(error);\n        } else {\n          callback.resolve();\n        }\n\n        newCallbacks = newCallbacks.remove(batchId);\n      }\n\n      this.mutationUserCallbacks[this.currentUser.toKey()] = newCallbacks;\n    }\n  };\n\n  SyncEngine.prototype.removeAndCleanupQuery = function (queryView) {\n    var _this = this;\n\n    this.sharedClientState.removeLocalQueryTarget(queryView.targetId);\n    this.queryViewsByQuery.delete(queryView.query);\n    delete this.queryViewsByTarget[queryView.targetId];\n\n    if (this.isPrimary) {\n      var limboKeys = this.limboDocumentRefs.referencesForId(queryView.targetId);\n      this.limboDocumentRefs.removeReferencesForId(queryView.targetId);\n      limboKeys.forEach(function (limboKey) {\n        var isReferenced = _this.limboDocumentRefs.containsKey(limboKey);\n\n        if (!isReferenced) {\n          // We removed the last reference for this key\n          _this.removeLimboTarget(limboKey);\n        }\n      });\n    }\n  };\n\n  SyncEngine.prototype.removeLimboTarget = function (key) {\n    // It's possible that the target already got removed because the query failed. In that case,\n    // the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.\n    var limboTargetId = this.limboTargetsByKey.get(key);\n\n    if (limboTargetId === null) {\n      // This target already got removed, because the query failed.\n      return;\n    }\n\n    this.remoteStore.unlisten(limboTargetId);\n    this.limboTargetsByKey = this.limboTargetsByKey.remove(key);\n    delete this.limboResolutionsByTarget[limboTargetId];\n  };\n\n  SyncEngine.prototype.updateTrackedLimbos = function (targetId, limboChanges) {\n    for (var _i = 0, limboChanges_1 = limboChanges; _i < limboChanges_1.length; _i++) {\n      var limboChange = limboChanges_1[_i];\n\n      if (limboChange instanceof AddedLimboDocument) {\n        this.limboDocumentRefs.addReference(limboChange.key, targetId);\n        this.trackLimboChange(limboChange);\n      } else if (limboChange instanceof RemovedLimboDocument) {\n        debug(LOG_TAG$9, 'Document no longer in limbo: ' + limboChange.key);\n        this.limboDocumentRefs.removeReference(limboChange.key, targetId);\n        var isReferenced = this.limboDocumentRefs.containsKey(limboChange.key);\n\n        if (!isReferenced) {\n          // We removed the last reference for this key\n          this.removeLimboTarget(limboChange.key);\n        }\n      } else {\n        fail('Unknown limbo change: ' + JSON.stringify(limboChange));\n      }\n    }\n  };\n\n  SyncEngine.prototype.trackLimboChange = function (limboChange) {\n    var key = limboChange.key;\n\n    if (!this.limboTargetsByKey.get(key)) {\n      debug(LOG_TAG$9, 'New document in limbo: ' + key);\n      var limboTargetId = this.limboTargetIdGenerator.next();\n      var query = Query.atPath(key.path);\n      this.limboResolutionsByTarget[limboTargetId] = new LimboResolution(key);\n      this.remoteStore.listen(new QueryData(query, limboTargetId, QueryPurpose.LimboResolution, ListenSequence.INVALID));\n      this.limboTargetsByKey = this.limboTargetsByKey.insert(key, limboTargetId);\n    }\n  }; // Visible for testing\n\n\n  SyncEngine.prototype.currentLimboDocs = function () {\n    return this.limboTargetsByKey;\n  };\n\n  SyncEngine.prototype.emitNewSnapsAndNotifyLocalStore = function (changes, remoteEvent) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var newSnaps, docChangesInAllViews, queriesProcessed;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            newSnaps = [];\n            docChangesInAllViews = [];\n            queriesProcessed = [];\n            this.queryViewsByQuery.forEach(function (_, queryView) {\n              queriesProcessed.push(Promise.resolve().then(function () {\n                var viewDocChanges = queryView.view.computeDocChanges(changes);\n\n                if (!viewDocChanges.needsRefill) {\n                  return viewDocChanges;\n                } // The query has a limit and some docs were removed, so we need\n                // to re-run the query against the local store to make sure we\n                // didn't lose any good docs that had been past the limit.\n\n\n                return _this.localStore.executeQuery(queryView.query).then(function (docs) {\n                  return queryView.view.computeDocChanges(docs, viewDocChanges);\n                });\n              }).then(function (viewDocChanges) {\n                var targetChange = remoteEvent && remoteEvent.targetChanges[queryView.targetId];\n                var viewChange = queryView.view.applyChanges(viewDocChanges,\n                /* updateLimboDocuments= */\n                _this.isPrimary === true, targetChange);\n\n                _this.updateTrackedLimbos(queryView.targetId, viewChange.limboChanges);\n\n                if (viewChange.snapshot) {\n                  if (_this.isPrimary) {\n                    _this.sharedClientState.updateQueryState(queryView.targetId, viewChange.snapshot.fromCache ? 'not-current' : 'current');\n                  }\n\n                  newSnaps.push(viewChange.snapshot);\n                  var docChanges = LocalViewChanges.fromSnapshot(queryView.targetId, viewChange.snapshot);\n                  docChangesInAllViews.push(docChanges);\n                }\n              }));\n            });\n            return [4\n            /*yield*/\n            , Promise.all(queriesProcessed)];\n\n          case 1:\n            _a.sent();\n\n            this.syncEngineListener.onWatchChange(newSnaps);\n            return [4\n            /*yield*/\n            , this.localStore.notifyLocalViewChanges(docChangesInAllViews)];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SyncEngine.prototype.assertSubscribed = function (fnName) {\n    assert(this.syncEngineListener !== null, 'Trying to call ' + fnName + ' before calling subscribe().');\n  };\n\n  SyncEngine.prototype.handleCredentialChange = function (user) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var userChanged, result;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            userChanged = !this.currentUser.isEqual(user);\n            this.currentUser = user;\n            if (!userChanged) return [3\n            /*break*/\n            , 3]; // Fails tasks waiting for pending writes requested by previous user.\n\n            this.rejectOutstandingPendingWritesCallbacks(\"'waitForPendingWrites' promise is rejected due to a user change.\");\n            return [4\n            /*yield*/\n            , this.localStore.handleUserChange(user)];\n\n          case 1:\n            result = _a.sent(); // TODO(b/114226417): Consider calling this only in the primary tab.\n\n            this.sharedClientState.handleUserChange(user, result.removedBatchIds, result.addedBatchIds);\n            return [4\n            /*yield*/\n            , this.emitNewSnapsAndNotifyLocalStore(result.affectedDocuments)];\n\n          case 2:\n            _a.sent();\n\n            _a.label = 3;\n\n          case 3:\n            return [4\n            /*yield*/\n            , this.remoteStore.handleCredentialChange()];\n\n          case 4:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // PORTING NOTE: Multi-tab only\n\n\n  SyncEngine.prototype.applyPrimaryState = function (isPrimary) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var activeTargets, activeQueries, _i, activeQueries_1, queryData, activeTargets_1, p_1;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(isPrimary === true && this.isPrimary !== true)) return [3\n            /*break*/\n            , 3];\n            this.isPrimary = true;\n            return [4\n            /*yield*/\n            , this.remoteStore.applyPrimaryState(true)];\n\n          case 1:\n            _a.sent();\n\n            activeTargets = this.sharedClientState.getAllActiveQueryTargets();\n            return [4\n            /*yield*/\n            , this.synchronizeQueryViewsAndRaiseSnapshots(activeTargets.toArray())];\n\n          case 2:\n            activeQueries = _a.sent();\n\n            for (_i = 0, activeQueries_1 = activeQueries; _i < activeQueries_1.length; _i++) {\n              queryData = activeQueries_1[_i];\n              this.remoteStore.listen(queryData);\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 3:\n            if (!(isPrimary === false && this.isPrimary !== false)) return [3\n            /*break*/\n            , 7];\n            this.isPrimary = false;\n            activeTargets_1 = [];\n            p_1 = Promise.resolve();\n            forEachNumber(this.queryViewsByTarget, function (targetId, queryView) {\n              if (_this.sharedClientState.isLocalQueryTarget(targetId)) {\n                activeTargets_1.push(targetId);\n              } else {\n                p_1 = p_1.then(function () {\n                  return _this.unlisten(queryView.query);\n                });\n              }\n\n              _this.remoteStore.unlisten(queryView.targetId);\n            });\n            return [4\n            /*yield*/\n            , p_1];\n\n          case 4:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.synchronizeQueryViewsAndRaiseSnapshots(activeTargets_1)];\n\n          case 5:\n            _a.sent();\n\n            this.resetLimboDocuments();\n            return [4\n            /*yield*/\n            , this.remoteStore.applyPrimaryState(false)];\n\n          case 6:\n            _a.sent();\n\n            _a.label = 7;\n\n          case 7:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // PORTING NOTE: Multi-tab only.\n\n\n  SyncEngine.prototype.resetLimboDocuments = function () {\n    var _this = this;\n\n    forEachNumber(this.limboResolutionsByTarget, function (targetId) {\n      _this.remoteStore.unlisten(targetId);\n    });\n    this.limboDocumentRefs.removeAllReferences();\n    this.limboResolutionsByTarget = [];\n    this.limboTargetsByKey = new SortedMap(DocumentKey.comparator);\n  };\n  /**\r\n   * Reconcile the query views of the provided query targets with the state from\r\n   * persistence. Raises snapshots for any changes that affect the local\r\n   * client and returns the updated state of all target's query data.\r\n   */\n  // PORTING NOTE: Multi-tab only.\n\n\n  SyncEngine.prototype.synchronizeQueryViewsAndRaiseSnapshots = function (targets) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var activeQueries, newViewSnapshots, _i, targets_1, targetId, queryData, queryView, viewChange, query;\n\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            activeQueries = [];\n            newViewSnapshots = [];\n            _i = 0, targets_1 = targets;\n            _a.label = 1;\n\n          case 1:\n            if (!(_i < targets_1.length)) return [3\n            /*break*/\n            , 11];\n            targetId = targets_1[_i];\n            queryData = void 0;\n            queryView = this.queryViewsByTarget[targetId];\n            if (!queryView) return [3\n            /*break*/\n            , 5]; // For queries that have a local View, we need to update their state\n            // in LocalStore (as the resume token and the snapshot version\n            // might have changed) and reconcile their views with the persisted\n            // state (the list of syncedDocuments may have gotten out of sync).\n\n            return [4\n            /*yield*/\n            , this.localStore.releaseQuery(queryView.query,\n            /*keepPersistedQueryData=*/\n            true)];\n\n          case 2:\n            // For queries that have a local View, we need to update their state\n            // in LocalStore (as the resume token and the snapshot version\n            // might have changed) and reconcile their views with the persisted\n            // state (the list of syncedDocuments may have gotten out of sync).\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.localStore.allocateQuery(queryView.query)];\n\n          case 3:\n            queryData = _a.sent();\n            return [4\n            /*yield*/\n            , this.synchronizeViewAndComputeSnapshot(queryView)];\n\n          case 4:\n            viewChange = _a.sent();\n\n            if (viewChange.snapshot) {\n              newViewSnapshots.push(viewChange.snapshot);\n            }\n\n            return [3\n            /*break*/\n            , 9];\n\n          case 5:\n            assert(this.isPrimary === true, 'A secondary tab should never have an active query without an active view.');\n            return [4\n            /*yield*/\n            , this.localStore.getQueryForTarget(targetId)];\n\n          case 6:\n            query = _a.sent();\n            assert(!!query, \"Query data for target \" + targetId + \" not found\");\n            return [4\n            /*yield*/\n            , this.localStore.allocateQuery(query)];\n\n          case 7:\n            queryData = _a.sent();\n            return [4\n            /*yield*/\n            , this.initializeViewAndComputeSnapshot(queryData,\n            /*current=*/\n            false)];\n\n          case 8:\n            _a.sent();\n\n            _a.label = 9;\n\n          case 9:\n            activeQueries.push(queryData);\n            _a.label = 10;\n\n          case 10:\n            _i++;\n            return [3\n            /*break*/\n            , 1];\n\n          case 11:\n            this.syncEngineListener.onWatchChange(newViewSnapshots);\n            return [2\n            /*return*/\n            , activeQueries];\n        }\n      });\n    });\n  }; // PORTING NOTE: Multi-tab only\n\n\n  SyncEngine.prototype.getActiveClients = function () {\n    return this.localStore.getActiveClients();\n  }; // PORTING NOTE: Multi-tab only\n\n\n  SyncEngine.prototype.applyTargetState = function (targetId, state, error) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var _a, changes, synthesizedRemoteEvent, error_4, activeTargets_2, queryView;\n\n      return tslib_1.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (this.isPrimary) {\n              // If we receive a target state notification via WebStorage, we are\n              // either already secondary or another tab has taken the primary lease.\n              debug(LOG_TAG$9, 'Ignoring unexpected query state notification.');\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (!this.queryViewsByTarget[targetId]) return [3\n            /*break*/\n            , 11];\n            _a = state;\n\n            switch (_a) {\n              case 'current':\n                return [3\n                /*break*/\n                , 1];\n\n              case 'not-current':\n                return [3\n                /*break*/\n                , 1];\n\n              case 'rejected':\n                return [3\n                /*break*/\n                , 8];\n            }\n\n            return [3\n            /*break*/\n            , 10];\n\n          case 1:\n            _b.trys.push([1, 4,, 8]);\n\n            return [4\n            /*yield*/\n            , this.localStore.getNewDocumentChanges()];\n\n          case 2:\n            changes = _b.sent();\n            synthesizedRemoteEvent = RemoteEvent.createSynthesizedRemoteEventForCurrentChange(targetId, state === 'current');\n            return [4\n            /*yield*/\n            , this.emitNewSnapsAndNotifyLocalStore(changes, synthesizedRemoteEvent)];\n\n          case 3:\n            _b.sent();\n\n            return [3\n            /*break*/\n            , 11];\n\n          case 4:\n            error_4 = _b.sent();\n            if (!isDocumentChangeMissingError(error_4)) return [3\n            /*break*/\n            , 6];\n            activeTargets_2 = [];\n            forEachNumber(this.queryViewsByTarget, function (target) {\n              return activeTargets_2.push(target);\n            });\n            return [4\n            /*yield*/\n            , this.synchronizeQueryViewsAndRaiseSnapshots(activeTargets_2)];\n\n          case 5:\n            _b.sent();\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            throw error_4;\n\n          case 7:\n            return [3\n            /*break*/\n            , 8];\n\n          case 8:\n            queryView = this.queryViewsByTarget[targetId];\n            this.removeAndCleanupQuery(queryView);\n            return [4\n            /*yield*/\n            , this.localStore.releaseQuery(queryView.query,\n            /*keepPersistedQueryData=*/\n            true)];\n\n          case 9:\n            _b.sent();\n\n            this.syncEngineListener.onWatchError(queryView.query, error);\n            return [3\n            /*break*/\n            , 11];\n\n          case 10:\n            fail('Unexpected target state: ' + state);\n            _b.label = 11;\n\n          case 11:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // PORTING NOTE: Multi-tab only\n\n\n  SyncEngine.prototype.applyActiveTargetsChange = function (added, removed) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var _i, added_1, targetId, query, queryData, _loop_1, this_1, _a, removed_1, targetId;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!this.isPrimary) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            _i = 0, added_1 = added;\n            _b.label = 1;\n\n          case 1:\n            if (!(_i < added_1.length)) return [3\n            /*break*/\n            , 6];\n            targetId = added_1[_i];\n            assert(!this.queryViewsByTarget[targetId], 'Trying to add an already active target');\n            return [4\n            /*yield*/\n            , this.localStore.getQueryForTarget(targetId)];\n\n          case 2:\n            query = _b.sent();\n            assert(!!query, \"Query data for active target \" + targetId + \" not found\");\n            return [4\n            /*yield*/\n            , this.localStore.allocateQuery(query)];\n\n          case 3:\n            queryData = _b.sent();\n            return [4\n            /*yield*/\n            , this.initializeViewAndComputeSnapshot(queryData,\n            /*current=*/\n            false)];\n\n          case 4:\n            _b.sent();\n\n            this.remoteStore.listen(queryData);\n            _b.label = 5;\n\n          case 5:\n            _i++;\n            return [3\n            /*break*/\n            , 1];\n\n          case 6:\n            _loop_1 = function _loop_1(targetId) {\n              var queryView;\n              return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    queryView = this_1.queryViewsByTarget[targetId];\n                    if (!queryView) return [3\n                    /*break*/\n                    , 2];\n                    return [4\n                    /*yield*/\n                    , this_1.localStore.releaseQuery(queryView.query,\n                    /*keepPersistedQueryData=*/\n                    false).then(function () {\n                      _this.remoteStore.unlisten(targetId);\n\n                      _this.removeAndCleanupQuery(queryView);\n                    }).catch(ignoreIfPrimaryLeaseLoss)];\n\n                  case 1:\n                    _a.sent();\n\n                    _a.label = 2;\n\n                  case 2:\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            };\n\n            this_1 = this;\n            _a = 0, removed_1 = removed;\n            _b.label = 7;\n\n          case 7:\n            if (!(_a < removed_1.length)) return [3\n            /*break*/\n            , 10];\n            targetId = removed_1[_a];\n            return [5\n            /*yield**/\n            , _loop_1(targetId)];\n\n          case 8:\n            _b.sent();\n\n            _b.label = 9;\n\n          case 9:\n            _a++;\n            return [3\n            /*break*/\n            , 7];\n\n          case 10:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // PORTING NOTE: Multi-tab only. In other clients, LocalStore is unaware of\n  // the online state.\n\n\n  SyncEngine.prototype.enableNetwork = function () {\n    this.localStore.setNetworkEnabled(true);\n    return this.remoteStore.enableNetwork();\n  }; // PORTING NOTE: Multi-tab only. In other clients, LocalStore is unaware of\n  // the online state.\n\n\n  SyncEngine.prototype.disableNetwork = function () {\n    this.localStore.setNetworkEnabled(false);\n    return this.remoteStore.disableNetwork();\n  };\n\n  SyncEngine.prototype.getRemoteKeysForTarget = function (targetId) {\n    var limboResolution = this.limboResolutionsByTarget[targetId];\n\n    if (limboResolution && limboResolution.receivedDocument) {\n      return documentKeySet().add(limboResolution.key);\n    } else {\n      return this.queryViewsByTarget[targetId] ? this.queryViewsByTarget[targetId].view.syncedDocuments : documentKeySet();\n    }\n  };\n\n  return SyncEngine;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Simple wrapper around a nullable UID. Mostly exists to make code more\r\n * readable.\r\n */\n\n\nvar User =\n/** @class */\nfunction () {\n  function User(uid) {\n    this.uid = uid;\n  }\n\n  User.prototype.isAuthenticated = function () {\n    return this.uid != null;\n  };\n  /**\r\n   * Returns a key representing this user, suitable for inclusion in a\r\n   * dictionary.\r\n   */\n\n\n  User.prototype.toKey = function () {\n    if (this.isAuthenticated()) {\n      return 'uid:' + this.uid;\n    } else {\n      return 'anonymous-user';\n    }\n  };\n\n  User.prototype.isEqual = function (otherUser) {\n    return otherUser.uid === this.uid;\n  };\n  /** A user with a null UID. */\n\n\n  User.UNAUTHENTICATED = new User(null); // TODO(mikelehen): Look into getting a proper uid-equivalent for\n  // non-FirebaseAuth providers.\n\n  User.GOOGLE_CREDENTIALS = new User('google-credentials-uid');\n  User.FIRST_PARTY = new User('first-party-uid');\n  return User;\n}();\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_TAG$a = 'SharedClientState'; // The format of the LocalStorage key that stores the client state is:\n//     firestore_clients_<persistence_prefix>_<instance_key>\n\nvar CLIENT_STATE_KEY_PREFIX = 'firestore_clients'; // The format of the WebStorage key that stores the mutation state is:\n//     firestore_mutations_<persistence_prefix>_<batch_id>\n//     (for unauthenticated users)\n// or: firestore_mutations_<persistence_prefix>_<batch_id>_<user_uid>\n//\n// 'user_uid' is last to avoid needing to escape '_' characters that it might\n// contain.\n\nvar MUTATION_BATCH_KEY_PREFIX = 'firestore_mutations'; // The format of the WebStorage key that stores a query target's metadata is:\n//     firestore_targets_<persistence_prefix>_<target_id>\n\nvar QUERY_TARGET_KEY_PREFIX = 'firestore_targets'; // The WebStorage prefix that stores the primary tab's online state. The\n// format of the key is:\n//     firestore_online_state_<persistence_prefix>\n\nvar ONLINE_STATE_KEY_PREFIX = 'firestore_online_state'; // The WebStorage key prefix for the key that stores the last sequence number allocated. The key\n// looks like 'firestore_sequence_number_<persistence_prefix>'.\n\nvar SEQUENCE_NUMBER_KEY_PREFIX = 'firestore_sequence_number';\n/**\r\n * Holds the state of a mutation batch, including its user ID, batch ID and\r\n * whether the batch is 'pending', 'acknowledged' or 'rejected'.\r\n */\n// Visible for testing\n\nvar MutationMetadata =\n/** @class */\nfunction () {\n  function MutationMetadata(user, batchId, state, error) {\n    this.user = user;\n    this.batchId = batchId;\n    this.state = state;\n    this.error = error;\n    assert(error !== undefined === (state === 'rejected'), \"MutationMetadata must contain an error iff state is 'rejected'\");\n  }\n  /**\r\n   * Parses a MutationMetadata from its JSON representation in WebStorage.\r\n   * Logs a warning and returns null if the format of the data is not valid.\r\n   */\n\n\n  MutationMetadata.fromWebStorageEntry = function (user, batchId, value) {\n    var mutationBatch = JSON.parse(value);\n    var validData = typeof mutationBatch === 'object' && ['pending', 'acknowledged', 'rejected'].indexOf(mutationBatch.state) !== -1 && (mutationBatch.error === undefined || typeof mutationBatch.error === 'object');\n    var firestoreError = undefined;\n\n    if (validData && mutationBatch.error) {\n      validData = typeof mutationBatch.error.message === 'string' && typeof mutationBatch.error.code === 'string';\n\n      if (validData) {\n        firestoreError = new FirestoreError(mutationBatch.error.code, mutationBatch.error.message);\n      }\n    }\n\n    if (validData) {\n      return new MutationMetadata(user, batchId, mutationBatch.state, firestoreError);\n    } else {\n      error(LOG_TAG$a, \"Failed to parse mutation state for ID '\" + batchId + \"': \" + value);\n      return null;\n    }\n  };\n\n  MutationMetadata.prototype.toWebStorageJSON = function () {\n    var batchMetadata = {\n      state: this.state,\n      updateTimeMs: Date.now() // Modify the existing value to trigger update.\n\n    };\n\n    if (this.error) {\n      batchMetadata.error = {\n        code: this.error.code,\n        message: this.error.message\n      };\n    }\n\n    return JSON.stringify(batchMetadata);\n  };\n\n  return MutationMetadata;\n}();\n/**\r\n * Holds the state of a query target, including its target ID and whether the\r\n * target is 'not-current', 'current' or 'rejected'.\r\n */\n// Visible for testing\n\n\nvar QueryTargetMetadata =\n/** @class */\nfunction () {\n  function QueryTargetMetadata(targetId, state, error) {\n    this.targetId = targetId;\n    this.state = state;\n    this.error = error;\n    assert(error !== undefined === (state === 'rejected'), \"QueryTargetMetadata must contain an error iff state is 'rejected'\");\n  }\n  /**\r\n   * Parses a QueryTargetMetadata from its JSON representation in WebStorage.\r\n   * Logs a warning and returns null if the format of the data is not valid.\r\n   */\n\n\n  QueryTargetMetadata.fromWebStorageEntry = function (targetId, value) {\n    var targetState = JSON.parse(value);\n    var validData = typeof targetState === 'object' && ['not-current', 'current', 'rejected'].indexOf(targetState.state) !== -1 && (targetState.error === undefined || typeof targetState.error === 'object');\n    var firestoreError = undefined;\n\n    if (validData && targetState.error) {\n      validData = typeof targetState.error.message === 'string' && typeof targetState.error.code === 'string';\n\n      if (validData) {\n        firestoreError = new FirestoreError(targetState.error.code, targetState.error.message);\n      }\n    }\n\n    if (validData) {\n      return new QueryTargetMetadata(targetId, targetState.state, firestoreError);\n    } else {\n      error(LOG_TAG$a, \"Failed to parse target state for ID '\" + targetId + \"': \" + value);\n      return null;\n    }\n  };\n\n  QueryTargetMetadata.prototype.toWebStorageJSON = function () {\n    var targetState = {\n      state: this.state,\n      updateTimeMs: Date.now() // Modify the existing value to trigger update.\n\n    };\n\n    if (this.error) {\n      targetState.error = {\n        code: this.error.code,\n        message: this.error.message\n      };\n    }\n\n    return JSON.stringify(targetState);\n  };\n\n  return QueryTargetMetadata;\n}();\n/**\r\n * This class represents the immutable ClientState for a client read from\r\n * WebStorage, containing the list of active query targets.\r\n */\n\n\nvar RemoteClientState =\n/** @class */\nfunction () {\n  function RemoteClientState(clientId, activeTargetIds) {\n    this.clientId = clientId;\n    this.activeTargetIds = activeTargetIds;\n  }\n  /**\r\n   * Parses a RemoteClientState from the JSON representation in WebStorage.\r\n   * Logs a warning and returns null if the format of the data is not valid.\r\n   */\n\n\n  RemoteClientState.fromWebStorageEntry = function (clientId, value) {\n    var clientState = JSON.parse(value);\n    var validData = typeof clientState === 'object' && clientState.activeTargetIds instanceof Array;\n    var activeTargetIdsSet = targetIdSet();\n\n    for (var i = 0; validData && i < clientState.activeTargetIds.length; ++i) {\n      validData = isSafeInteger(clientState.activeTargetIds[i]);\n      activeTargetIdsSet = activeTargetIdsSet.add(clientState.activeTargetIds[i]);\n    }\n\n    if (validData) {\n      return new RemoteClientState(clientId, activeTargetIdsSet);\n    } else {\n      error(LOG_TAG$a, \"Failed to parse client data for instance '\" + clientId + \"': \" + value);\n      return null;\n    }\n  };\n\n  return RemoteClientState;\n}();\n/**\r\n * This class represents the online state for all clients participating in\r\n * multi-tab. The online state is only written to by the primary client, and\r\n * used in secondary clients to update their query views.\r\n */\n\n\nvar SharedOnlineState =\n/** @class */\nfunction () {\n  function SharedOnlineState(clientId, onlineState) {\n    this.clientId = clientId;\n    this.onlineState = onlineState;\n  }\n  /**\r\n   * Parses a SharedOnlineState from its JSON representation in WebStorage.\r\n   * Logs a warning and returns null if the format of the data is not valid.\r\n   */\n\n\n  SharedOnlineState.fromWebStorageEntry = function (value) {\n    var onlineState = JSON.parse(value);\n    var validData = typeof onlineState === 'object' && onlineState.onlineState in OnlineState && typeof onlineState.clientId === 'string';\n\n    if (validData) {\n      return new SharedOnlineState(onlineState.clientId, OnlineState[onlineState.onlineState]);\n    } else {\n      error(LOG_TAG$a, \"Failed to parse online state: \" + value);\n      return null;\n    }\n  };\n\n  return SharedOnlineState;\n}();\n/**\r\n * Metadata state of the local client. Unlike `RemoteClientState`, this class is\r\n * mutable and keeps track of all pending mutations, which allows us to\r\n * update the range of pending mutation batch IDs as new mutations are added or\r\n * removed.\r\n *\r\n * The data in `LocalClientState` is not read from WebStorage and instead\r\n * updated via its instance methods. The updated state can be serialized via\r\n * `toWebStorageJSON()`.\r\n */\n// Visible for testing.\n\n\nvar LocalClientState =\n/** @class */\nfunction () {\n  function LocalClientState() {\n    this.activeTargetIds = targetIdSet();\n  }\n\n  LocalClientState.prototype.addQueryTarget = function (targetId) {\n    assert(!this.activeTargetIds.has(targetId), \"Target with ID '\" + targetId + \"' already active.\");\n    this.activeTargetIds = this.activeTargetIds.add(targetId);\n  };\n\n  LocalClientState.prototype.removeQueryTarget = function (targetId) {\n    this.activeTargetIds = this.activeTargetIds.delete(targetId);\n  };\n  /**\r\n   * Converts this entry into a JSON-encoded format we can use for WebStorage.\r\n   * Does not encode `clientId` as it is part of the key in WebStorage.\r\n   */\n\n\n  LocalClientState.prototype.toWebStorageJSON = function () {\n    var data = {\n      activeTargetIds: this.activeTargetIds.toArray(),\n      updateTimeMs: Date.now() // Modify the existing value to trigger update.\n\n    };\n    return JSON.stringify(data);\n  };\n\n  return LocalClientState;\n}();\n/**\r\n * `WebStorageSharedClientState` uses WebStorage (window.localStorage) as the\r\n * backing store for the SharedClientState. It keeps track of all active\r\n * clients and supports modifications of the local client's data.\r\n */\n\n\nvar WebStorageSharedClientState =\n/** @class */\nfunction () {\n  function WebStorageSharedClientState(queue, platform, persistenceKey, localClientId, initialUser) {\n    this.queue = queue;\n    this.platform = platform;\n    this.persistenceKey = persistenceKey;\n    this.localClientId = localClientId;\n    this.syncEngine = null;\n    this.onlineStateHandler = null;\n    this.sequenceNumberHandler = null;\n    this.activeClients = {};\n    this.storageListener = this.handleWebStorageEvent.bind(this);\n    this.started = false;\n    /**\r\n     * Captures WebStorage events that occur before `start()` is called. These\r\n     * events are replayed once `WebStorageSharedClientState` is started.\r\n     */\n\n    this.earlyEvents = [];\n\n    if (!WebStorageSharedClientState.isAvailable(this.platform)) {\n      throw new FirestoreError(Code.UNIMPLEMENTED, 'LocalStorage is not available on this platform.');\n    } // Escape the special characters mentioned here:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n\n\n    var escapedPersistenceKey = persistenceKey.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    this.storage = this.platform.window.localStorage;\n    this.currentUser = initialUser;\n    this.localClientStorageKey = this.toWebStorageClientStateKey(this.localClientId);\n    this.sequenceNumberKey = SEQUENCE_NUMBER_KEY_PREFIX + \"_\" + persistenceKey;\n    this.activeClients[this.localClientId] = new LocalClientState();\n    this.clientStateKeyRe = new RegExp(\"^\" + CLIENT_STATE_KEY_PREFIX + \"_\" + escapedPersistenceKey + \"_([^_]*)$\");\n    this.mutationBatchKeyRe = new RegExp(\"^\" + MUTATION_BATCH_KEY_PREFIX + \"_\" + escapedPersistenceKey + \"_(\\\\d+)(?:_(.*))?$\");\n    this.queryTargetKeyRe = new RegExp(\"^\" + QUERY_TARGET_KEY_PREFIX + \"_\" + escapedPersistenceKey + \"_(\\\\d+)$\");\n    this.onlineStateKey = ONLINE_STATE_KEY_PREFIX + \"_\" + persistenceKey; // Rather than adding the storage observer during start(), we add the\n    // storage observer during initialization. This ensures that we collect\n    // events before other components populate their initial state (during their\n    // respective start() calls). Otherwise, we might for example miss a\n    // mutation that is added after LocalStore's start() processed the existing\n    // mutations but before we observe WebStorage events.\n\n    this.platform.window.addEventListener('storage', this.storageListener);\n  }\n  /** Returns 'true' if WebStorage is available in the current environment. */\n\n\n  WebStorageSharedClientState.isAvailable = function (platform) {\n    return !!(platform.window && platform.window.localStorage != null);\n  };\n\n  WebStorageSharedClientState.prototype.start = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var existingClients, _i, existingClients_1, clientId, storageItem, clientState, onlineStateJSON, onlineState, _a, _b, event_1;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            assert(!this.started, 'WebStorageSharedClientState already started');\n            assert(this.syncEngine !== null, 'syncEngine property must be set before calling start()');\n            assert(this.onlineStateHandler !== null, 'onlineStateHandler property must be set before calling start()');\n            return [4\n            /*yield*/\n            , this.syncEngine.getActiveClients()];\n\n          case 1:\n            existingClients = _c.sent();\n\n            for (_i = 0, existingClients_1 = existingClients; _i < existingClients_1.length; _i++) {\n              clientId = existingClients_1[_i];\n\n              if (clientId === this.localClientId) {\n                continue;\n              }\n\n              storageItem = this.getItem(this.toWebStorageClientStateKey(clientId));\n\n              if (storageItem) {\n                clientState = RemoteClientState.fromWebStorageEntry(clientId, storageItem);\n\n                if (clientState) {\n                  this.activeClients[clientState.clientId] = clientState;\n                }\n              }\n            }\n\n            this.persistClientState();\n            onlineStateJSON = this.storage.getItem(this.onlineStateKey);\n\n            if (onlineStateJSON) {\n              onlineState = this.fromWebStorageOnlineState(onlineStateJSON);\n\n              if (onlineState) {\n                this.handleOnlineStateEvent(onlineState);\n              }\n            }\n\n            for (_a = 0, _b = this.earlyEvents; _a < _b.length; _a++) {\n              event_1 = _b[_a];\n              this.handleWebStorageEvent(event_1);\n            }\n\n            this.earlyEvents = []; // Register a window unload hook to remove the client metadata entry from\n            // WebStorage even if `shutdown()` was not called.\n\n            this.platform.window.addEventListener('unload', function () {\n              return _this.shutdown();\n            });\n            this.started = true;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  WebStorageSharedClientState.prototype.writeSequenceNumber = function (sequenceNumber) {\n    this.setItem(this.sequenceNumberKey, JSON.stringify(sequenceNumber));\n  };\n\n  WebStorageSharedClientState.prototype.getAllActiveQueryTargets = function () {\n    var activeTargets = targetIdSet();\n    forEach(this.activeClients, function (key, value) {\n      activeTargets = activeTargets.unionWith(value.activeTargetIds);\n    });\n    return activeTargets;\n  };\n\n  WebStorageSharedClientState.prototype.isActiveQueryTarget = function (targetId) {\n    // This is not using `obj.forEach` since `forEach` doesn't support early\n    // return.\n    for (var clientId in this.activeClients) {\n      if (this.activeClients.hasOwnProperty(clientId)) {\n        if (this.activeClients[clientId].activeTargetIds.has(targetId)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  WebStorageSharedClientState.prototype.addPendingMutation = function (batchId) {\n    this.persistMutationState(batchId, 'pending');\n  };\n\n  WebStorageSharedClientState.prototype.updateMutationState = function (batchId, state, error) {\n    this.persistMutationState(batchId, state, error); // Once a final mutation result is observed by other clients, they no longer\n    // access the mutation's metadata entry. Since WebStorage replays events\n    // in order, it is safe to delete the entry right after updating it.\n\n    this.removeMutationState(batchId);\n  };\n\n  WebStorageSharedClientState.prototype.addLocalQueryTarget = function (targetId) {\n    var queryState = 'not-current'; // Lookup an existing query state if the target ID was already registered\n    // by another tab\n\n    if (this.isActiveQueryTarget(targetId)) {\n      var storageItem = this.storage.getItem(this.toWebStorageQueryTargetMetadataKey(targetId));\n\n      if (storageItem) {\n        var metadata = QueryTargetMetadata.fromWebStorageEntry(targetId, storageItem);\n\n        if (metadata) {\n          queryState = metadata.state;\n        }\n      }\n    }\n\n    this.localClientState.addQueryTarget(targetId);\n    this.persistClientState();\n    return queryState;\n  };\n\n  WebStorageSharedClientState.prototype.removeLocalQueryTarget = function (targetId) {\n    this.localClientState.removeQueryTarget(targetId);\n    this.persistClientState();\n  };\n\n  WebStorageSharedClientState.prototype.isLocalQueryTarget = function (targetId) {\n    return this.localClientState.activeTargetIds.has(targetId);\n  };\n\n  WebStorageSharedClientState.prototype.clearQueryState = function (targetId) {\n    this.removeItem(this.toWebStorageQueryTargetMetadataKey(targetId));\n  };\n\n  WebStorageSharedClientState.prototype.updateQueryState = function (targetId, state, error) {\n    this.persistQueryTargetState(targetId, state, error);\n  };\n\n  WebStorageSharedClientState.prototype.handleUserChange = function (user, removedBatchIds, addedBatchIds) {\n    var _this = this;\n\n    removedBatchIds.forEach(function (batchId) {\n      _this.removeMutationState(batchId);\n    });\n    this.currentUser = user;\n    addedBatchIds.forEach(function (batchId) {\n      _this.addPendingMutation(batchId);\n    });\n  };\n\n  WebStorageSharedClientState.prototype.setOnlineState = function (onlineState) {\n    this.persistOnlineState(onlineState);\n  };\n\n  WebStorageSharedClientState.prototype.shutdown = function () {\n    if (this.started) {\n      this.platform.window.removeEventListener('storage', this.storageListener);\n      this.removeItem(this.localClientStorageKey);\n      this.started = false;\n    }\n  };\n\n  WebStorageSharedClientState.prototype.getItem = function (key) {\n    var value = this.storage.getItem(key);\n    debug(LOG_TAG$a, 'READ', key, value);\n    return value;\n  };\n\n  WebStorageSharedClientState.prototype.setItem = function (key, value) {\n    debug(LOG_TAG$a, 'SET', key, value);\n    this.storage.setItem(key, value);\n  };\n\n  WebStorageSharedClientState.prototype.removeItem = function (key) {\n    debug(LOG_TAG$a, 'REMOVE', key);\n    this.storage.removeItem(key);\n  };\n\n  WebStorageSharedClientState.prototype.handleWebStorageEvent = function (event) {\n    var _this = this;\n\n    if (event.storageArea === this.storage) {\n      debug(LOG_TAG$a, 'EVENT', event.key, event.newValue);\n\n      if (event.key === this.localClientStorageKey) {\n        error('Received WebStorage notification for local change. Another client might have ' + 'garbage-collected our state');\n        return;\n      }\n\n      this.queue.enqueueAndForget(function () {\n        return tslib_1.__awaiter(_this, void 0, void 0, function () {\n          var clientState, clientId, mutationMetadata, queryTargetMetadata, onlineState, sequenceNumber;\n          return tslib_1.__generator(this, function (_a) {\n            if (!this.started) {\n              this.earlyEvents.push(event);\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (event.key === null) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (this.clientStateKeyRe.test(event.key)) {\n              if (event.newValue != null) {\n                clientState = this.fromWebStorageClientState(event.key, event.newValue);\n\n                if (clientState) {\n                  return [2\n                  /*return*/\n                  , this.handleClientStateEvent(clientState.clientId, clientState)];\n                }\n              } else {\n                clientId = this.fromWebStorageClientStateKey(event.key);\n                return [2\n                /*return*/\n                , this.handleClientStateEvent(clientId, null)];\n              }\n            } else if (this.mutationBatchKeyRe.test(event.key)) {\n              if (event.newValue !== null) {\n                mutationMetadata = this.fromWebStorageMutationMetadata(event.key, event.newValue);\n\n                if (mutationMetadata) {\n                  return [2\n                  /*return*/\n                  , this.handleMutationBatchEvent(mutationMetadata)];\n                }\n              }\n            } else if (this.queryTargetKeyRe.test(event.key)) {\n              if (event.newValue !== null) {\n                queryTargetMetadata = this.fromWebStorageQueryTargetMetadata(event.key, event.newValue);\n\n                if (queryTargetMetadata) {\n                  return [2\n                  /*return*/\n                  , this.handleQueryTargetEvent(queryTargetMetadata)];\n                }\n              }\n            } else if (event.key === this.onlineStateKey) {\n              if (event.newValue !== null) {\n                onlineState = this.fromWebStorageOnlineState(event.newValue);\n\n                if (onlineState) {\n                  return [2\n                  /*return*/\n                  , this.handleOnlineStateEvent(onlineState)];\n                }\n              }\n            } else if (event.key === this.sequenceNumberKey) {\n              assert(!!this.sequenceNumberHandler, 'Missing sequenceNumberHandler');\n              sequenceNumber = fromWebStorageSequenceNumber(event.newValue);\n\n              if (sequenceNumber !== ListenSequence.INVALID) {\n                this.sequenceNumberHandler(sequenceNumber);\n              }\n            }\n\n            return [2\n            /*return*/\n            ];\n          });\n        });\n      });\n    }\n  };\n\n  Object.defineProperty(WebStorageSharedClientState.prototype, \"localClientState\", {\n    get: function get() {\n      return this.activeClients[this.localClientId];\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  WebStorageSharedClientState.prototype.persistClientState = function () {\n    this.setItem(this.localClientStorageKey, this.localClientState.toWebStorageJSON());\n  };\n\n  WebStorageSharedClientState.prototype.persistMutationState = function (batchId, state, error) {\n    var mutationState = new MutationMetadata(this.currentUser, batchId, state, error);\n    var mutationKey = this.toWebStorageMutationBatchKey(batchId);\n    this.setItem(mutationKey, mutationState.toWebStorageJSON());\n  };\n\n  WebStorageSharedClientState.prototype.removeMutationState = function (batchId) {\n    var mutationKey = this.toWebStorageMutationBatchKey(batchId);\n    this.removeItem(mutationKey);\n  };\n\n  WebStorageSharedClientState.prototype.persistOnlineState = function (onlineState) {\n    var entry = {\n      clientId: this.localClientId,\n      onlineState: OnlineState[onlineState]\n    };\n    this.storage.setItem(this.onlineStateKey, JSON.stringify(entry));\n  };\n\n  WebStorageSharedClientState.prototype.persistQueryTargetState = function (targetId, state, error) {\n    var targetKey = this.toWebStorageQueryTargetMetadataKey(targetId);\n    var targetMetadata = new QueryTargetMetadata(targetId, state, error);\n    this.setItem(targetKey, targetMetadata.toWebStorageJSON());\n  };\n  /** Assembles the key for a client state in WebStorage */\n\n\n  WebStorageSharedClientState.prototype.toWebStorageClientStateKey = function (clientId) {\n    assert(clientId.indexOf('_') === -1, \"Client key cannot contain '_', but was '\" + clientId + \"'\");\n    return CLIENT_STATE_KEY_PREFIX + \"_\" + this.persistenceKey + \"_\" + clientId;\n  };\n  /** Assembles the key for a query state in WebStorage */\n\n\n  WebStorageSharedClientState.prototype.toWebStorageQueryTargetMetadataKey = function (targetId) {\n    return QUERY_TARGET_KEY_PREFIX + \"_\" + this.persistenceKey + \"_\" + targetId;\n  };\n  /** Assembles the key for a mutation batch in WebStorage */\n\n\n  WebStorageSharedClientState.prototype.toWebStorageMutationBatchKey = function (batchId) {\n    var mutationKey = MUTATION_BATCH_KEY_PREFIX + \"_\" + this.persistenceKey + \"_\" + batchId;\n\n    if (this.currentUser.isAuthenticated()) {\n      mutationKey += \"_\" + this.currentUser.uid;\n    }\n\n    return mutationKey;\n  };\n  /**\r\n   * Parses a client state key in WebStorage. Returns null if the key does not\r\n   * match the expected key format.\r\n   */\n\n\n  WebStorageSharedClientState.prototype.fromWebStorageClientStateKey = function (key) {\n    var match = this.clientStateKeyRe.exec(key);\n    return match ? match[1] : null;\n  };\n  /**\r\n   * Parses a client state in WebStorage. Returns 'null' if the value could not\r\n   * be parsed.\r\n   */\n\n\n  WebStorageSharedClientState.prototype.fromWebStorageClientState = function (key, value) {\n    var clientId = this.fromWebStorageClientStateKey(key);\n    assert(clientId !== null, \"Cannot parse client state key '\" + key + \"'\");\n    return RemoteClientState.fromWebStorageEntry(clientId, value);\n  };\n  /**\r\n   * Parses a mutation batch state in WebStorage. Returns 'null' if the value\r\n   * could not be parsed.\r\n   */\n\n\n  WebStorageSharedClientState.prototype.fromWebStorageMutationMetadata = function (key, value) {\n    var match = this.mutationBatchKeyRe.exec(key);\n    assert(match !== null, \"Cannot parse mutation batch key '\" + key + \"'\");\n    var batchId = Number(match[1]);\n    var userId = match[2] !== undefined ? match[2] : null;\n    return MutationMetadata.fromWebStorageEntry(new User(userId), batchId, value);\n  };\n  /**\r\n   * Parses a query target state from WebStorage. Returns 'null' if the value\r\n   * could not be parsed.\r\n   */\n\n\n  WebStorageSharedClientState.prototype.fromWebStorageQueryTargetMetadata = function (key, value) {\n    var match = this.queryTargetKeyRe.exec(key);\n    assert(match !== null, \"Cannot parse query target key '\" + key + \"'\");\n    var targetId = Number(match[1]);\n    return QueryTargetMetadata.fromWebStorageEntry(targetId, value);\n  };\n  /**\r\n   * Parses an online state from WebStorage. Returns 'null' if the value\r\n   * could not be parsed.\r\n   */\n\n\n  WebStorageSharedClientState.prototype.fromWebStorageOnlineState = function (value) {\n    return SharedOnlineState.fromWebStorageEntry(value);\n  };\n\n  WebStorageSharedClientState.prototype.handleMutationBatchEvent = function (mutationBatch) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        if (mutationBatch.user.uid !== this.currentUser.uid) {\n          debug(LOG_TAG$a, \"Ignoring mutation for non-active user \" + mutationBatch.user.uid);\n          return [2\n          /*return*/\n          ];\n        }\n\n        return [2\n        /*return*/\n        , this.syncEngine.applyBatchState(mutationBatch.batchId, mutationBatch.state, mutationBatch.error)];\n      });\n    });\n  };\n\n  WebStorageSharedClientState.prototype.handleQueryTargetEvent = function (targetMetadata) {\n    return this.syncEngine.applyTargetState(targetMetadata.targetId, targetMetadata.state, targetMetadata.error);\n  };\n\n  WebStorageSharedClientState.prototype.handleClientStateEvent = function (clientId, clientState) {\n    var _this = this;\n\n    var existingTargets = this.getAllActiveQueryTargets();\n\n    if (clientState) {\n      this.activeClients[clientId] = clientState;\n    } else {\n      delete this.activeClients[clientId];\n    }\n\n    var newTargets = this.getAllActiveQueryTargets();\n    var addedTargets = [];\n    var removedTargets = [];\n    newTargets.forEach(function (targetId) {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        return tslib_1.__generator(this, function (_a) {\n          if (!existingTargets.has(targetId)) {\n            addedTargets.push(targetId);\n          }\n\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    });\n    existingTargets.forEach(function (targetId) {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        return tslib_1.__generator(this, function (_a) {\n          if (!newTargets.has(targetId)) {\n            removedTargets.push(targetId);\n          }\n\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    });\n    return this.syncEngine.applyActiveTargetsChange(addedTargets, removedTargets);\n  };\n\n  WebStorageSharedClientState.prototype.handleOnlineStateEvent = function (onlineState) {\n    // We check whether the client that wrote this online state is still active\n    // by comparing its client ID to the list of clients kept active in\n    // IndexedDb. If a client does not update their IndexedDb client state\n    // within 5 seconds, it is considered inactive and we don't emit an online\n    // state event.\n    if (this.activeClients[onlineState.clientId]) {\n      this.onlineStateHandler(onlineState.onlineState);\n    }\n  };\n\n  return WebStorageSharedClientState;\n}();\n\nfunction fromWebStorageSequenceNumber(seqString) {\n  var sequenceNumber = ListenSequence.INVALID;\n\n  if (seqString != null) {\n    try {\n      var parsed = JSON.parse(seqString);\n      assert(typeof parsed === 'number', 'Found non-numeric sequence number');\n      sequenceNumber = parsed;\n    } catch (e) {\n      error(LOG_TAG$a, 'Failed to read sequence number from WebStorage', e);\n    }\n  }\n\n  return sequenceNumber;\n}\n/**\r\n * `MemorySharedClientState` is a simple implementation of SharedClientState for\r\n * clients using memory persistence. The state in this class remains fully\r\n * isolated and no synchronization is performed.\r\n */\n\n\nvar MemorySharedClientState =\n/** @class */\nfunction () {\n  function MemorySharedClientState() {\n    this.localState = new LocalClientState();\n    this.queryState = {};\n    this.syncEngine = null;\n    this.onlineStateHandler = null;\n    this.sequenceNumberHandler = null;\n  }\n\n  MemorySharedClientState.prototype.addPendingMutation = function (batchId) {// No op.\n  };\n\n  MemorySharedClientState.prototype.updateMutationState = function (batchId, state, error) {// No op.\n  };\n\n  MemorySharedClientState.prototype.addLocalQueryTarget = function (targetId) {\n    this.localState.addQueryTarget(targetId);\n    return this.queryState[targetId] || 'not-current';\n  };\n\n  MemorySharedClientState.prototype.updateQueryState = function (targetId, state, error) {\n    this.queryState[targetId] = state;\n  };\n\n  MemorySharedClientState.prototype.removeLocalQueryTarget = function (targetId) {\n    this.localState.removeQueryTarget(targetId);\n  };\n\n  MemorySharedClientState.prototype.isLocalQueryTarget = function (targetId) {\n    return this.localState.activeTargetIds.has(targetId);\n  };\n\n  MemorySharedClientState.prototype.clearQueryState = function (targetId) {\n    delete this.queryState[targetId];\n  };\n\n  MemorySharedClientState.prototype.getAllActiveQueryTargets = function () {\n    return this.localState.activeTargetIds;\n  };\n\n  MemorySharedClientState.prototype.isActiveQueryTarget = function (targetId) {\n    return this.localState.activeTargetIds.has(targetId);\n  };\n\n  MemorySharedClientState.prototype.start = function () {\n    this.localState = new LocalClientState();\n    return Promise.resolve();\n  };\n\n  MemorySharedClientState.prototype.handleUserChange = function (user, removedBatchIds, addedBatchIds) {// No op.\n  };\n\n  MemorySharedClientState.prototype.setOnlineState = function (onlineState) {// No op.\n  };\n\n  MemorySharedClientState.prototype.shutdown = function () {};\n\n  MemorySharedClientState.prototype.writeSequenceNumber = function (sequenceNumber) {};\n\n  return MemorySharedClientState;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_TAG$b = 'FirestoreClient';\n/** DOMException error code constants. */\n\nvar DOM_EXCEPTION_INVALID_STATE = 11;\nvar DOM_EXCEPTION_ABORTED = 20;\nvar DOM_EXCEPTION_QUOTA_EXCEEDED = 22;\n\nvar IndexedDbPersistenceSettings =\n/** @class */\nfunction () {\n  function IndexedDbPersistenceSettings(cacheSizeBytes, synchronizeTabs) {\n    this.cacheSizeBytes = cacheSizeBytes;\n    this.synchronizeTabs = synchronizeTabs;\n  }\n\n  IndexedDbPersistenceSettings.prototype.lruParams = function () {\n    return LruParams.withCacheSize(this.cacheSizeBytes);\n  };\n\n  return IndexedDbPersistenceSettings;\n}();\n\nvar MemoryPersistenceSettings =\n/** @class */\nfunction () {\n  function MemoryPersistenceSettings() {}\n\n  return MemoryPersistenceSettings;\n}();\n/**\r\n * FirestoreClient is a top-level class that constructs and owns all of the\r\n * pieces of the client SDK architecture. It is responsible for creating the\r\n * async queue that is shared by all of the other components in the system.\r\n */\n\n\nvar FirestoreClient =\n/** @class */\nfunction () {\n  function FirestoreClient(platform, databaseInfo, credentials,\n  /**\r\n   * Asynchronous queue responsible for all of our internal processing. When\r\n   * we get incoming work from the user (via public API) or the network\r\n   * (incoming GRPC messages), we should always schedule onto this queue.\r\n   * This ensures all of our work is properly serialized (e.g. we don't\r\n   * start processing a new operation while the previous one is waiting for\r\n   * an async I/O to complete).\r\n   */\n  asyncQueue) {\n    this.platform = platform;\n    this.databaseInfo = databaseInfo;\n    this.credentials = credentials;\n    this.asyncQueue = asyncQueue;\n    this.clientId = AutoId.newId();\n  }\n  /**\r\n   * Starts up the FirestoreClient, returning only whether or not enabling\r\n   * persistence succeeded.\r\n   *\r\n   * The intent here is to \"do the right thing\" as far as users are concerned.\r\n   * Namely, in cases where offline persistence is requested and possible,\r\n   * enable it, but otherwise fall back to persistence disabled. For the most\r\n   * part we expect this to succeed one way or the other so we don't expect our\r\n   * users to actually wait on the firestore.enablePersistence Promise since\r\n   * they generally won't care.\r\n   *\r\n   * Of course some users actually do care about whether or not persistence\r\n   * was successfully enabled, so the Promise returned from this method\r\n   * indicates this outcome.\r\n   *\r\n   * This presents a problem though: even before enablePersistence resolves or\r\n   * rejects, users may have made calls to e.g. firestore.collection() which\r\n   * means that the FirestoreClient in there will be available and will be\r\n   * enqueuing actions on the async queue.\r\n   *\r\n   * Meanwhile any failure of an operation on the async queue causes it to\r\n   * panic and reject any further work, on the premise that unhandled errors\r\n   * are fatal.\r\n   *\r\n   * Consequently the fallback is handled internally here in start, and if the\r\n   * fallback succeeds we signal success to the async queue even though the\r\n   * start() itself signals failure.\r\n   *\r\n   * @param persistenceSettings Settings object to configure offline\r\n   *     persistence.\r\n   * @returns A deferred result indicating the user-visible result of enabling\r\n   *     offline persistence. This method will reject this if IndexedDB fails to\r\n   *     start for any reason. If usePersistence is false this is\r\n   *     unconditionally resolved.\r\n   */\n\n\n  FirestoreClient.prototype.start = function (persistenceSettings) {\n    var _this = this;\n\n    this.verifyNotTerminated(); // We defer our initialization until we get the current user from\n    // setChangeListener(). We block the async queue until we got the initial\n    // user and the initialization is completed. This will prevent any scheduled\n    // work from happening before initialization is completed.\n    //\n    // If initializationDone resolved then the FirestoreClient is in a usable\n    // state.\n\n    var initializationDone = new Deferred(); // If usePersistence is true, certain classes of errors while starting are\n    // recoverable but only by falling back to persistence disabled.\n    //\n    // If there's an error in the first case but not in recovery we cannot\n    // reject the promise blocking the async queue because this will cause the\n    // async queue to panic.\n\n    var persistenceResult = new Deferred();\n    var initialized = false;\n    this.credentials.setChangeListener(function (user) {\n      if (!initialized) {\n        initialized = true;\n\n        _this.initializePersistence(persistenceSettings, persistenceResult, user).then(function (maybeLruGc) {\n          return _this.initializeRest(user, maybeLruGc);\n        }).then(initializationDone.resolve, initializationDone.reject);\n      } else {\n        _this.asyncQueue.enqueueAndForget(function () {\n          return _this.handleCredentialChange(user);\n        });\n      }\n    }); // Block the async queue until initialization is done\n\n    this.asyncQueue.enqueueAndForget(function () {\n      return initializationDone.promise;\n    }); // Return only the result of enabling persistence. Note that this does not\n    // need to await the completion of initializationDone because the result of\n    // this method should not reflect any other kind of failure to start.\n\n    return persistenceResult.promise;\n  };\n  /** Enables the network connection and requeues all pending operations. */\n\n\n  FirestoreClient.prototype.enableNetwork = function () {\n    var _this = this;\n\n    this.verifyNotTerminated();\n    return this.asyncQueue.enqueue(function () {\n      return _this.syncEngine.enableNetwork();\n    });\n  };\n  /**\r\n   * Initializes persistent storage, attempting to use IndexedDB if\r\n   * usePersistence is true or memory-only if false.\r\n   *\r\n   * If IndexedDB fails because it's already open in another tab or because the\r\n   * platform can't possibly support our implementation then this method rejects\r\n   * the persistenceResult and falls back on memory-only persistence.\r\n   *\r\n   * @param persistenceSettings Settings object to configure offline persistence\r\n   * @param persistenceResult A deferred result indicating the user-visible\r\n   *     result of enabling offline persistence. This method will reject this if\r\n   *     IndexedDB fails to start for any reason. If usePersistence is false\r\n   *     this is unconditionally resolved.\r\n   * @returns a Promise indicating whether or not initialization should\r\n   *     continue, i.e. that one of the persistence implementations actually\r\n   *     succeeded.\r\n   */\n\n\n  FirestoreClient.prototype.initializePersistence = function (persistenceSettings, persistenceResult, user) {\n    var _this = this;\n\n    if (persistenceSettings instanceof IndexedDbPersistenceSettings) {\n      return this.startIndexedDbPersistence(user, persistenceSettings).then(function (maybeLruGc) {\n        persistenceResult.resolve();\n        return maybeLruGc;\n      }).catch(function (error) {\n        // Regardless of whether or not the retry succeeds, from an user\n        // perspective, offline persistence has failed.\n        persistenceResult.reject(error); // An unknown failure on the first stage shuts everything down.\n\n        if (!_this.canFallback(error)) {\n          throw error;\n        }\n\n        console.warn('Error enabling offline persistence. Falling back to' + ' persistence disabled: ' + error);\n        return _this.startMemoryPersistence();\n      });\n    } else {\n      // When usePersistence == false, enabling offline persistence is defined\n      // to unconditionally succeed. This allows start() to have the same\n      // signature for both cases, despite the fact that the returned promise\n      // is only used in the enablePersistence call.\n      persistenceResult.resolve();\n      return this.startMemoryPersistence();\n    }\n  };\n  /**\r\n   * Decides whether the provided error allows us to gracefully disable\r\n   * persistence (as opposed to crashing the client).\r\n   */\n\n\n  FirestoreClient.prototype.canFallback = function (error) {\n    if (error instanceof FirestoreError) {\n      return error.code === Code.FAILED_PRECONDITION || error.code === Code.UNIMPLEMENTED;\n    } else if (typeof DOMException !== 'undefined' && error instanceof DOMException) {\n      // There are a few known circumstances where we can open IndexedDb but\n      // trying to read/write will fail (e.g. quota exceeded). For\n      // well-understood cases, we attempt to detect these and then gracefully\n      // fall back to memory persistence.\n      // NOTE: Rather than continue to add to this list, we could decide to\n      // always fall back, with the risk that we might accidentally hide errors\n      // representing actual SDK bugs.\n      return (// When the browser is out of quota we could get either quota exceeded\n        // or an aborted error depending on whether the error happened during\n        // schema migration.\n        error.code === DOM_EXCEPTION_QUOTA_EXCEEDED || error.code === DOM_EXCEPTION_ABORTED || // Firefox Private Browsing mode disables IndexedDb and returns\n        // INVALID_STATE for any usage.\n        error.code === DOM_EXCEPTION_INVALID_STATE\n      );\n    }\n\n    return true;\n  };\n  /**\r\n   * Checks that the client has not been terminated. Ensures that other methods on\r\n   * this class cannot be called after the client is terminated.\r\n   */\n\n\n  FirestoreClient.prototype.verifyNotTerminated = function () {\n    if (this.asyncQueue.isShuttingDown) {\n      throw new FirestoreError(Code.FAILED_PRECONDITION, 'The client has already been terminated.');\n    }\n  };\n  /**\r\n   * Starts IndexedDB-based persistence.\r\n   *\r\n   * @returns A promise indicating success or failure.\r\n   */\n\n\n  FirestoreClient.prototype.startIndexedDbPersistence = function (user, settings) {\n    var _this = this; // TODO(http://b/33384523): For now we just disable garbage collection\n    // when persistence is enabled.\n\n\n    var persistenceKey = IndexedDbPersistence.buildStoragePrefix(this.databaseInfo); // Opt to use proto3 JSON in case the platform doesn't support Uint8Array.\n\n    var serializer = new JsonProtoSerializer(this.databaseInfo.databaseId, {\n      useProto3Json: true\n    });\n    return Promise.resolve().then(function () {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var lruParams, persistence;\n        return tslib_1.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (settings.synchronizeTabs && !WebStorageSharedClientState.isAvailable(this.platform)) {\n                throw new FirestoreError(Code.UNIMPLEMENTED, 'IndexedDB persistence is only available on platforms that support LocalStorage.');\n              }\n\n              lruParams = settings.lruParams();\n              this.sharedClientState = settings.synchronizeTabs ? new WebStorageSharedClientState(this.asyncQueue, this.platform, persistenceKey, this.clientId, user) : new MemorySharedClientState();\n              return [4\n              /*yield*/\n              , IndexedDbPersistence.createIndexedDbPersistence({\n                allowTabSynchronization: settings.synchronizeTabs,\n                persistenceKey: persistenceKey,\n                clientId: this.clientId,\n                platform: this.platform,\n                queue: this.asyncQueue,\n                serializer: serializer,\n                lruParams: lruParams,\n                sequenceNumberSyncer: this.sharedClientState\n              })];\n\n            case 1:\n              persistence = _a.sent();\n              this.persistence = persistence;\n              return [2\n              /*return*/\n              , persistence.referenceDelegate.garbageCollector];\n          }\n        });\n      });\n    });\n  };\n  /**\r\n   * Starts Memory-backed persistence. In practice this cannot fail.\r\n   *\r\n   * @returns A promise that will successfully resolve.\r\n   */\n\n\n  FirestoreClient.prototype.startMemoryPersistence = function () {\n    this.persistence = MemoryPersistence.createEagerPersistence(this.clientId);\n    this.sharedClientState = new MemorySharedClientState();\n    return Promise.resolve(null);\n  };\n  /**\r\n   * Initializes the rest of the FirestoreClient, assuming the initial user\r\n   * has been obtained from the credential provider and some persistence\r\n   * implementation is available in this.persistence.\r\n   */\n\n\n  FirestoreClient.prototype.initializeRest = function (user, maybeLruGc) {\n    var _this = this;\n\n    debug(LOG_TAG$b, 'Initializing. user=', user.uid);\n    return this.platform.loadConnection(this.databaseInfo).then(function (connection) {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var connectivityMonitor, serializer, datastore, remoteStoreOnlineStateChangedHandler, sharedClientStateOnlineStateChangedHandler;\n\n        var _this = this;\n\n        return tslib_1.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              this.localStore = new LocalStore(this.persistence, user);\n\n              if (maybeLruGc) {\n                // We're running LRU Garbage collection. Set up the scheduler.\n                this.lruScheduler = new LruScheduler(maybeLruGc, this.asyncQueue, this.localStore);\n              }\n\n              connectivityMonitor = this.platform.newConnectivityMonitor();\n              serializer = this.platform.newSerializer(this.databaseInfo.databaseId);\n              datastore = new Datastore(this.asyncQueue, connection, this.credentials, serializer);\n\n              remoteStoreOnlineStateChangedHandler = function remoteStoreOnlineStateChangedHandler(onlineState) {\n                return _this.syncEngine.applyOnlineStateChange(onlineState, OnlineStateSource.RemoteStore);\n              };\n\n              sharedClientStateOnlineStateChangedHandler = function sharedClientStateOnlineStateChangedHandler(onlineState) {\n                return _this.syncEngine.applyOnlineStateChange(onlineState, OnlineStateSource.SharedClientState);\n              };\n\n              this.remoteStore = new RemoteStore(this.localStore, datastore, this.asyncQueue, remoteStoreOnlineStateChangedHandler, connectivityMonitor);\n              this.syncEngine = new SyncEngine(this.localStore, this.remoteStore, this.sharedClientState, user);\n              this.sharedClientState.onlineStateHandler = sharedClientStateOnlineStateChangedHandler; // Set up wiring between sync engine and other components\n\n              this.remoteStore.syncEngine = this.syncEngine;\n              this.sharedClientState.syncEngine = this.syncEngine;\n              this.eventMgr = new EventManager(this.syncEngine); // PORTING NOTE: LocalStore doesn't need an explicit start() on the Web.\n\n              return [4\n              /*yield*/\n              , this.sharedClientState.start()];\n\n            case 1:\n              // PORTING NOTE: LocalStore doesn't need an explicit start() on the Web.\n              _a.sent();\n\n              return [4\n              /*yield*/\n              , this.remoteStore.start()];\n\n            case 2:\n              _a.sent(); // NOTE: This will immediately call the listener, so we make sure to\n              // set it after localStore / remoteStore are started.\n\n\n              return [4\n              /*yield*/\n              , this.persistence.setPrimaryStateListener(function (isPrimary) {\n                return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                  return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        return [4\n                        /*yield*/\n                        , this.syncEngine.applyPrimaryState(isPrimary)];\n\n                      case 1:\n                        _a.sent();\n\n                        if (this.lruScheduler) {\n                          if (isPrimary && !this.lruScheduler.started) {\n                            this.lruScheduler.start();\n                          } else if (!isPrimary) {\n                            this.lruScheduler.stop();\n                          }\n                        }\n\n                        return [2\n                        /*return*/\n                        ];\n                    }\n                  });\n                });\n              })];\n\n            case 3:\n              // NOTE: This will immediately call the listener, so we make sure to\n              // set it after localStore / remoteStore are started.\n              _a.sent(); // When a user calls clearPersistence() in one client, all other clients\n              // need to be terminated to allow the delete to succeed.\n\n\n              return [4\n              /*yield*/\n              , this.persistence.setDatabaseDeletedListener(function () {\n                return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                  return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        return [4\n                        /*yield*/\n                        , this.terminate()];\n\n                      case 1:\n                        _a.sent();\n\n                        return [2\n                        /*return*/\n                        ];\n                    }\n                  });\n                });\n              })];\n\n            case 4:\n              // When a user calls clearPersistence() in one client, all other clients\n              // need to be terminated to allow the delete to succeed.\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n\n  FirestoreClient.prototype.handleCredentialChange = function (user) {\n    this.asyncQueue.verifyOperationInProgress();\n    debug(LOG_TAG$b, 'Credential Changed. Current user: ' + user.uid);\n    return this.syncEngine.handleCredentialChange(user);\n  };\n  /** Disables the network connection. Pending operations will not complete. */\n\n\n  FirestoreClient.prototype.disableNetwork = function () {\n    var _this = this;\n\n    this.verifyNotTerminated();\n    return this.asyncQueue.enqueue(function () {\n      return _this.syncEngine.disableNetwork();\n    });\n  };\n\n  FirestoreClient.prototype.terminate = function () {\n    var _this = this;\n\n    return this.asyncQueue.enqueueAndInitiateShutdown(function () {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        return tslib_1.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              // PORTING NOTE: LocalStore does not need an explicit shutdown on web.\n              if (this.lruScheduler) {\n                this.lruScheduler.stop();\n              }\n\n              return [4\n              /*yield*/\n              , this.remoteStore.shutdown()];\n\n            case 1:\n              _a.sent();\n\n              return [4\n              /*yield*/\n              , this.sharedClientState.shutdown()];\n\n            case 2:\n              _a.sent();\n\n              return [4\n              /*yield*/\n              , this.persistence.shutdown()];\n\n            case 3:\n              _a.sent(); // `removeChangeListener` must be called after shutting down the\n              // RemoteStore as it will prevent the RemoteStore from retrieving\n              // auth tokens.\n\n\n              this.credentials.removeChangeListener();\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n  /**\r\n   * Returns a Promise that resolves when all writes that were pending at the time this\r\n   * method was called received server acknowledgement. An acknowledgement can be either acceptance\r\n   * or rejection.\r\n   */\n\n\n  FirestoreClient.prototype.waitForPendingWrites = function () {\n    var _this = this;\n\n    this.verifyNotTerminated();\n    var deferred = new Deferred();\n    this.asyncQueue.enqueueAndForget(function () {\n      return _this.syncEngine.registerPendingWritesCallback(deferred);\n    });\n    return deferred.promise;\n  };\n\n  FirestoreClient.prototype.listen = function (query, observer, options) {\n    var _this = this;\n\n    this.verifyNotTerminated();\n    var listener = new QueryListener(query, observer, options);\n    this.asyncQueue.enqueueAndForget(function () {\n      return _this.eventMgr.listen(listener);\n    });\n    return listener;\n  };\n\n  FirestoreClient.prototype.unlisten = function (listener) {\n    var _this = this; // Checks for termination but does not raise error, allowing unlisten after\n    // termination to be a no-op.\n\n\n    if (this.clientTerminated) {\n      return;\n    }\n\n    this.asyncQueue.enqueueAndForget(function () {\n      return _this.eventMgr.unlisten(listener);\n    });\n  };\n\n  FirestoreClient.prototype.getDocumentFromLocalCache = function (docKey) {\n    var _this = this;\n\n    this.verifyNotTerminated();\n    return this.asyncQueue.enqueue(function () {\n      return _this.localStore.readDocument(docKey);\n    }).then(function (maybeDoc) {\n      if (maybeDoc instanceof Document) {\n        return maybeDoc;\n      } else if (maybeDoc instanceof NoDocument) {\n        return null;\n      } else {\n        throw new FirestoreError(Code.UNAVAILABLE, 'Failed to get document from cache. (However, this document may ' + \"exist on the server. Run again without setting 'source' in \" + 'the GetOptions to attempt to retrieve the document from the ' + 'server.)');\n      }\n    });\n  };\n\n  FirestoreClient.prototype.getDocumentsFromLocalCache = function (query) {\n    var _this = this;\n\n    this.verifyNotTerminated();\n    return this.asyncQueue.enqueue(function () {\n      return _this.localStore.executeQuery(query);\n    }).then(function (docs) {\n      var remoteKeys = documentKeySet();\n      var view = new View(query, remoteKeys);\n      var viewDocChanges = view.computeDocChanges(docs);\n      return view.applyChanges(viewDocChanges,\n      /* updateLimboDocuments= */\n      false).snapshot;\n    });\n  };\n\n  FirestoreClient.prototype.write = function (mutations) {\n    var _this = this;\n\n    this.verifyNotTerminated();\n    var deferred = new Deferred();\n    this.asyncQueue.enqueueAndForget(function () {\n      return _this.syncEngine.write(mutations, deferred);\n    });\n    return deferred.promise;\n  };\n\n  FirestoreClient.prototype.databaseId = function () {\n    return this.databaseInfo.databaseId;\n  };\n\n  FirestoreClient.prototype.addSnapshotsInSyncListener = function (observer) {\n    var _this = this;\n\n    this.verifyNotTerminated();\n    this.asyncQueue.enqueueAndForget(function () {\n      _this.eventMgr.addSnapshotsInSyncListener(observer);\n\n      return Promise.resolve();\n    });\n  };\n\n  FirestoreClient.prototype.removeSnapshotsInSyncListener = function (observer) {\n    // Checks for shutdown but does not raise error, allowing remove after\n    // shutdown to be a no-op.\n    if (this.clientTerminated) {\n      return;\n    }\n\n    this.eventMgr.removeSnapshotsInSyncListener(observer);\n  };\n\n  Object.defineProperty(FirestoreClient.prototype, \"clientTerminated\", {\n    get: function get() {\n      // Technically, the asyncQueue is still running, but only accepting operations\n      // related to termination or supposed to be run after termination. It is effectively\n      // terminated to the eyes of users.\n      return this.asyncQueue.isShuttingDown;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FirestoreClient.prototype.transaction = function (updateFunction) {\n    var _this = this;\n\n    this.verifyNotTerminated();\n    var deferred = new Deferred();\n    this.asyncQueue.enqueueAndForget(function () {\n      _this.syncEngine.runTransaction(_this.asyncQueue, updateFunction, deferred);\n\n      return Promise.resolve();\n    });\n    return deferred.promise;\n  };\n\n  return FirestoreClient;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/*\r\n * A wrapper implementation of Observer<T> that will dispatch events\r\n * asynchronously. To allow immediate silencing, a mute call is added which\r\n * causes events scheduled to no longer be raised.\r\n */\n\n\nvar AsyncObserver =\n/** @class */\nfunction () {\n  function AsyncObserver(observer) {\n    this.observer = observer;\n    /**\r\n     * When set to true, will not raise future events. Necessary to deal with\r\n     * async detachment of listener.\r\n     */\n\n    this.muted = false;\n  }\n\n  AsyncObserver.prototype.next = function (value) {\n    this.scheduleEvent(this.observer.next, value);\n  };\n\n  AsyncObserver.prototype.error = function (error) {\n    this.scheduleEvent(this.observer.error, error);\n  };\n\n  AsyncObserver.prototype.mute = function () {\n    this.muted = true;\n  };\n\n  AsyncObserver.prototype.scheduleEvent = function (eventHandler, event) {\n    var _this = this;\n\n    if (!this.muted) {\n      setTimeout(function () {\n        if (!_this.muted) {\n          eventHandler(event);\n        }\n      }, 0);\n    }\n  };\n\n  return AsyncObserver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// The objects that are a part of this API are exposed to third-parties as\n// compiled javascript so we want to flag our private members with a leading\n// underscore to discourage their use.\n\n/**\r\n * A FieldPath refers to a field in a document. The path may consist of a single\r\n * field name (referring to a top-level field in the document), or a list of\r\n * field names (referring to a nested field in the document).\r\n */\n\n\nvar FieldPath$1 =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a FieldPath from the provided field names. If more than one field\r\n   * name is provided, the path will point to a nested field in a document.\r\n   *\r\n   * @param fieldNames A list of field names.\r\n   */\n  function FieldPath$1() {\n    var fieldNames = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      fieldNames[_i] = arguments[_i];\n    }\n\n    validateNamedArrayAtLeastNumberOfElements('FieldPath', fieldNames, 'fieldNames', 1);\n\n    for (var i = 0; i < fieldNames.length; ++i) {\n      validateArgType('FieldPath', 'string', i, fieldNames[i]);\n\n      if (fieldNames[i].length === 0) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid field name at argument $(i + 1). \" + 'Field names must not be empty.');\n      }\n    }\n\n    this._internalPath = new FieldPath(fieldNames);\n  }\n\n  FieldPath$1.documentId = function () {\n    return FieldPath$1._DOCUMENT_ID;\n  };\n\n  FieldPath$1.prototype.isEqual = function (other) {\n    if (!(other instanceof FieldPath$1)) {\n      throw invalidClassError('isEqual', 'FieldPath', 1, other);\n    }\n\n    return this._internalPath.isEqual(other._internalPath);\n  };\n  /**\r\n   * Internal Note: The backend doesn't technically support querying by\r\n   * document ID. Instead it queries by the entire document name (full path\r\n   * included), but in the cases we currently support documentId(), the net\r\n   * effect is the same.\r\n   */\n\n\n  FieldPath$1._DOCUMENT_ID = new FieldPath$1(FieldPath.keyField().canonicalString());\n  return FieldPath$1;\n}();\n/**\r\n * Matches any characters in a field path string that are reserved.\r\n */\n\n\nvar RESERVED = new RegExp('[~\\\\*/\\\\[\\\\]]');\n/**\r\n * Parses a field path string into a FieldPath, treating dots as separators.\r\n */\n\nfunction fromDotSeparatedString(path) {\n  var found = path.search(RESERVED);\n\n  if (found >= 0) {\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid field path (\" + path + \"). Paths must not contain \" + \"'~', '*', '/', '[', or ']'\");\n  }\n\n  try {\n    return new (FieldPath$1.bind.apply(FieldPath$1, [void 0].concat(path.split('.'))))();\n  } catch (e) {\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid field path (\" + path + \"). Paths must not be empty, \" + \"begin with '.', end with '.', or contain '..'\");\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar OAuthToken =\n/** @class */\nfunction () {\n  function OAuthToken(value, user) {\n    this.user = user;\n    this.type = 'OAuth';\n    this.authHeaders = {\n      Authorization: \"Bearer \" + value\n    };\n  }\n\n  return OAuthToken;\n}();\n/** A CredentialsProvider that always yields an empty token. */\n\n\nvar EmptyCredentialsProvider =\n/** @class */\nfunction () {\n  function EmptyCredentialsProvider() {\n    /**\r\n     * Stores the listener registered with setChangeListener()\r\n     * This isn't actually necessary since the UID never changes, but we use this\r\n     * to verify the listen contract is adhered to in tests.\r\n     */\n    this.changeListener = null;\n  }\n\n  EmptyCredentialsProvider.prototype.getToken = function () {\n    return Promise.resolve(null);\n  };\n\n  EmptyCredentialsProvider.prototype.invalidateToken = function () {};\n\n  EmptyCredentialsProvider.prototype.setChangeListener = function (changeListener) {\n    assert(!this.changeListener, 'Can only call setChangeListener() once.');\n    this.changeListener = changeListener; // Fire with initial user.\n\n    changeListener(User.UNAUTHENTICATED);\n  };\n\n  EmptyCredentialsProvider.prototype.removeChangeListener = function () {\n    assert(this.changeListener !== null, 'removeChangeListener() when no listener registered');\n    this.changeListener = null;\n  };\n\n  return EmptyCredentialsProvider;\n}();\n\nvar FirebaseCredentialsProvider =\n/** @class */\nfunction () {\n  function FirebaseCredentialsProvider(app) {\n    var _this = this;\n\n    this.app = app;\n    /**\r\n     * The auth token listener registered with FirebaseApp, retained here so we\r\n     * can unregister it.\r\n     */\n\n    this.tokenListener = null;\n    /** Tracks the current User. */\n\n    this.currentUser = User.UNAUTHENTICATED;\n    /**\r\n     * Counter used to detect if the token changed while a getToken request was\r\n     * outstanding.\r\n     */\n\n    this.tokenCounter = 0;\n    /** The listener registered with setChangeListener(). */\n\n    this.changeListener = null;\n    this.forceRefresh = false;\n\n    this.tokenListener = function () {\n      _this.tokenCounter++;\n      _this.currentUser = _this.getUser();\n\n      if (_this.changeListener) {\n        _this.changeListener(_this.currentUser);\n      }\n    };\n\n    this.currentUser = this.getUser();\n    this.tokenCounter = 0; // Will fire at least once where we set this.currentUser\n\n    this.app.INTERNAL.addAuthTokenListener(this.tokenListener);\n  }\n\n  FirebaseCredentialsProvider.prototype.getToken = function () {\n    var _this = this;\n\n    assert(this.tokenListener != null, 'getToken cannot be called after listener removed.'); // Take note of the current value of the tokenCounter so that this method\n    // can fail (with an ABORTED error) if there is a token change while the\n    // request is outstanding.\n\n    var initialTokenCounter = this.tokenCounter;\n    var forceRefresh = this.forceRefresh;\n    this.forceRefresh = false;\n    return this.app.INTERNAL.getToken(forceRefresh).then(function (tokenData) {\n      // Cancel the request since the token changed while the request was\n      // outstanding so the response is potentially for a previous user (which\n      // user, we can't be sure).\n      if (_this.tokenCounter !== initialTokenCounter) {\n        throw new FirestoreError(Code.ABORTED, 'getToken aborted due to token change.');\n      } else {\n        if (tokenData) {\n          assert(typeof tokenData.accessToken === 'string', 'Invalid tokenData returned from getToken():' + tokenData);\n          return new OAuthToken(tokenData.accessToken, _this.currentUser);\n        } else {\n          return null;\n        }\n      }\n    });\n  };\n\n  FirebaseCredentialsProvider.prototype.invalidateToken = function () {\n    this.forceRefresh = true;\n  };\n\n  FirebaseCredentialsProvider.prototype.setChangeListener = function (changeListener) {\n    assert(!this.changeListener, 'Can only call setChangeListener() once.');\n    this.changeListener = changeListener; // Fire the initial event\n\n    changeListener(this.currentUser);\n  };\n\n  FirebaseCredentialsProvider.prototype.removeChangeListener = function () {\n    assert(this.tokenListener != null, 'removeChangeListener() called twice');\n    assert(this.changeListener !== null, 'removeChangeListener() called when no listener registered');\n    this.app.INTERNAL.removeAuthTokenListener(this.tokenListener);\n    this.tokenListener = null;\n    this.changeListener = null;\n  };\n\n  FirebaseCredentialsProvider.prototype.getUser = function () {\n    var currentUid = this.app.INTERNAL.getUid();\n    assert(currentUid === null || typeof currentUid === 'string', 'Received invalid UID: ' + currentUid);\n    return new User(currentUid);\n  };\n\n  return FirebaseCredentialsProvider;\n}();\n/*\r\n * FirstPartyToken provides a fresh token each time its value\r\n * is requested, because if the token is too old, requests will be rejected.\r\n * Technically this may no longer be necessary since the SDK should gracefully\r\n * recover from unauthenticated errors (see b/33147818 for context), but it's\r\n * safer to keep the implementation as-is.\r\n */\n\n\nvar FirstPartyToken =\n/** @class */\nfunction () {\n  function FirstPartyToken(gapi, sessionIndex) {\n    this.gapi = gapi;\n    this.sessionIndex = sessionIndex;\n    this.type = 'FirstParty';\n    this.user = User.FIRST_PARTY;\n  }\n\n  Object.defineProperty(FirstPartyToken.prototype, \"authHeaders\", {\n    get: function get() {\n      var headers = {\n        'X-Goog-AuthUser': this.sessionIndex\n      };\n      var authHeader = this.gapi.auth.getAuthHeaderValueForFirstParty([]);\n\n      if (authHeader) {\n        headers['Authorization'] = authHeader;\n      }\n\n      return headers;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FirstPartyToken;\n}();\n/*\r\n * Provides user credentials required for the Firestore JavaScript SDK\r\n * to authenticate the user, using technique that is only available\r\n * to applications hosted by Google.\r\n */\n\n\nvar FirstPartyCredentialsProvider =\n/** @class */\nfunction () {\n  function FirstPartyCredentialsProvider(gapi, sessionIndex) {\n    this.gapi = gapi;\n    this.sessionIndex = sessionIndex;\n  }\n\n  FirstPartyCredentialsProvider.prototype.getToken = function () {\n    return Promise.resolve(new FirstPartyToken(this.gapi, this.sessionIndex));\n  };\n\n  FirstPartyCredentialsProvider.prototype.setChangeListener = function (changeListener) {\n    // Fire with initial uid.\n    changeListener(User.FIRST_PARTY);\n  };\n\n  FirstPartyCredentialsProvider.prototype.removeChangeListener = function () {};\n\n  FirstPartyCredentialsProvider.prototype.invalidateToken = function () {};\n\n  return FirstPartyCredentialsProvider;\n}();\n/**\r\n * Builds a CredentialsProvider depending on the type of\r\n * the credentials passed in.\r\n */\n\n\nfunction makeCredentialsProvider(credentials) {\n  if (!credentials) {\n    return new EmptyCredentialsProvider();\n  }\n\n  switch (credentials.type) {\n    case 'gapi':\n      var client = credentials.client; // Make sure this really is a Gapi client.\n\n      assert(!!(typeof client === 'object' && client !== null && client['auth'] && client['auth']['getAuthHeaderValueForFirstParty']), 'unexpected gapi interface');\n      return new FirstPartyCredentialsProvider(client, credentials.sessionIndex || '0');\n\n    case 'provider':\n      return credentials.client;\n\n    default:\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'makeCredentialsProvider failed due to invalid credential type');\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isPartialObserver(obj) {\n  return implementsAnyMethods(obj, ['next', 'error', 'complete']);\n}\n/**\r\n * Returns true if obj is an object and contains at least one of the specified\r\n * methods.\r\n */\n\n\nfunction implementsAnyMethods(obj, methods) {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  var object = obj;\n\n  for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\n    var method = methods_1[_i];\n\n    if (method in object && typeof object[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An opaque base class for FieldValue sentinel objects in our public API,\r\n * with public static methods for creating said sentinel objects.\r\n */\n\n\nvar FieldValueImpl =\n/** @class */\nfunction () {\n  function FieldValueImpl(_methodName) {\n    this._methodName = _methodName;\n  }\n\n  FieldValueImpl.delete = function () {\n    validateNoArgs('FieldValue.delete', arguments);\n    return DeleteFieldValueImpl.instance;\n  };\n\n  FieldValueImpl.serverTimestamp = function () {\n    validateNoArgs('FieldValue.serverTimestamp', arguments);\n    return ServerTimestampFieldValueImpl.instance;\n  };\n\n  FieldValueImpl.arrayUnion = function () {\n    var elements = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      elements[_i] = arguments[_i];\n    }\n\n    validateAtLeastNumberOfArgs('FieldValue.arrayUnion', arguments, 1); // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we need access to the Firestore instance.\n\n    return new ArrayUnionFieldValueImpl(elements);\n  };\n\n  FieldValueImpl.arrayRemove = function () {\n    var elements = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      elements[_i] = arguments[_i];\n    }\n\n    validateAtLeastNumberOfArgs('FieldValue.arrayRemove', arguments, 1); // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we need access to the Firestore instance.\n\n    return new ArrayRemoveFieldValueImpl(elements);\n  };\n\n  FieldValueImpl.increment = function (n) {\n    validateArgType('FieldValue.increment', 'number', 1, n);\n    validateExactNumberOfArgs('FieldValue.increment', arguments, 1);\n    return new NumericIncrementFieldValueImpl(n);\n  };\n\n  FieldValueImpl.prototype.isEqual = function (other) {\n    return this === other;\n  };\n\n  return FieldValueImpl;\n}();\n\nvar DeleteFieldValueImpl =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(DeleteFieldValueImpl, _super);\n\n  function DeleteFieldValueImpl() {\n    return _super.call(this, 'FieldValue.delete') || this;\n  }\n  /** Singleton instance. */\n\n\n  DeleteFieldValueImpl.instance = new DeleteFieldValueImpl();\n  return DeleteFieldValueImpl;\n}(FieldValueImpl);\n\nvar ServerTimestampFieldValueImpl =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ServerTimestampFieldValueImpl, _super);\n\n  function ServerTimestampFieldValueImpl() {\n    return _super.call(this, 'FieldValue.serverTimestamp') || this;\n  }\n  /** Singleton instance. */\n\n\n  ServerTimestampFieldValueImpl.instance = new ServerTimestampFieldValueImpl();\n  return ServerTimestampFieldValueImpl;\n}(FieldValueImpl);\n\nvar ArrayUnionFieldValueImpl =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ArrayUnionFieldValueImpl, _super);\n\n  function ArrayUnionFieldValueImpl(_elements) {\n    var _this = _super.call(this, 'FieldValue.arrayUnion') || this;\n\n    _this._elements = _elements;\n    return _this;\n  }\n\n  return ArrayUnionFieldValueImpl;\n}(FieldValueImpl);\n\nvar ArrayRemoveFieldValueImpl =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ArrayRemoveFieldValueImpl, _super);\n\n  function ArrayRemoveFieldValueImpl(_elements) {\n    var _this = _super.call(this, 'FieldValue.arrayRemove') || this;\n\n    _this._elements = _elements;\n    return _this;\n  }\n\n  return ArrayRemoveFieldValueImpl;\n}(FieldValueImpl);\n\nvar NumericIncrementFieldValueImpl =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(NumericIncrementFieldValueImpl, _super);\n\n  function NumericIncrementFieldValueImpl(_operand) {\n    var _this = _super.call(this, 'FieldValue.increment') || this;\n\n    _this._operand = _operand;\n    return _this;\n  }\n\n  return NumericIncrementFieldValueImpl;\n}(FieldValueImpl); // Public instance that disallows construction at runtime. This constructor is\n// used when exporting FieldValueImpl on firebase.firestore.FieldValue and will\n// be called FieldValue publicly. Internally we still use FieldValueImpl which\n// has a type-checked private constructor. Note that FieldValueImpl and\n// PublicFieldValue can be used interchangeably in instanceof checks.\n// For our internal TypeScript code PublicFieldValue doesn't exist as a type,\n// and so we need to use FieldValueImpl as type and export it too.\n\n\nvar PublicFieldValue = makeConstructorPrivate(FieldValueImpl, 'Use FieldValue.<field>() instead.');\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar RESERVED_FIELD_REGEX = /^__.*__$/;\n/** The result of parsing document data (e.g. for a setData call). */\n\nvar ParsedSetData =\n/** @class */\nfunction () {\n  function ParsedSetData(data, fieldMask, fieldTransforms) {\n    this.data = data;\n    this.fieldMask = fieldMask;\n    this.fieldTransforms = fieldTransforms;\n  }\n\n  ParsedSetData.prototype.toMutations = function (key, precondition) {\n    var mutations = [];\n\n    if (this.fieldMask !== null) {\n      mutations.push(new PatchMutation(key, this.data, this.fieldMask, precondition));\n    } else {\n      mutations.push(new SetMutation(key, this.data, precondition));\n    }\n\n    if (this.fieldTransforms.length > 0) {\n      mutations.push(new TransformMutation(key, this.fieldTransforms));\n    }\n\n    return mutations;\n  };\n\n  return ParsedSetData;\n}();\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\n\n\nvar ParsedUpdateData =\n/** @class */\nfunction () {\n  function ParsedUpdateData(data, fieldMask, fieldTransforms) {\n    this.data = data;\n    this.fieldMask = fieldMask;\n    this.fieldTransforms = fieldTransforms;\n  }\n\n  ParsedUpdateData.prototype.toMutations = function (key, precondition) {\n    var mutations = [new PatchMutation(key, this.data, this.fieldMask, precondition)];\n\n    if (this.fieldTransforms.length > 0) {\n      mutations.push(new TransformMutation(key, this.fieldTransforms));\n    }\n\n    return mutations;\n  };\n\n  return ParsedUpdateData;\n}();\n/*\r\n * Represents what type of API method provided the data being parsed; useful\r\n * for determining which error conditions apply during parsing and providing\r\n * better error messages.\r\n */\n\n\nvar UserDataSource;\n\n(function (UserDataSource) {\n  UserDataSource[UserDataSource[\"Set\"] = 0] = \"Set\";\n  UserDataSource[UserDataSource[\"Update\"] = 1] = \"Update\";\n  UserDataSource[UserDataSource[\"MergeSet\"] = 2] = \"MergeSet\";\n  /**\r\n   * Indicates the source is a where clause, cursor bound, arrayUnion()\r\n   * element, etc. Of note, isWrite(source) will return false.\r\n   */\n\n  UserDataSource[UserDataSource[\"Argument\"] = 3] = \"Argument\";\n})(UserDataSource || (UserDataSource = {}));\n\nfunction isWrite(dataSource) {\n  switch (dataSource) {\n    case UserDataSource.Set: // fall through\n\n    case UserDataSource.MergeSet: // fall through\n\n    case UserDataSource.Update:\n      return true;\n\n    case UserDataSource.Argument:\n      return false;\n\n    default:\n      throw fail(\"Unexpected case for UserDataSource: \" + dataSource);\n  }\n}\n/** A \"context\" object passed around while parsing user data. */\n\n\nvar ParseContext =\n/** @class */\nfunction () {\n  /**\r\n   * Initializes a ParseContext with the given source and path.\r\n   *\r\n   * @param dataSource Indicates what kind of API method this data came from.\r\n   * @param methodName The name of the method the user called to create this\r\n   *     ParseContext.\r\n   * @param path A path within the object being parsed. This could be an empty\r\n   *     path (in which case the context represents the root of the data being\r\n   *     parsed), or a nonempty path (indicating the context represents a nested\r\n   *     location within the data).\r\n   * @param arrayElement Whether or not this context corresponds to an element\r\n   *     of an array.\r\n   * @param fieldTransforms A mutable list of field transforms encountered while\r\n   *     parsing the data.\r\n   * @param fieldMask A mutable list of field paths encountered while parsing\r\n   *     the data.\r\n   *\r\n   * TODO(b/34871131): We don't support array paths right now, so path can be\r\n   * null to indicate the context represents any location within an array (in\r\n   * which case certain features will not work and errors will be somewhat\r\n   * compromised).\r\n   */\n  function ParseContext(dataSource, methodName, path, arrayElement, fieldTransforms, fieldMask) {\n    this.dataSource = dataSource;\n    this.methodName = methodName;\n    this.path = path;\n    this.arrayElement = arrayElement; // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n\n    if (fieldTransforms === undefined) {\n      this.validatePath();\n    }\n\n    this.arrayElement = arrayElement !== undefined ? arrayElement : false;\n    this.fieldTransforms = fieldTransforms || [];\n    this.fieldMask = fieldMask || [];\n  }\n\n  ParseContext.prototype.childContextForField = function (field) {\n    var childPath = this.path == null ? null : this.path.child(field);\n    var context = new ParseContext(this.dataSource, this.methodName, childPath,\n    /*arrayElement=*/\n    false, this.fieldTransforms, this.fieldMask);\n    context.validatePathSegment(field);\n    return context;\n  };\n\n  ParseContext.prototype.childContextForFieldPath = function (field) {\n    var childPath = this.path == null ? null : this.path.child(field);\n    var context = new ParseContext(this.dataSource, this.methodName, childPath,\n    /*arrayElement=*/\n    false, this.fieldTransforms, this.fieldMask);\n    context.validatePath();\n    return context;\n  };\n\n  ParseContext.prototype.childContextForArray = function (index) {\n    // TODO(b/34871131): We don't support array paths right now; so make path\n    // null.\n    return new ParseContext(this.dataSource, this.methodName,\n    /*path=*/\n    null,\n    /*arrayElement=*/\n    true, this.fieldTransforms, this.fieldMask);\n  };\n\n  ParseContext.prototype.createError = function (reason) {\n    var fieldDescription = this.path === null || this.path.isEmpty() ? '' : \" (found in field \" + this.path.toString() + \")\";\n    return new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + this.methodName + \"() called with invalid data. \" + reason + fieldDescription);\n  };\n  /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n\n\n  ParseContext.prototype.contains = function (fieldPath) {\n    return this.fieldMask.find(function (field) {\n      return fieldPath.isPrefixOf(field);\n    }) !== undefined || this.fieldTransforms.find(function (transform) {\n      return fieldPath.isPrefixOf(transform.field);\n    }) !== undefined;\n  };\n\n  ParseContext.prototype.validatePath = function () {\n    // TODO(b/34871131): Remove null check once we have proper paths for fields\n    // within arrays.\n    if (this.path === null) {\n      return;\n    }\n\n    for (var i = 0; i < this.path.length; i++) {\n      this.validatePathSegment(this.path.get(i));\n    }\n  };\n\n  ParseContext.prototype.validatePathSegment = function (segment) {\n    if (isWrite(this.dataSource) && RESERVED_FIELD_REGEX.test(segment)) {\n      throw this.createError('Document fields cannot begin and end with __');\n    }\n  };\n\n  return ParseContext;\n}();\n/**\r\n * A placeholder object for DocumentReferences in this file, in order to\r\n * avoid a circular dependency. See the comments for `DataPreConverter` for\r\n * the full context.\r\n */\n\n\nvar DocumentKeyReference =\n/** @class */\nfunction () {\n  function DocumentKeyReference(databaseId, key) {\n    this.databaseId = databaseId;\n    this.key = key;\n  }\n\n  return DocumentKeyReference;\n}();\n/**\r\n * Helper for parsing raw user input (provided via the API) into internal model\r\n * classes.\r\n */\n\n\nvar UserDataConverter =\n/** @class */\nfunction () {\n  function UserDataConverter(preConverter) {\n    this.preConverter = preConverter;\n  }\n  /** Parse document data from a non-merge set() call. */\n\n\n  UserDataConverter.prototype.parseSetData = function (methodName, input) {\n    var context = new ParseContext(UserDataSource.Set, methodName, FieldPath.EMPTY_PATH);\n    validatePlainObject('Data must be an object, but it was:', context, input);\n    var updateData = this.parseData(input, context);\n    return new ParsedSetData(updateData,\n    /* fieldMask= */\n    null, context.fieldTransforms);\n  };\n  /** Parse document data from a set() call with '{merge:true}'. */\n\n\n  UserDataConverter.prototype.parseMergeData = function (methodName, input, fieldPaths) {\n    var context = new ParseContext(UserDataSource.MergeSet, methodName, FieldPath.EMPTY_PATH);\n    validatePlainObject('Data must be an object, but it was:', context, input);\n    var updateData = this.parseData(input, context);\n    var fieldMask;\n    var fieldTransforms;\n\n    if (!fieldPaths) {\n      fieldMask = FieldMask.fromArray(context.fieldMask);\n      fieldTransforms = context.fieldTransforms;\n    } else {\n      var validatedFieldPaths = new SortedSet(FieldPath.comparator);\n\n      for (var _i = 0, fieldPaths_1 = fieldPaths; _i < fieldPaths_1.length; _i++) {\n        var stringOrFieldPath = fieldPaths_1[_i];\n        var fieldPath = void 0;\n\n        if (stringOrFieldPath instanceof FieldPath$1) {\n          fieldPath = stringOrFieldPath._internalPath;\n        } else if (typeof stringOrFieldPath === 'string') {\n          fieldPath = fieldPathFromDotSeparatedString(methodName, stringOrFieldPath);\n        } else {\n          throw fail('Expected stringOrFieldPath to be a string or a FieldPath');\n        }\n\n        if (!context.contains(fieldPath)) {\n          throw new FirestoreError(Code.INVALID_ARGUMENT, \"Field '\" + fieldPath + \"' is specified in your field mask but missing from your input data.\");\n        }\n\n        validatedFieldPaths = validatedFieldPaths.add(fieldPath);\n      }\n\n      fieldMask = FieldMask.fromSet(validatedFieldPaths);\n      fieldTransforms = context.fieldTransforms.filter(function (transform) {\n        return fieldMask.covers(transform.field);\n      });\n    }\n\n    return new ParsedSetData(updateData, fieldMask, fieldTransforms);\n  };\n  /** Parse update data from an update() call. */\n\n\n  UserDataConverter.prototype.parseUpdateData = function (methodName, input) {\n    var _this = this;\n\n    var context = new ParseContext(UserDataSource.Update, methodName, FieldPath.EMPTY_PATH);\n    validatePlainObject('Data must be an object, but it was:', context, input);\n    var fieldMaskPaths = new SortedSet(FieldPath.comparator);\n    var updateData = ObjectValue.EMPTY;\n    forEach(input, function (key, value) {\n      var path = fieldPathFromDotSeparatedString(methodName, key);\n      var childContext = context.childContextForFieldPath(path);\n      value = _this.runPreConverter(value, childContext);\n\n      if (value instanceof DeleteFieldValueImpl) {\n        // Add it to the field mask, but don't add anything to updateData.\n        fieldMaskPaths = fieldMaskPaths.add(path);\n      } else {\n        var parsedValue = _this.parseData(value, childContext);\n\n        if (parsedValue != null) {\n          fieldMaskPaths = fieldMaskPaths.add(path);\n          updateData = updateData.set(path, parsedValue);\n        }\n      }\n    });\n    var mask = FieldMask.fromSet(fieldMaskPaths);\n    return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\n  };\n  /** Parse update data from a list of field/value arguments. */\n\n\n  UserDataConverter.prototype.parseUpdateVarargs = function (methodName, field, value, moreFieldsAndValues) {\n    var context = new ParseContext(UserDataSource.Update, methodName, FieldPath.EMPTY_PATH);\n    var keys = [fieldPathFromArgument(methodName, field)];\n    var values = [value];\n\n    if (moreFieldsAndValues.length % 2 !== 0) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + methodName + \"() needs to be called with an even number \" + 'of arguments that alternate between field names and values.');\n    }\n\n    for (var i = 0; i < moreFieldsAndValues.length; i += 2) {\n      keys.push(fieldPathFromArgument(methodName, moreFieldsAndValues[i]));\n      values.push(moreFieldsAndValues[i + 1]);\n    }\n\n    var fieldMaskPaths = new SortedSet(FieldPath.comparator);\n    var updateData = ObjectValue.EMPTY;\n\n    for (var i = 0; i < keys.length; ++i) {\n      var path = keys[i];\n      var childContext = context.childContextForFieldPath(path);\n      var value_1 = this.runPreConverter(values[i], childContext);\n\n      if (value_1 instanceof DeleteFieldValueImpl) {\n        // Add it to the field mask, but don't add anything to updateData.\n        fieldMaskPaths = fieldMaskPaths.add(path);\n      } else {\n        var parsedValue = this.parseData(value_1, childContext);\n\n        if (parsedValue != null) {\n          fieldMaskPaths = fieldMaskPaths.add(path);\n          updateData = updateData.set(path, parsedValue);\n        }\n      }\n    }\n\n    var mask = FieldMask.fromSet(fieldMaskPaths);\n    return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\n  };\n  /**\r\n   * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\r\n   * bound).\r\n   */\n\n\n  UserDataConverter.prototype.parseQueryValue = function (methodName, input) {\n    var context = new ParseContext(UserDataSource.Argument, methodName, FieldPath.EMPTY_PATH);\n    var parsed = this.parseData(input, context);\n    assert(parsed != null, 'Parsed data should not be null.');\n    assert(context.fieldTransforms.length === 0, 'Field transforms should have been disallowed.');\n    return parsed;\n  };\n  /** Sends data through this.preConverter, handling any thrown errors. */\n\n\n  UserDataConverter.prototype.runPreConverter = function (input, context) {\n    try {\n      return this.preConverter(input);\n    } catch (e) {\n      var message = errorMessage(e);\n      throw context.createError(message);\n    }\n  };\n  /**\r\n   * Internal helper for parsing user data.\r\n   *\r\n   * @param input Data to be parsed.\r\n   * @param context A context object representing the current path being parsed,\r\n   * the source of the data being parsed, etc.\r\n   * @return The parsed value, or null if the value was a FieldValue sentinel\r\n   * that should not be included in the resulting parsed data.\r\n   */\n\n\n  UserDataConverter.prototype.parseData = function (input, context) {\n    input = this.runPreConverter(input, context);\n\n    if (looksLikeJsonObject(input)) {\n      validatePlainObject('Unsupported field value:', context, input);\n      return this.parseObject(input, context);\n    } else if (input instanceof FieldValueImpl) {\n      // FieldValues usually parse into transforms (except FieldValue.delete())\n      // in which case we do not want to include this field in our parsed data\n      // (as doing so will overwrite the field directly prior to the transform\n      // trying to transform it). So we don't add this location to\n      // context.fieldMask and we return null as our parsing result.\n      this.parseSentinelFieldValue(input, context);\n      return null;\n    } else {\n      // If context.path is null we are inside an array and we don't support\n      // field mask paths more granular than the top-level array.\n      if (context.path) {\n        context.fieldMask.push(context.path);\n      }\n\n      if (input instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        if (context.arrayElement) {\n          throw context.createError('Nested arrays are not supported');\n        }\n\n        return this.parseArray(input, context);\n      } else {\n        return this.parseScalarValue(input, context);\n      }\n    }\n  };\n\n  UserDataConverter.prototype.parseObject = function (obj, context) {\n    var _this = this;\n\n    var result = new SortedMap(primitiveComparator);\n\n    if (isEmpty(obj)) {\n      // If we encounter an empty object, we explicitly add it to the update\n      // mask to ensure that the server creates a map entry.\n      if (context.path && context.path.length > 0) {\n        context.fieldMask.push(context.path);\n      }\n    } else {\n      forEach(obj, function (key, val) {\n        var parsedValue = _this.parseData(val, context.childContextForField(key));\n\n        if (parsedValue != null) {\n          result = result.insert(key, parsedValue);\n        }\n      });\n    }\n\n    return new ObjectValue(result);\n  };\n\n  UserDataConverter.prototype.parseArray = function (array, context) {\n    var result = [];\n    var entryIndex = 0;\n\n    for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\n      var entry = array_1[_i];\n      var parsedEntry = this.parseData(entry, context.childContextForArray(entryIndex));\n\n      if (parsedEntry == null) {\n        // Just include nulls in the array for fields being replaced with a\n        // sentinel.\n        parsedEntry = NullValue.INSTANCE;\n      }\n\n      result.push(parsedEntry);\n      entryIndex++;\n    }\n\n    return new ArrayValue(result);\n  };\n  /**\r\n   * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\r\n   * context.fieldTransforms.\r\n   */\n\n\n  UserDataConverter.prototype.parseSentinelFieldValue = function (value, context) {\n    // Sentinels are only supported with writes, and not within arrays.\n    if (!isWrite(context.dataSource)) {\n      throw context.createError(value._methodName + \"() can only be used with update() and set()\");\n    }\n\n    if (context.path === null) {\n      throw context.createError(value._methodName + \"() is not currently supported inside arrays\");\n    }\n\n    if (value instanceof DeleteFieldValueImpl) {\n      if (context.dataSource === UserDataSource.MergeSet) {\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        context.fieldMask.push(context.path);\n      } else if (context.dataSource === UserDataSource.Update) {\n        assert(context.path.length > 0, 'FieldValue.delete() at the top level should have already' + ' been handled.');\n        throw context.createError('FieldValue.delete() can only appear at the top level ' + 'of your update data');\n      } else {\n        // We shouldn't encounter delete sentinels for queries or non-merge set() calls.\n        throw context.createError('FieldValue.delete() cannot be used with set() unless you pass ' + '{merge:true}');\n      }\n    } else if (value instanceof ServerTimestampFieldValueImpl) {\n      context.fieldTransforms.push(new FieldTransform(context.path, ServerTimestampTransform.instance));\n    } else if (value instanceof ArrayUnionFieldValueImpl) {\n      var parsedElements = this.parseArrayTransformElements(value._methodName, value._elements);\n      var arrayUnion = new ArrayUnionTransformOperation(parsedElements);\n      context.fieldTransforms.push(new FieldTransform(context.path, arrayUnion));\n    } else if (value instanceof ArrayRemoveFieldValueImpl) {\n      var parsedElements = this.parseArrayTransformElements(value._methodName, value._elements);\n      var arrayRemove = new ArrayRemoveTransformOperation(parsedElements);\n      context.fieldTransforms.push(new FieldTransform(context.path, arrayRemove));\n    } else if (value instanceof NumericIncrementFieldValueImpl) {\n      var operand = this.parseQueryValue('FieldValue.increment', value._operand);\n      var numericIncrement = new NumericIncrementTransformOperation(operand);\n      context.fieldTransforms.push(new FieldTransform(context.path, numericIncrement));\n    } else {\n      fail('Unknown FieldValue type: ' + value);\n    }\n  };\n  /**\r\n   * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\r\n   *\r\n   * @return The parsed value\r\n   */\n\n\n  UserDataConverter.prototype.parseScalarValue = function (value, context) {\n    if (value === null) {\n      return NullValue.INSTANCE;\n    } else if (typeof value === 'number') {\n      if (isSafeInteger(value)) {\n        return new IntegerValue(value);\n      } else {\n        return new DoubleValue(value);\n      }\n    } else if (typeof value === 'boolean') {\n      return BooleanValue.of(value);\n    } else if (typeof value === 'string') {\n      return new StringValue(value);\n    } else if (value instanceof Date) {\n      return new TimestampValue(Timestamp.fromDate(value));\n    } else if (value instanceof Timestamp) {\n      // Firestore backend truncates precision down to microseconds. To ensure\n      // offline mode works the same with regards to truncation, perform the\n      // truncation immediately without waiting for the backend to do that.\n      return new TimestampValue(new Timestamp(value.seconds, Math.floor(value.nanoseconds / 1000) * 1000));\n    } else if (value instanceof GeoPoint) {\n      return new GeoPointValue(value);\n    } else if (value instanceof Blob) {\n      return new BlobValue(value);\n    } else if (value instanceof DocumentKeyReference) {\n      return new RefValue(value.databaseId, value.key);\n    } else {\n      throw context.createError(\"Unsupported field value: \" + valueDescription(value));\n    }\n  };\n\n  UserDataConverter.prototype.parseArrayTransformElements = function (methodName, elements) {\n    var _this = this;\n\n    return elements.map(function (element, i) {\n      // Although array transforms are used with writes, the actual elements\n      // being unioned or removed are not considered writes since they cannot\n      // contain any FieldValue sentinels, etc.\n      var context = new ParseContext(UserDataSource.Argument, methodName, FieldPath.EMPTY_PATH);\n      return _this.parseData(element, context.childContextForArray(i));\n    });\n  };\n\n  return UserDataConverter;\n}();\n/**\r\n * Checks whether an object looks like a JSON object that should be converted\r\n * into a struct. Normal class/prototype instances are considered to look like\r\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\r\n * GeoPoints, etc. are not considered to look like JSON objects since they map\r\n * to specific FieldValue types other than ObjectValue.\r\n */\n\n\nfunction looksLikeJsonObject(input) {\n  return typeof input === 'object' && input !== null && !(input instanceof Array) && !(input instanceof Date) && !(input instanceof Timestamp) && !(input instanceof GeoPoint) && !(input instanceof Blob) && !(input instanceof DocumentKeyReference) && !(input instanceof FieldValueImpl);\n}\n\nfunction validatePlainObject(message, context, input) {\n  if (!looksLikeJsonObject(input) || !isPlainObject(input)) {\n    var description = valueDescription(input);\n\n    if (description === 'an object') {\n      // Massage the error if it was an object.\n      throw context.createError(message + ' a custom object');\n    } else {\n      throw context.createError(message + ' ' + description);\n    }\n  }\n}\n/**\r\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\r\n */\n\n\nfunction fieldPathFromArgument(methodName, path) {\n  if (path instanceof FieldPath$1) {\n    return path._internalPath;\n  } else if (typeof path === 'string') {\n    return fieldPathFromDotSeparatedString(methodName, path);\n  } else {\n    var message = 'Field path arguments must be of type string or FieldPath.';\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + methodName + \"() called with invalid data. \" + message);\n  }\n}\n/**\r\n * Wraps fromDotSeparatedString with an error message about the method that\r\n * was thrown.\r\n * @param methodName The publicly visible method name\r\n * @param path The dot-separated string form of a field path which will be split\r\n * on dots.\r\n */\n\n\nfunction fieldPathFromDotSeparatedString(methodName, path) {\n  try {\n    return fromDotSeparatedString(path)._internalPath;\n  } catch (e) {\n    var message = errorMessage(e);\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + methodName + \"() called with invalid data. \" + message);\n  }\n}\n/**\r\n * Extracts the message from a caught exception, which should be an Error object\r\n * though JS doesn't guarantee that.\r\n */\n\n\nfunction errorMessage(error) {\n  return error instanceof Error ? error.message : error.toString();\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// settings() defaults:\n\n\nvar DEFAULT_HOST = 'firestore.googleapis.com';\nvar DEFAULT_SSL = true;\nvar DEFAULT_TIMESTAMPS_IN_SNAPSHOTS = true;\nvar DEFAULT_FORCE_LONG_POLLING = false;\n/**\r\n * Constant used to indicate the LRU garbage collection should be disabled.\r\n * Set this value as the `cacheSizeBytes` on the settings passed to the\r\n * `Firestore` instance.\r\n */\n\nvar CACHE_SIZE_UNLIMITED = LruParams.COLLECTION_DISABLED; // enablePersistence() defaults:\n\nvar DEFAULT_SYNCHRONIZE_TABS = false;\n/**\r\n * A concrete type describing all the values that can be applied via a\r\n * user-supplied firestore.Settings object. This is a separate type so that\r\n * defaults can be supplied and the value can be checked for equality.\r\n */\n\nvar FirestoreSettings =\n/** @class */\nfunction () {\n  function FirestoreSettings(settings) {\n    if (settings.host === undefined) {\n      if (settings.ssl !== undefined) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Can't provide ssl option if host option is not set\");\n      }\n\n      this.host = DEFAULT_HOST;\n      this.ssl = DEFAULT_SSL;\n    } else {\n      validateNamedType('settings', 'non-empty string', 'host', settings.host);\n      this.host = settings.host;\n      validateNamedOptionalType('settings', 'boolean', 'ssl', settings.ssl);\n      this.ssl = defaulted(settings.ssl, DEFAULT_SSL);\n    }\n\n    validateOptionNames('settings', settings, ['host', 'ssl', 'credentials', 'timestampsInSnapshots', 'cacheSizeBytes', 'experimentalForceLongPolling']);\n    validateNamedOptionalType('settings', 'object', 'credentials', settings.credentials);\n    this.credentials = settings.credentials;\n    validateNamedOptionalType('settings', 'boolean', 'timestampsInSnapshots', settings.timestampsInSnapshots); // Nobody should set timestampsInSnapshots anymore, but the error depends on\n    // whether they set it to true or false...\n\n    if (settings.timestampsInSnapshots === true) {\n      error(\"\\n  The timestampsInSnapshots setting now defaults to true and you no\\n  longer need to explicitly set it. In a future release, the setting\\n  will be removed entirely and so it is recommended that you remove it\\n  from your firestore.settings() call now.\");\n    } else if (settings.timestampsInSnapshots === false) {\n      error(\"\\n  The timestampsInSnapshots setting will soon be removed. YOU MUST UPDATE\\n  YOUR CODE.\\n\\n  To hide this warning, stop using the timestampsInSnapshots setting in your\\n  firestore.settings({ ... }) call.\\n\\n  Once you remove the setting, Timestamps stored in Cloud Firestore will be\\n  read back as Firebase Timestamp objects instead of as system Date objects.\\n  So you will also need to update code expecting a Date to instead expect a\\n  Timestamp. For example:\\n\\n  // Old:\\n  const date = snapshot.get('created_at');\\n  // New:\\n  const timestamp = snapshot.get('created_at'); const date =\\n  timestamp.toDate();\\n\\n  Please audit all existing usages of Date when you enable the new\\n  behavior.\");\n    }\n\n    this.timestampsInSnapshots = defaulted(settings.timestampsInSnapshots, DEFAULT_TIMESTAMPS_IN_SNAPSHOTS);\n    validateNamedOptionalType('settings', 'number', 'cacheSizeBytes', settings.cacheSizeBytes);\n\n    if (settings.cacheSizeBytes === undefined) {\n      this.cacheSizeBytes = LruParams.DEFAULT_CACHE_SIZE_BYTES;\n    } else {\n      if (settings.cacheSizeBytes !== CACHE_SIZE_UNLIMITED && settings.cacheSizeBytes < LruParams.MINIMUM_CACHE_SIZE_BYTES) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"cacheSizeBytes must be at least \" + LruParams.MINIMUM_CACHE_SIZE_BYTES);\n      } else {\n        this.cacheSizeBytes = settings.cacheSizeBytes;\n      }\n    }\n\n    validateNamedOptionalType('settings', 'boolean', 'experimentalForceLongPolling', settings.experimentalForceLongPolling);\n    this.forceLongPolling = settings.experimentalForceLongPolling === undefined ? DEFAULT_FORCE_LONG_POLLING : settings.experimentalForceLongPolling;\n  }\n\n  FirestoreSettings.prototype.isEqual = function (other) {\n    return this.host === other.host && this.ssl === other.ssl && this.timestampsInSnapshots === other.timestampsInSnapshots && this.credentials === other.credentials && this.cacheSizeBytes === other.cacheSizeBytes && this.forceLongPolling === other.forceLongPolling;\n  };\n\n  return FirestoreSettings;\n}();\n/**\r\n * The root reference to the database.\r\n */\n\n\nvar Firestore =\n/** @class */\nfunction () {\n  function Firestore(databaseIdOrApp) {\n    var _this = this;\n\n    this._firebaseApp = null; // Public for use in tests.\n    // TODO(mikelehen): Use modularized initialization instead.\n\n    this._queue = new AsyncQueue();\n    this.INTERNAL = {\n      delete: function _delete() {\n        return tslib_1.__awaiter(_this, void 0, void 0, function () {\n          return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                // The client must be initalized to ensure that all subsequent API usage\n                // throws an exception.\n                this.ensureClientConfigured();\n                return [4\n                /*yield*/\n                , this._firestoreClient.terminate()];\n\n              case 1:\n                _a.sent();\n\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    };\n\n    if (typeof databaseIdOrApp.options === 'object') {\n      // This is very likely a Firebase app object\n      // TODO(b/34177605): Can we somehow use instanceof?\n      var app = databaseIdOrApp;\n      this._firebaseApp = app;\n      this._databaseId = Firestore.databaseIdFromApp(app);\n      this._persistenceKey = app.name;\n      this._credentials = new FirebaseCredentialsProvider(app);\n    } else {\n      var external_1 = databaseIdOrApp;\n\n      if (!external_1.projectId) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Must provide projectId');\n      }\n\n      this._databaseId = new DatabaseId(external_1.projectId, external_1.database); // Use a default persistenceKey that lines up with FirebaseApp.\n\n      this._persistenceKey = '[DEFAULT]';\n      this._credentials = new EmptyCredentialsProvider();\n    }\n\n    this._settings = new FirestoreSettings({});\n    this._dataConverter = this.createDataConverter(this._databaseId);\n  }\n\n  Firestore.prototype.settings = function (settingsLiteral) {\n    validateExactNumberOfArgs('Firestore.settings', arguments, 1);\n    validateArgType('Firestore.settings', 'object', 1, settingsLiteral);\n\n    if (contains(settingsLiteral, 'persistence')) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, '\"persistence\" is now specified with a separate call to ' + 'firestore.enablePersistence().');\n    }\n\n    var newSettings = new FirestoreSettings(settingsLiteral);\n\n    if (this._firestoreClient && !this._settings.isEqual(newSettings)) {\n      throw new FirestoreError(Code.FAILED_PRECONDITION, 'Firestore has already been started and its settings can no longer ' + 'be changed. You can only call settings() before calling any other ' + 'methods on a Firestore object.');\n    }\n\n    this._settings = newSettings;\n\n    if (newSettings.credentials !== undefined) {\n      this._credentials = makeCredentialsProvider(newSettings.credentials);\n    }\n  };\n\n  Firestore.prototype.enableNetwork = function () {\n    this.ensureClientConfigured();\n    return this._firestoreClient.enableNetwork();\n  };\n\n  Firestore.prototype.disableNetwork = function () {\n    this.ensureClientConfigured();\n    return this._firestoreClient.disableNetwork();\n  };\n\n  Firestore.prototype.enablePersistence = function (settings) {\n    if (this._firestoreClient) {\n      throw new FirestoreError(Code.FAILED_PRECONDITION, 'Firestore has already been started and persistence can no longer ' + 'be enabled. You can only call enablePersistence() before calling ' + 'any other methods on a Firestore object.');\n    }\n\n    var synchronizeTabs = false;\n\n    if (settings) {\n      if (settings.experimentalTabSynchronization !== undefined) {\n        error(\"The 'experimentalTabSynchronization' setting has been renamed to \" + \"'synchronizeTabs'. In a future release, the setting will be removed \" + 'and it is recommended that you update your ' + \"firestore.enablePersistence() call to use 'synchronizeTabs'.\");\n      }\n\n      synchronizeTabs = defaulted(settings.synchronizeTabs !== undefined ? settings.synchronizeTabs : settings.experimentalTabSynchronization, DEFAULT_SYNCHRONIZE_TABS);\n    }\n\n    return this.configureClient(new IndexedDbPersistenceSettings(this._settings.cacheSizeBytes, synchronizeTabs));\n  };\n\n  Firestore.prototype.clearPersistence = function () {\n    var _this = this;\n\n    var persistenceKey = IndexedDbPersistence.buildStoragePrefix(this.makeDatabaseInfo());\n    var deferred = new Deferred();\n\n    this._queue.enqueueAndForgetEvenAfterShutdown(function () {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var e_1;\n        return tslib_1.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 2,, 3]);\n\n              if (this._firestoreClient !== undefined && !this._firestoreClient.clientTerminated) {\n                throw new FirestoreError(Code.FAILED_PRECONDITION, 'Persistence cannot be cleared after this Firestore instance is initialized.');\n              }\n\n              return [4\n              /*yield*/\n              , IndexedDbPersistence.clearPersistence(persistenceKey)];\n\n            case 1:\n              _a.sent();\n\n              deferred.resolve();\n              return [3\n              /*break*/\n              , 3];\n\n            case 2:\n              e_1 = _a.sent();\n              deferred.reject(e_1);\n              return [3\n              /*break*/\n              , 3];\n\n            case 3:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n\n    return deferred.promise;\n  };\n\n  Firestore.prototype.terminate = function () {\n    this.app._removeServiceInstance('firestore');\n\n    return this.INTERNAL.delete();\n  };\n\n  Object.defineProperty(Firestore.prototype, \"_isTerminated\", {\n    get: function get() {\n      this.ensureClientConfigured();\n      return this._firestoreClient.clientTerminated;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Firestore.prototype.waitForPendingWrites = function () {\n    this.ensureClientConfigured();\n    return this._firestoreClient.waitForPendingWrites();\n  };\n\n  Firestore.prototype.onSnapshotsInSync = function (arg) {\n    this.ensureClientConfigured();\n\n    if (isPartialObserver(arg)) {\n      return this.onSnapshotsInSyncInternal(arg);\n    } else {\n      validateArgType('Firestore.onSnapshotsInSync', 'function', 1, arg);\n      var observer = {\n        next: arg\n      };\n      return this.onSnapshotsInSyncInternal(observer);\n    }\n  };\n\n  Firestore.prototype.onSnapshotsInSyncInternal = function (observer) {\n    var _this = this;\n\n    var errHandler = function errHandler(err) {\n      throw fail('Uncaught Error in onSnapshotsInSync');\n    };\n\n    var asyncObserver = new AsyncObserver({\n      next: function next() {\n        if (observer.next) {\n          observer.next();\n        }\n      },\n      error: errHandler\n    });\n\n    this._firestoreClient.addSnapshotsInSyncListener(asyncObserver);\n\n    return function () {\n      asyncObserver.mute();\n\n      _this._firestoreClient.removeSnapshotsInSyncListener(asyncObserver);\n    };\n  };\n\n  Firestore.prototype.ensureClientConfigured = function () {\n    if (!this._firestoreClient) {\n      // Kick off starting the client but don't actually wait for it.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.configureClient(new MemoryPersistenceSettings());\n    }\n\n    return this._firestoreClient;\n  };\n\n  Firestore.prototype.makeDatabaseInfo = function () {\n    return new DatabaseInfo(this._databaseId, this._persistenceKey, this._settings.host, this._settings.ssl, this._settings.forceLongPolling);\n  };\n\n  Firestore.prototype.configureClient = function (persistenceSettings) {\n    assert(!!this._settings.host, 'FirestoreSettings.host is not set');\n    assert(!this._firestoreClient, 'configureClient() called multiple times');\n    var databaseInfo = this.makeDatabaseInfo();\n    this._firestoreClient = new FirestoreClient(PlatformSupport.getPlatform(), databaseInfo, this._credentials, this._queue);\n    return this._firestoreClient.start(persistenceSettings);\n  };\n\n  Firestore.prototype.createDataConverter = function (databaseId) {\n    var preConverter = function preConverter(value) {\n      if (value instanceof DocumentReference) {\n        var thisDb = databaseId;\n        var otherDb = value.firestore._databaseId;\n\n        if (!otherDb.isEqual(thisDb)) {\n          throw new FirestoreError(Code.INVALID_ARGUMENT, 'Document reference is for database ' + (otherDb.projectId + \"/\" + otherDb.database + \" but should be \") + (\"for database \" + thisDb.projectId + \"/\" + thisDb.database));\n        }\n\n        return new DocumentKeyReference(databaseId, value._key);\n      } else {\n        return value;\n      }\n    };\n\n    return new UserDataConverter(preConverter);\n  };\n\n  Firestore.databaseIdFromApp = function (app) {\n    var options = app.options;\n\n    if (!contains(options, 'projectId')) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, '\"projectId\" not provided in firebase.initializeApp.');\n    }\n\n    var projectId = options['projectId'];\n\n    if (!projectId || typeof projectId !== 'string') {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'projectId must be a string in FirebaseApp.options');\n    }\n\n    return new DatabaseId(projectId);\n  };\n\n  Object.defineProperty(Firestore.prototype, \"app\", {\n    get: function get() {\n      if (!this._firebaseApp) {\n        throw new FirestoreError(Code.FAILED_PRECONDITION, \"Firestore was not initialized using the Firebase SDK. 'app' is \" + 'not available');\n      }\n\n      return this._firebaseApp;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Firestore.prototype.collection = function (pathString) {\n    validateExactNumberOfArgs('Firestore.collection', arguments, 1);\n    validateArgType('Firestore.collection', 'non-empty string', 1, pathString);\n    this.ensureClientConfigured();\n    return new CollectionReference(ResourcePath.fromString(pathString), this);\n  };\n\n  Firestore.prototype.doc = function (pathString) {\n    validateExactNumberOfArgs('Firestore.doc', arguments, 1);\n    validateArgType('Firestore.doc', 'non-empty string', 1, pathString);\n    this.ensureClientConfigured();\n    return DocumentReference.forPath(ResourcePath.fromString(pathString), this);\n  };\n\n  Firestore.prototype.collectionGroup = function (collectionId) {\n    validateExactNumberOfArgs('Firestore.collectionGroup', arguments, 1);\n    validateArgType('Firestore.collectionGroup', 'non-empty string', 1, collectionId);\n\n    if (collectionId.indexOf('/') >= 0) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid collection ID '\" + collectionId + \"' passed to function \" + \"Firestore.collectionGroup(). Collection IDs must not contain '/'.\");\n    }\n\n    this.ensureClientConfigured();\n    return new Query$1(new Query(ResourcePath.EMPTY_PATH, collectionId), this);\n  };\n\n  Firestore.prototype.runTransaction = function (updateFunction) {\n    var _this = this;\n\n    validateExactNumberOfArgs('Firestore.runTransaction', arguments, 1);\n    validateArgType('Firestore.runTransaction', 'function', 1, updateFunction);\n    return this.ensureClientConfigured().transaction(function (transaction) {\n      return updateFunction(new Transaction$1(_this, transaction));\n    });\n  };\n\n  Firestore.prototype.batch = function () {\n    this.ensureClientConfigured();\n    return new WriteBatch(this);\n  };\n\n  Object.defineProperty(Firestore, \"logLevel\", {\n    get: function get() {\n      switch (getLogLevel()) {\n        case LogLevel.DEBUG:\n          return 'debug';\n\n        case LogLevel.ERROR:\n          return 'error';\n\n        case LogLevel.SILENT:\n          return 'silent';\n\n        default:\n          return fail('Unknown log level: ' + getLogLevel());\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Firestore.setLogLevel = function (level) {\n    validateExactNumberOfArgs('Firestore.setLogLevel', arguments, 1);\n    validateArgType('Firestore.setLogLevel', 'non-empty string', 1, level);\n\n    switch (level) {\n      case 'debug':\n        setLogLevel(LogLevel.DEBUG);\n        break;\n\n      case 'error':\n        setLogLevel(LogLevel.ERROR);\n        break;\n\n      case 'silent':\n        setLogLevel(LogLevel.SILENT);\n        break;\n\n      default:\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid log level: ' + level);\n    }\n  }; // Note: this is not a property because the minifier can't work correctly with\n  // the way TypeScript compiler outputs properties.\n\n\n  Firestore.prototype._areTimestampsInSnapshotsEnabled = function () {\n    return this._settings.timestampsInSnapshots;\n  };\n\n  return Firestore;\n}();\n/**\r\n * A reference to a transaction.\r\n */\n\n\nvar Transaction$1 =\n/** @class */\nfunction () {\n  function Transaction(_firestore, _transaction) {\n    this._firestore = _firestore;\n    this._transaction = _transaction;\n  }\n\n  Transaction.prototype.get = function (documentRef) {\n    var _this = this;\n\n    validateExactNumberOfArgs('Transaction.get', arguments, 1);\n    var ref = validateReference('Transaction.get', documentRef, this._firestore);\n    return this._transaction.lookup([ref._key]).then(function (docs) {\n      if (!docs || docs.length !== 1) {\n        return fail('Mismatch in docs returned from document lookup.');\n      }\n\n      var doc = docs[0];\n\n      if (doc instanceof NoDocument) {\n        return new DocumentSnapshot(_this._firestore, ref._key, null,\n        /* fromCache= */\n        false,\n        /* hasPendingWrites= */\n        false);\n      } else if (doc instanceof Document) {\n        return new DocumentSnapshot(_this._firestore, ref._key, doc,\n        /* fromCache= */\n        false,\n        /* hasPendingWrites= */\n        false);\n      } else {\n        throw fail(\"BatchGetDocumentsRequest returned unexpected document type: \" + doc.constructor.name);\n      }\n    });\n  };\n\n  Transaction.prototype.set = function (documentRef, value, options) {\n    validateBetweenNumberOfArgs('Transaction.set', arguments, 2, 3);\n    var ref = validateReference('Transaction.set', documentRef, this._firestore);\n    options = validateSetOptions('Transaction.set', options);\n    var parsed = options.merge || options.mergeFields ? this._firestore._dataConverter.parseMergeData('Transaction.set', value, options.mergeFields) : this._firestore._dataConverter.parseSetData('Transaction.set', value);\n\n    this._transaction.set(ref._key, parsed);\n\n    return this;\n  };\n\n  Transaction.prototype.update = function (documentRef, fieldOrUpdateData, value) {\n    var moreFieldsAndValues = [];\n\n    for (var _i = 3; _i < arguments.length; _i++) {\n      moreFieldsAndValues[_i - 3] = arguments[_i];\n    }\n\n    var ref;\n    var parsed;\n\n    if (typeof fieldOrUpdateData === 'string' || fieldOrUpdateData instanceof FieldPath$1) {\n      validateAtLeastNumberOfArgs('Transaction.update', arguments, 3);\n      ref = validateReference('Transaction.update', documentRef, this._firestore);\n      parsed = this._firestore._dataConverter.parseUpdateVarargs('Transaction.update', fieldOrUpdateData, value, moreFieldsAndValues);\n    } else {\n      validateExactNumberOfArgs('Transaction.update', arguments, 2);\n      ref = validateReference('Transaction.update', documentRef, this._firestore);\n      parsed = this._firestore._dataConverter.parseUpdateData('Transaction.update', fieldOrUpdateData);\n    }\n\n    this._transaction.update(ref._key, parsed);\n\n    return this;\n  };\n\n  Transaction.prototype.delete = function (documentRef) {\n    validateExactNumberOfArgs('Transaction.delete', arguments, 1);\n    var ref = validateReference('Transaction.delete', documentRef, this._firestore);\n\n    this._transaction.delete(ref._key);\n\n    return this;\n  };\n\n  return Transaction;\n}();\n\nvar WriteBatch =\n/** @class */\nfunction () {\n  function WriteBatch(_firestore) {\n    this._firestore = _firestore;\n    this._mutations = [];\n    this._committed = false;\n  }\n\n  WriteBatch.prototype.set = function (documentRef, value, options) {\n    validateBetweenNumberOfArgs('WriteBatch.set', arguments, 2, 3);\n    this.verifyNotCommitted();\n    var ref = validateReference('WriteBatch.set', documentRef, this._firestore);\n    options = validateSetOptions('WriteBatch.set', options);\n    var parsed = options.merge || options.mergeFields ? this._firestore._dataConverter.parseMergeData('WriteBatch.set', value, options.mergeFields) : this._firestore._dataConverter.parseSetData('WriteBatch.set', value);\n    this._mutations = this._mutations.concat(parsed.toMutations(ref._key, Precondition.NONE));\n    return this;\n  };\n\n  WriteBatch.prototype.update = function (documentRef, fieldOrUpdateData, value) {\n    var moreFieldsAndValues = [];\n\n    for (var _i = 3; _i < arguments.length; _i++) {\n      moreFieldsAndValues[_i - 3] = arguments[_i];\n    }\n\n    this.verifyNotCommitted();\n    var ref;\n    var parsed;\n\n    if (typeof fieldOrUpdateData === 'string' || fieldOrUpdateData instanceof FieldPath$1) {\n      validateAtLeastNumberOfArgs('WriteBatch.update', arguments, 3);\n      ref = validateReference('WriteBatch.update', documentRef, this._firestore);\n      parsed = this._firestore._dataConverter.parseUpdateVarargs('WriteBatch.update', fieldOrUpdateData, value, moreFieldsAndValues);\n    } else {\n      validateExactNumberOfArgs('WriteBatch.update', arguments, 2);\n      ref = validateReference('WriteBatch.update', documentRef, this._firestore);\n      parsed = this._firestore._dataConverter.parseUpdateData('WriteBatch.update', fieldOrUpdateData);\n    }\n\n    this._mutations = this._mutations.concat(parsed.toMutations(ref._key, Precondition.exists(true)));\n    return this;\n  };\n\n  WriteBatch.prototype.delete = function (documentRef) {\n    validateExactNumberOfArgs('WriteBatch.delete', arguments, 1);\n    this.verifyNotCommitted();\n    var ref = validateReference('WriteBatch.delete', documentRef, this._firestore);\n    this._mutations = this._mutations.concat(new DeleteMutation(ref._key, Precondition.NONE));\n    return this;\n  };\n\n  WriteBatch.prototype.commit = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        this.verifyNotCommitted();\n        this._committed = true;\n\n        if (this._mutations.length > 0) {\n          return [2\n          /*return*/\n          , this._firestore.ensureClientConfigured().write(this._mutations)];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  WriteBatch.prototype.verifyNotCommitted = function () {\n    if (this._committed) {\n      throw new FirestoreError(Code.FAILED_PRECONDITION, 'A write batch can no longer be used after commit() ' + 'has been called.');\n    }\n  };\n\n  return WriteBatch;\n}();\n/**\r\n * A reference to a particular document in a collection in the database.\r\n */\n\n\nvar DocumentReference =\n/** @class */\nfunction () {\n  function DocumentReference(_key, firestore) {\n    this._key = _key;\n    this.firestore = firestore;\n    this._firestoreClient = this.firestore.ensureClientConfigured();\n  }\n\n  DocumentReference.forPath = function (path, firestore) {\n    if (path.length % 2 !== 0) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid document reference. Document ' + 'references must have an even number of segments, but ' + (path.canonicalString() + \" has \" + path.length));\n    }\n\n    return new DocumentReference(new DocumentKey(path), firestore);\n  };\n\n  Object.defineProperty(DocumentReference.prototype, \"id\", {\n    get: function get() {\n      return this._key.path.lastSegment();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DocumentReference.prototype, \"parent\", {\n    get: function get() {\n      return new CollectionReference(this._key.path.popLast(), this.firestore);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DocumentReference.prototype, \"path\", {\n    get: function get() {\n      return this._key.path.canonicalString();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  DocumentReference.prototype.collection = function (pathString) {\n    validateExactNumberOfArgs('DocumentReference.collection', arguments, 1);\n    validateArgType('DocumentReference.collection', 'non-empty string', 1, pathString);\n\n    if (!pathString) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'Must provide a non-empty collection name to collection()');\n    }\n\n    var path = ResourcePath.fromString(pathString);\n    return new CollectionReference(this._key.path.child(path), this.firestore);\n  };\n\n  DocumentReference.prototype.isEqual = function (other) {\n    if (!(other instanceof DocumentReference)) {\n      throw invalidClassError('isEqual', 'DocumentReference', 1, other);\n    }\n\n    return this.firestore === other.firestore && this._key.isEqual(other._key);\n  };\n\n  DocumentReference.prototype.set = function (value, options) {\n    validateBetweenNumberOfArgs('DocumentReference.set', arguments, 1, 2);\n    options = validateSetOptions('DocumentReference.set', options);\n    var parsed = options.merge || options.mergeFields ? this.firestore._dataConverter.parseMergeData('DocumentReference.set', value, options.mergeFields) : this.firestore._dataConverter.parseSetData('DocumentReference.set', value);\n    return this._firestoreClient.write(parsed.toMutations(this._key, Precondition.NONE));\n  };\n\n  DocumentReference.prototype.update = function (fieldOrUpdateData, value) {\n    var moreFieldsAndValues = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      moreFieldsAndValues[_i - 2] = arguments[_i];\n    }\n\n    var parsed;\n\n    if (typeof fieldOrUpdateData === 'string' || fieldOrUpdateData instanceof FieldPath$1) {\n      validateAtLeastNumberOfArgs('DocumentReference.update', arguments, 2);\n      parsed = this.firestore._dataConverter.parseUpdateVarargs('DocumentReference.update', fieldOrUpdateData, value, moreFieldsAndValues);\n    } else {\n      validateExactNumberOfArgs('DocumentReference.update', arguments, 1);\n      parsed = this.firestore._dataConverter.parseUpdateData('DocumentReference.update', fieldOrUpdateData);\n    }\n\n    return this._firestoreClient.write(parsed.toMutations(this._key, Precondition.exists(true)));\n  };\n\n  DocumentReference.prototype.delete = function () {\n    validateExactNumberOfArgs('DocumentReference.delete', arguments, 0);\n    return this._firestoreClient.write([new DeleteMutation(this._key, Precondition.NONE)]);\n  };\n\n  DocumentReference.prototype.onSnapshot = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    validateBetweenNumberOfArgs('DocumentReference.onSnapshot', arguments, 1, 4);\n    var options = {\n      includeMetadataChanges: false\n    };\n    var observer;\n    var currArg = 0;\n\n    if (typeof args[currArg] === 'object' && !isPartialObserver(args[currArg])) {\n      options = args[currArg];\n      validateOptionNames('DocumentReference.onSnapshot', options, ['includeMetadataChanges']);\n      validateNamedOptionalType('DocumentReference.onSnapshot', 'boolean', 'includeMetadataChanges', options.includeMetadataChanges);\n      currArg++;\n    }\n\n    var internalOptions = {\n      includeMetadataChanges: options.includeMetadataChanges\n    };\n\n    if (isPartialObserver(args[currArg])) {\n      observer = args[currArg];\n    } else {\n      validateArgType('DocumentReference.onSnapshot', 'function', currArg, args[currArg]);\n      validateOptionalArgType('DocumentReference.onSnapshot', 'function', currArg + 1, args[currArg + 1]);\n      validateOptionalArgType('DocumentReference.onSnapshot', 'function', currArg + 2, args[currArg + 2]);\n      observer = {\n        next: args[currArg],\n        error: args[currArg + 1],\n        complete: args[currArg + 2]\n      };\n    }\n\n    return this.onSnapshotInternal(internalOptions, observer);\n  };\n\n  DocumentReference.prototype.onSnapshotInternal = function (options, observer) {\n    var _this = this;\n\n    var errHandler = function errHandler(err) {\n      console.error('Uncaught Error in onSnapshot:', err);\n    };\n\n    if (observer.error) {\n      errHandler = observer.error.bind(observer);\n    }\n\n    var asyncObserver = new AsyncObserver({\n      next: function next(snapshot) {\n        if (observer.next) {\n          assert(snapshot.docs.size <= 1, 'Too many documents returned on a document query');\n          var doc = snapshot.docs.get(_this._key);\n          observer.next(new DocumentSnapshot(_this.firestore, _this._key, doc, snapshot.fromCache, snapshot.hasPendingWrites));\n        }\n      },\n      error: errHandler\n    });\n\n    var internalListener = this._firestoreClient.listen(Query.atPath(this._key.path), asyncObserver, options);\n\n    return function () {\n      asyncObserver.mute();\n\n      _this._firestoreClient.unlisten(internalListener);\n    };\n  };\n\n  DocumentReference.prototype.get = function (options) {\n    var _this = this;\n\n    validateBetweenNumberOfArgs('DocumentReference.get', arguments, 0, 1);\n    validateGetOptions('DocumentReference.get', options);\n    return new Promise(function (resolve, reject) {\n      if (options && options.source === 'cache') {\n        _this.firestore.ensureClientConfigured().getDocumentFromLocalCache(_this._key).then(function (doc) {\n          resolve(new DocumentSnapshot(_this.firestore, _this._key, doc,\n          /*fromCache=*/\n          true, doc instanceof Document ? doc.hasLocalMutations : false));\n        }, reject);\n      } else {\n        _this.getViaSnapshotListener(resolve, reject, options);\n      }\n    });\n  };\n\n  DocumentReference.prototype.getViaSnapshotListener = function (resolve, reject, options) {\n    var unlisten = this.onSnapshotInternal({\n      includeMetadataChanges: true,\n      waitForSyncWhenOnline: true\n    }, {\n      next: function next(snap) {\n        // Remove query first before passing event to user to avoid\n        // user actions affecting the now stale query.\n        unlisten();\n\n        if (!snap.exists && snap.metadata.fromCache) {\n          // TODO(dimond): If we're online and the document doesn't\n          // exist then we resolve with a doc.exists set to false. If\n          // we're offline however, we reject the Promise in this\n          // case. Two options: 1) Cache the negative response from\n          // the server so we can deliver that even when you're\n          // offline 2) Actually reject the Promise in the online case\n          // if the document doesn't exist.\n          reject(new FirestoreError(Code.UNAVAILABLE, 'Failed to get document because the client is ' + 'offline.'));\n        } else if (snap.exists && snap.metadata.fromCache && options && options.source === 'server') {\n          reject(new FirestoreError(Code.UNAVAILABLE, 'Failed to get document from server. (However, this ' + 'document does exist in the local cache. Run again ' + 'without setting source to \"server\" to ' + 'retrieve the cached document.)'));\n        } else {\n          resolve(snap);\n        }\n      },\n      error: reject\n    });\n  };\n\n  return DocumentReference;\n}();\n\nvar SnapshotMetadata =\n/** @class */\nfunction () {\n  function SnapshotMetadata(hasPendingWrites, fromCache) {\n    this.hasPendingWrites = hasPendingWrites;\n    this.fromCache = fromCache;\n  }\n\n  SnapshotMetadata.prototype.isEqual = function (other) {\n    return this.hasPendingWrites === other.hasPendingWrites && this.fromCache === other.fromCache;\n  };\n\n  return SnapshotMetadata;\n}();\n\nvar DocumentSnapshot =\n/** @class */\nfunction () {\n  function DocumentSnapshot(_firestore, _key, _document, _fromCache, _hasPendingWrites) {\n    this._firestore = _firestore;\n    this._key = _key;\n    this._document = _document;\n    this._fromCache = _fromCache;\n    this._hasPendingWrites = _hasPendingWrites;\n  }\n\n  DocumentSnapshot.prototype.data = function (options) {\n    validateBetweenNumberOfArgs('DocumentSnapshot.data', arguments, 0, 1);\n    options = validateSnapshotOptions('DocumentSnapshot.data', options);\n    return !this._document ? undefined : this.convertObject(this._document.data(), FieldValueOptions.fromSnapshotOptions(options, this._firestore._areTimestampsInSnapshotsEnabled()));\n  };\n\n  DocumentSnapshot.prototype.get = function (fieldPath, options) {\n    validateBetweenNumberOfArgs('DocumentSnapshot.get', arguments, 1, 2);\n    options = validateSnapshotOptions('DocumentSnapshot.get', options);\n\n    if (this._document) {\n      var value = this._document.data().field(fieldPathFromArgument('DocumentSnapshot.get', fieldPath));\n\n      if (value !== null) {\n        return this.convertValue(value, FieldValueOptions.fromSnapshotOptions(options, this._firestore._areTimestampsInSnapshotsEnabled()));\n      }\n    }\n\n    return undefined;\n  };\n\n  Object.defineProperty(DocumentSnapshot.prototype, \"id\", {\n    get: function get() {\n      return this._key.path.lastSegment();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DocumentSnapshot.prototype, \"ref\", {\n    get: function get() {\n      return new DocumentReference(this._key, this._firestore);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DocumentSnapshot.prototype, \"exists\", {\n    get: function get() {\n      return this._document !== null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DocumentSnapshot.prototype, \"metadata\", {\n    get: function get() {\n      return new SnapshotMetadata(this._hasPendingWrites, this._fromCache);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  DocumentSnapshot.prototype.isEqual = function (other) {\n    if (!(other instanceof DocumentSnapshot)) {\n      throw invalidClassError('isEqual', 'DocumentSnapshot', 1, other);\n    }\n\n    return this._firestore === other._firestore && this._fromCache === other._fromCache && this._key.isEqual(other._key) && (this._document === null ? other._document === null : this._document.isEqual(other._document));\n  };\n\n  DocumentSnapshot.prototype.convertObject = function (data, options) {\n    var _this = this;\n\n    var result = {};\n    data.forEach(function (key, value) {\n      result[key] = _this.convertValue(value, options);\n    });\n    return result;\n  };\n\n  DocumentSnapshot.prototype.convertValue = function (value, options) {\n    if (value instanceof ObjectValue) {\n      return this.convertObject(value, options);\n    } else if (value instanceof ArrayValue) {\n      return this.convertArray(value, options);\n    } else if (value instanceof RefValue) {\n      var key = value.value(options);\n\n      var database = this._firestore.ensureClientConfigured().databaseId();\n\n      if (!value.databaseId.isEqual(database)) {\n        // TODO(b/64130202): Somehow support foreign references.\n        error(\"Document \" + this._key.path + \" contains a document \" + \"reference within a different database (\" + (value.databaseId.projectId + \"/\" + value.databaseId.database + \") which is not \") + \"supported. It will be treated as a reference in the current \" + (\"database (\" + database.projectId + \"/\" + database.database + \") \") + \"instead.\");\n      }\n\n      return new DocumentReference(key, this._firestore);\n    } else {\n      return value.value(options);\n    }\n  };\n\n  DocumentSnapshot.prototype.convertArray = function (data, options) {\n    var _this = this;\n\n    return data.internalValue.map(function (value) {\n      return _this.convertValue(value, options);\n    });\n  };\n\n  return DocumentSnapshot;\n}();\n\nvar QueryDocumentSnapshot =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(QueryDocumentSnapshot, _super);\n\n  function QueryDocumentSnapshot() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryDocumentSnapshot.prototype.data = function (options) {\n    var data = _super.prototype.data.call(this, options);\n\n    assert(typeof data === 'object', 'Document in a QueryDocumentSnapshot should exist');\n    return data;\n  };\n\n  return QueryDocumentSnapshot;\n}(DocumentSnapshot);\n\nvar Query$1 =\n/** @class */\nfunction () {\n  function Query(_query, firestore) {\n    this._query = _query;\n    this.firestore = firestore;\n  }\n\n  Query.prototype.where = function (field, opStr, value) {\n    validateExactNumberOfArgs('Query.where', arguments, 3);\n    validateDefined('Query.where', 3, value); // TODO(in-queries): Add 'in' and 'array-contains-any' to validation.\n\n    if (opStr !== 'in' && opStr !== 'array-contains-any') {\n      // Enumerated from the WhereFilterOp type in index.d.ts.\n      var whereFilterOpEnums = ['<', '<=', '==', '>=', '>', 'array-contains'];\n      validateStringEnum('Query.where', whereFilterOpEnums, 2, opStr);\n    }\n\n    var fieldValue;\n    var fieldPath = fieldPathFromArgument('Query.where', field);\n    var operator = Operator.fromString(opStr);\n\n    if (fieldPath.isKeyField()) {\n      if (operator === Operator.ARRAY_CONTAINS || operator === Operator.ARRAY_CONTAINS_ANY) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid Query. You can't perform '\" + operator.toString() + \"' \" + 'queries on FieldPath.documentId().');\n      } else if (operator === Operator.IN) {\n        this.validateDisjunctiveFilterElements(value, operator);\n        var referenceList = [];\n\n        for (var _i = 0, _a = value; _i < _a.length; _i++) {\n          var arrayValue = _a[_i];\n          referenceList.push(this.parseDocumentIdValue(arrayValue));\n        }\n\n        fieldValue = new ArrayValue(referenceList);\n      } else {\n        fieldValue = this.parseDocumentIdValue(value);\n      }\n    } else {\n      if (operator === Operator.IN || operator === Operator.ARRAY_CONTAINS_ANY) {\n        this.validateDisjunctiveFilterElements(value, operator);\n      }\n\n      fieldValue = this.firestore._dataConverter.parseQueryValue('Query.where', value);\n    }\n\n    var filter = FieldFilter.create(fieldPath, operator, fieldValue);\n    this.validateNewFilter(filter);\n    return new Query(this._query.addFilter(filter), this.firestore);\n  };\n\n  Query.prototype.orderBy = function (field, directionStr) {\n    validateBetweenNumberOfArgs('Query.orderBy', arguments, 1, 2);\n    validateOptionalArgType('Query.orderBy', 'non-empty string', 2, directionStr);\n    var direction;\n\n    if (directionStr === undefined || directionStr === 'asc') {\n      direction = Direction.ASCENDING;\n    } else if (directionStr === 'desc') {\n      direction = Direction.DESCENDING;\n    } else {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function Query.orderBy() has unknown direction '\" + directionStr + \"', \" + \"expected 'asc' or 'desc'.\");\n    }\n\n    if (this._query.startAt !== null) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You must not call Query.startAt() or ' + 'Query.startAfter() before calling Query.orderBy().');\n    }\n\n    if (this._query.endAt !== null) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You must not call Query.endAt() or ' + 'Query.endBefore() before calling Query.orderBy().');\n    }\n\n    var fieldPath = fieldPathFromArgument('Query.orderBy', field);\n    var orderBy = new OrderBy(fieldPath, direction);\n    this.validateNewOrderBy(orderBy);\n    return new Query(this._query.addOrderBy(orderBy), this.firestore);\n  };\n\n  Query.prototype.limit = function (n) {\n    validateExactNumberOfArgs('Query.limit', arguments, 1);\n    validateArgType('Query.limit', 'number', 1, n);\n\n    if (n <= 0) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid Query. Query limit (\" + n + \") is invalid. Limit must be \" + 'positive.');\n    }\n\n    return new Query(this._query.withLimit(n), this.firestore);\n  };\n\n  Query.prototype.startAt = function (docOrField) {\n    var fields = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      fields[_i - 1] = arguments[_i];\n    }\n\n    validateAtLeastNumberOfArgs('Query.startAt', arguments, 1);\n    var bound = this.boundFromDocOrFields('Query.startAt', docOrField, fields,\n    /*before=*/\n    true);\n    return new Query(this._query.withStartAt(bound), this.firestore);\n  };\n\n  Query.prototype.startAfter = function (docOrField) {\n    var fields = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      fields[_i - 1] = arguments[_i];\n    }\n\n    validateAtLeastNumberOfArgs('Query.startAfter', arguments, 1);\n    var bound = this.boundFromDocOrFields('Query.startAfter', docOrField, fields,\n    /*before=*/\n    false);\n    return new Query(this._query.withStartAt(bound), this.firestore);\n  };\n\n  Query.prototype.endBefore = function (docOrField) {\n    var fields = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      fields[_i - 1] = arguments[_i];\n    }\n\n    validateAtLeastNumberOfArgs('Query.endBefore', arguments, 1);\n    var bound = this.boundFromDocOrFields('Query.endBefore', docOrField, fields,\n    /*before=*/\n    true);\n    return new Query(this._query.withEndAt(bound), this.firestore);\n  };\n\n  Query.prototype.endAt = function (docOrField) {\n    var fields = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      fields[_i - 1] = arguments[_i];\n    }\n\n    validateAtLeastNumberOfArgs('Query.endAt', arguments, 1);\n    var bound = this.boundFromDocOrFields('Query.endAt', docOrField, fields,\n    /*before=*/\n    false);\n    return new Query(this._query.withEndAt(bound), this.firestore);\n  };\n\n  Query.prototype.isEqual = function (other) {\n    if (!(other instanceof Query)) {\n      throw invalidClassError('isEqual', 'Query', 1, other);\n    }\n\n    return this.firestore === other.firestore && this._query.isEqual(other._query);\n  };\n  /** Helper function to create a bound from a document or fields */\n\n\n  Query.prototype.boundFromDocOrFields = function (methodName, docOrField, fields, before) {\n    validateDefined(methodName, 1, docOrField);\n\n    if (docOrField instanceof DocumentSnapshot) {\n      if (fields.length > 0) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Too many arguments provided to \" + methodName + \"().\");\n      }\n\n      var snap = docOrField;\n\n      if (!snap.exists) {\n        throw new FirestoreError(Code.NOT_FOUND, \"Can't use a DocumentSnapshot that doesn't exist for \" + (methodName + \"().\"));\n      }\n\n      return this.boundFromDocument(methodName, snap._document, before);\n    } else {\n      var allFields = [docOrField].concat(fields);\n      return this.boundFromFields(methodName, allFields, before);\n    }\n  };\n  /**\r\n   * Create a Bound from a query and a document.\r\n   *\r\n   * Note that the Bound will always include the key of the document\r\n   * and so only the provided document will compare equal to the returned\r\n   * position.\r\n   *\r\n   * Will throw if the document does not contain all fields of the order by\r\n   * of the query or if any of the fields in the order by are an uncommitted\r\n   * server timestamp.\r\n   */\n\n\n  Query.prototype.boundFromDocument = function (methodName, doc, before) {\n    var components = []; // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n\n    for (var _i = 0, _a = this._query.orderBy; _i < _a.length; _i++) {\n      var orderBy = _a[_i];\n\n      if (orderBy.field.isKeyField()) {\n        components.push(new RefValue(this.firestore._databaseId, doc.key));\n      } else {\n        var value = doc.field(orderBy.field);\n\n        if (value instanceof ServerTimestampValue) {\n          throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You are trying to start or end a query using a ' + 'document for which the field \"' + orderBy.field + '\" is an uncommitted server timestamp. (Since the value of ' + 'this field is unknown, you cannot start/end a query with it.)');\n        } else if (value !== null) {\n          components.push(value);\n        } else {\n          var field = orderBy.field.canonicalString();\n          throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. You are trying to start or end a query using a \" + (\"document for which the field '\" + field + \"' (used as the \") + \"orderBy) does not exist.\");\n        }\n      }\n    }\n\n    return new Bound(components, before);\n  };\n  /**\r\n   * Converts a list of field values to a Bound for the given query.\r\n   */\n\n\n  Query.prototype.boundFromFields = function (methodName, values, before) {\n    // Use explicit order by's because it has to match the query the user made\n    var orderBy = this._query.explicitOrderBy;\n\n    if (values.length > orderBy.length) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, \"Too many arguments provided to \" + methodName + \"(). \" + \"The number of arguments must be less than or equal to the \" + \"number of Query.orderBy() clauses\");\n    }\n\n    var components = [];\n\n    for (var i = 0; i < values.length; i++) {\n      var rawValue = values[i];\n      var orderByComponent = orderBy[i];\n\n      if (orderByComponent.field.isKeyField()) {\n        if (typeof rawValue !== 'string') {\n          throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. Expected a string for document ID in \" + (methodName + \"(), but got a \" + typeof rawValue));\n        }\n\n        if (!this._query.isCollectionGroupQuery() && rawValue.indexOf('/') !== -1) {\n          throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. When querying a collection and ordering by FieldPath.documentId(), \" + (\"the value passed to \" + methodName + \"() must be a plain document ID, but \") + (\"'\" + rawValue + \"' contains a slash.\"));\n        }\n\n        var path = this._query.path.child(ResourcePath.fromString(rawValue));\n\n        if (!DocumentKey.isDocumentKey(path)) {\n          throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. When querying a collection group and ordering by \" + (\"FieldPath.documentId(), the value passed to \" + methodName + \"() must result in a \") + (\"valid document path, but '\" + path + \"' is not because it contains an odd number \") + \"of segments.\");\n        }\n\n        var key = new DocumentKey(path);\n        components.push(new RefValue(this.firestore._databaseId, key));\n      } else {\n        var wrapped = this.firestore._dataConverter.parseQueryValue(methodName, rawValue);\n\n        components.push(wrapped);\n      }\n    }\n\n    return new Bound(components, before);\n  };\n\n  Query.prototype.onSnapshot = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    validateBetweenNumberOfArgs('Query.onSnapshot', arguments, 1, 4);\n    var options = {};\n    var observer;\n    var currArg = 0;\n\n    if (typeof args[currArg] === 'object' && !isPartialObserver(args[currArg])) {\n      options = args[currArg];\n      validateOptionNames('Query.onSnapshot', options, ['includeMetadataChanges']);\n      validateNamedOptionalType('Query.onSnapshot', 'boolean', 'includeMetadataChanges', options.includeMetadataChanges);\n      currArg++;\n    }\n\n    if (isPartialObserver(args[currArg])) {\n      observer = args[currArg];\n    } else {\n      validateArgType('Query.onSnapshot', 'function', currArg, args[currArg]);\n      validateOptionalArgType('Query.onSnapshot', 'function', currArg + 1, args[currArg + 1]);\n      validateOptionalArgType('Query.onSnapshot', 'function', currArg + 2, args[currArg + 2]);\n      observer = {\n        next: args[currArg],\n        error: args[currArg + 1],\n        complete: args[currArg + 2]\n      };\n    }\n\n    return this.onSnapshotInternal(options, observer);\n  };\n\n  Query.prototype.onSnapshotInternal = function (options, observer) {\n    var _this = this;\n\n    var errHandler = function errHandler(err) {\n      console.error('Uncaught Error in onSnapshot:', err);\n    };\n\n    if (observer.error) {\n      errHandler = observer.error.bind(observer);\n    }\n\n    var asyncObserver = new AsyncObserver({\n      next: function next(result) {\n        if (observer.next) {\n          observer.next(new QuerySnapshot(_this.firestore, _this._query, result));\n        }\n      },\n      error: errHandler\n    });\n    var firestoreClient = this.firestore.ensureClientConfigured();\n    var internalListener = firestoreClient.listen(this._query, asyncObserver, options);\n    return function () {\n      asyncObserver.mute();\n      firestoreClient.unlisten(internalListener);\n    };\n  };\n\n  Query.prototype.get = function (options) {\n    var _this = this;\n\n    validateBetweenNumberOfArgs('Query.get', arguments, 0, 1);\n    validateGetOptions('Query.get', options);\n    return new Promise(function (resolve, reject) {\n      if (options && options.source === 'cache') {\n        _this.firestore.ensureClientConfigured().getDocumentsFromLocalCache(_this._query).then(function (viewSnap) {\n          resolve(new QuerySnapshot(_this.firestore, _this._query, viewSnap));\n        }, reject);\n      } else {\n        _this.getViaSnapshotListener(resolve, reject, options);\n      }\n    });\n  };\n\n  Query.prototype.getViaSnapshotListener = function (resolve, reject, options) {\n    var unlisten = this.onSnapshotInternal({\n      includeMetadataChanges: true,\n      waitForSyncWhenOnline: true\n    }, {\n      next: function next(result) {\n        // Remove query first before passing event to user to avoid\n        // user actions affecting the now stale query.\n        unlisten();\n\n        if (result.metadata.fromCache && options && options.source === 'server') {\n          reject(new FirestoreError(Code.UNAVAILABLE, 'Failed to get documents from server. (However, these ' + 'documents may exist in the local cache. Run again ' + 'without setting source to \"server\" to ' + 'retrieve the cached documents.)'));\n        } else {\n          resolve(result);\n        }\n      },\n      error: reject\n    });\n  };\n  /**\r\n   * Parses the given documentIdValue into a ReferenceValue, throwing\r\n   * appropriate errors if the value is anything other than a DocumentReference\r\n   * or String, or if the string is malformed.\r\n   */\n\n\n  Query.prototype.parseDocumentIdValue = function (documentIdValue) {\n    if (typeof documentIdValue === 'string') {\n      if (documentIdValue === '') {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. When querying with FieldPath.documentId(), you ' + 'must provide a valid document ID, but it was an empty string.');\n      }\n\n      if (!this._query.isCollectionGroupQuery() && documentIdValue.indexOf('/') !== -1) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. When querying a collection by \" + \"FieldPath.documentId(), you must provide a plain document ID, but \" + (\"'\" + documentIdValue + \"' contains a '/' character.\"));\n      }\n\n      var path = this._query.path.child(ResourcePath.fromString(documentIdValue));\n\n      if (!DocumentKey.isDocumentKey(path)) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. When querying a collection group by \" + \"FieldPath.documentId(), the value provided must result in a valid document path, \" + (\"but '\" + path + \"' is not because it has an odd number of segments (\" + path.length + \").\"));\n      }\n\n      return new RefValue(this.firestore._databaseId, new DocumentKey(path));\n    } else if (documentIdValue instanceof DocumentReference) {\n      var ref = documentIdValue;\n      return new RefValue(this.firestore._databaseId, ref._key);\n    } else {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. When querying with FieldPath.documentId(), you must provide a valid \" + \"string or a DocumentReference, but it was: \" + (valueDescription(documentIdValue) + \".\"));\n    }\n  };\n  /**\r\n   * Validates that the value passed into a disjunctrive filter satisfies all\r\n   * array requirements.\r\n   */\n\n\n  Query.prototype.validateDisjunctiveFilterElements = function (value, operator) {\n    if (!Array.isArray(value) || value.length === 0) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid Query. A non-empty array is required for ' + (\"'\" + operator.toString() + \"' filters.\"));\n    }\n\n    if (value.length > 10) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid Query. '\" + operator.toString() + \"' filters support a \" + 'maximum of 10 elements in the value array.');\n    }\n\n    if (value.indexOf(null) >= 0) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid Query. '\" + operator.toString() + \"' filters cannot contain 'null' \" + 'in the value array.');\n    }\n\n    if (value.filter(function (element) {\n      return Number.isNaN(element);\n    }).length > 0) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid Query. '\" + operator.toString() + \"' filters cannot contain 'NaN' \" + 'in the value array.');\n    }\n  };\n\n  Query.prototype.validateNewFilter = function (filter) {\n    if (filter instanceof FieldFilter) {\n      var arrayOps = [Operator.ARRAY_CONTAINS, Operator.ARRAY_CONTAINS_ANY];\n      var disjunctiveOps = [Operator.IN, Operator.ARRAY_CONTAINS_ANY];\n      var isArrayOp = arrayOps.indexOf(filter.op) >= 0;\n      var isDisjunctiveOp = disjunctiveOps.indexOf(filter.op) >= 0;\n\n      if (filter.isInequality()) {\n        var existingField = this._query.getInequalityFilterField();\n\n        if (existingField !== null && !existingField.isEqual(filter.field)) {\n          throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. All where filters with an inequality' + ' (<, <=, >, or >=) must be on the same field. But you have' + (\" inequality filters on '\" + existingField.toString() + \"'\") + (\" and '\" + filter.field.toString() + \"'\"));\n        }\n\n        var firstOrderByField = this._query.getFirstOrderByField();\n\n        if (firstOrderByField !== null) {\n          this.validateOrderByAndInequalityMatch(filter.field, firstOrderByField);\n        }\n      } else if (isDisjunctiveOp || isArrayOp) {\n        // You can have at most 1 disjunctive filter and 1 array filter. Check if\n        // the new filter conflicts with an existing one.\n        var conflictingOp = null;\n\n        if (isDisjunctiveOp) {\n          conflictingOp = this._query.findFilterOperator(disjunctiveOps);\n        }\n\n        if (conflictingOp === null && isArrayOp) {\n          conflictingOp = this._query.findFilterOperator(arrayOps);\n        }\n\n        if (conflictingOp != null) {\n          // We special case when it's a duplicate op to give a slightly clearer error message.\n          if (conflictingOp === filter.op) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You cannot use more than one ' + (\"'\" + filter.op.toString() + \"' filter.\"));\n          } else {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. You cannot use '\" + filter.op.toString() + \"' filters \" + (\"with '\" + conflictingOp.toString() + \"' filters.\"));\n          }\n        }\n      }\n    }\n  };\n\n  Query.prototype.validateNewOrderBy = function (orderBy) {\n    if (this._query.getFirstOrderByField() === null) {\n      // This is the first order by. It must match any inequality.\n      var inequalityField = this._query.getInequalityFilterField();\n\n      if (inequalityField !== null) {\n        this.validateOrderByAndInequalityMatch(inequalityField, orderBy.field);\n      }\n    }\n  };\n\n  Query.prototype.validateOrderByAndInequalityMatch = function (inequality, orderBy) {\n    if (!orderBy.isEqual(inequality)) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. You have a where filter with an inequality \" + (\"(<, <=, >, or >=) on field '\" + inequality.toString() + \"' \") + (\"and so you must also use '\" + inequality.toString() + \"' \") + \"as your first Query.orderBy(), but your first Query.orderBy() \" + (\"is on field '\" + orderBy.toString() + \"' instead.\"));\n    }\n  };\n\n  return Query;\n}();\n\nvar QuerySnapshot =\n/** @class */\nfunction () {\n  function QuerySnapshot(_firestore, _originalQuery, _snapshot) {\n    this._firestore = _firestore;\n    this._originalQuery = _originalQuery;\n    this._snapshot = _snapshot;\n    this._cachedChanges = null;\n    this._cachedChangesIncludeMetadataChanges = null;\n    this.metadata = new SnapshotMetadata(_snapshot.hasPendingWrites, _snapshot.fromCache);\n  }\n\n  Object.defineProperty(QuerySnapshot.prototype, \"docs\", {\n    get: function get() {\n      var result = [];\n      this.forEach(function (doc) {\n        return result.push(doc);\n      });\n      return result;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(QuerySnapshot.prototype, \"empty\", {\n    get: function get() {\n      return this._snapshot.docs.isEmpty();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(QuerySnapshot.prototype, \"size\", {\n    get: function get() {\n      return this._snapshot.docs.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  QuerySnapshot.prototype.forEach = function (callback, thisArg) {\n    var _this = this;\n\n    validateBetweenNumberOfArgs('QuerySnapshot.forEach', arguments, 1, 2);\n    validateArgType('QuerySnapshot.forEach', 'function', 1, callback);\n\n    this._snapshot.docs.forEach(function (doc) {\n      callback.call(thisArg, _this.convertToDocumentImpl(doc));\n    });\n  };\n\n  Object.defineProperty(QuerySnapshot.prototype, \"query\", {\n    get: function get() {\n      return new Query$1(this._originalQuery, this._firestore);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  QuerySnapshot.prototype.docChanges = function (options) {\n    if (options) {\n      validateOptionNames('QuerySnapshot.docChanges', options, ['includeMetadataChanges']);\n      validateNamedOptionalType('QuerySnapshot.docChanges', 'boolean', 'includeMetadataChanges', options.includeMetadataChanges);\n    }\n\n    var includeMetadataChanges = !!(options && options.includeMetadataChanges);\n\n    if (includeMetadataChanges && this._snapshot.excludesMetadataChanges) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'To include metadata changes with your document changes, you must ' + 'also pass { includeMetadataChanges:true } to onSnapshot().');\n    }\n\n    if (!this._cachedChanges || this._cachedChangesIncludeMetadataChanges !== includeMetadataChanges) {\n      this._cachedChanges = changesFromSnapshot(this._firestore, includeMetadataChanges, this._snapshot);\n      this._cachedChangesIncludeMetadataChanges = includeMetadataChanges;\n    }\n\n    return this._cachedChanges;\n  };\n  /** Check the equality. The call can be very expensive. */\n\n\n  QuerySnapshot.prototype.isEqual = function (other) {\n    if (!(other instanceof QuerySnapshot)) {\n      throw invalidClassError('isEqual', 'QuerySnapshot', 1, other);\n    }\n\n    return this._firestore === other._firestore && this._originalQuery.isEqual(other._originalQuery) && this._snapshot.isEqual(other._snapshot);\n  };\n\n  QuerySnapshot.prototype.convertToDocumentImpl = function (doc) {\n    return new QueryDocumentSnapshot(this._firestore, doc.key, doc, this.metadata.fromCache, this._snapshot.mutatedKeys.has(doc.key));\n  };\n\n  return QuerySnapshot;\n}(); // TODO(2018/11/01): As of 2018/04/17 we're changing docChanges from an array\n// into a method. Because this is a runtime breaking change and somewhat subtle\n// (both Array and Function have a .length, etc.), we'll replace commonly-used\n// properties (including Symbol.iterator) to throw a custom error message. In\n// ~6 months we can delete the custom error as most folks will have hopefully\n// migrated.\n\n\nfunction throwDocChangesMethodError() {\n  throw new FirestoreError(Code.INVALID_ARGUMENT, 'QuerySnapshot.docChanges has been changed from a property into a ' + 'method, so usages like \"querySnapshot.docChanges\" should become ' + '\"querySnapshot.docChanges()\"');\n}\n\nvar docChangesPropertiesToOverride = ['length', 'forEach', 'map'].concat(typeof Symbol !== 'undefined' ? [Symbol.iterator] : []);\ndocChangesPropertiesToOverride.forEach(function (property) {\n  /**\r\n   * We are (re-)defining properties on QuerySnapshot.prototype.docChanges which\r\n   * is a Function. This could fail, in particular in the case of 'length' which\r\n   * already exists on Function.prototype and on IE11 is improperly defined with\r\n   * `{ configurable: false }`. So we wrap this in a try/catch to ensure that we\r\n   * still have a functional SDK.\r\n   */\n  try {\n    Object.defineProperty(QuerySnapshot.prototype.docChanges, property, {\n      get: function get() {\n        return throwDocChangesMethodError();\n      }\n    });\n  } catch (err) {} // Ignore this failure intentionally\n\n});\n\nvar CollectionReference =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(CollectionReference, _super);\n\n  function CollectionReference(path, firestore) {\n    var _this = _super.call(this, Query.atPath(path), firestore) || this;\n\n    if (path.length % 2 !== 1) {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid collection reference. Collection ' + 'references must have an odd number of segments, but ' + (path.canonicalString() + \" has \" + path.length));\n    }\n\n    return _this;\n  }\n\n  Object.defineProperty(CollectionReference.prototype, \"id\", {\n    get: function get() {\n      return this._query.path.lastSegment();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CollectionReference.prototype, \"parent\", {\n    get: function get() {\n      var parentPath = this._query.path.popLast();\n\n      if (parentPath.isEmpty()) {\n        return null;\n      } else {\n        return new DocumentReference(new DocumentKey(parentPath), this.firestore);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CollectionReference.prototype, \"path\", {\n    get: function get() {\n      return this._query.path.canonicalString();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CollectionReference.prototype.doc = function (pathString) {\n    validateBetweenNumberOfArgs('CollectionReference.doc', arguments, 0, 1); // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n\n    if (arguments.length === 0) {\n      pathString = AutoId.newId();\n    }\n\n    validateArgType('CollectionReference.doc', 'non-empty string', 1, pathString);\n\n    if (pathString === '') {\n      throw new FirestoreError(Code.INVALID_ARGUMENT, 'Document path must be a non-empty string');\n    }\n\n    var path = ResourcePath.fromString(pathString);\n    return DocumentReference.forPath(this._query.path.child(path), this.firestore);\n  };\n\n  CollectionReference.prototype.add = function (value) {\n    validateExactNumberOfArgs('CollectionReference.add', arguments, 1);\n    validateArgType('CollectionReference.add', 'object', 1, value);\n    var docRef = this.doc();\n    return docRef.set(value).then(function () {\n      return docRef;\n    });\n  };\n\n  return CollectionReference;\n}(Query$1);\n\nfunction validateSetOptions(methodName, options) {\n  if (options === undefined) {\n    return {\n      merge: false\n    };\n  }\n\n  validateOptionNames(methodName, options, ['merge', 'mergeFields']);\n  validateNamedOptionalType(methodName, 'boolean', 'merge', options.merge);\n  validateOptionalArrayElements(methodName, 'mergeFields', 'a string or a FieldPath', options.mergeFields, function (element) {\n    return typeof element === 'string' || element instanceof FieldPath$1;\n  });\n\n  if (options.mergeFields !== undefined && options.merge !== undefined) {\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid options passed to function \" + methodName + \"(): You cannot specify both \\\"merge\\\" \" + \"and \\\"mergeFields\\\".\");\n  }\n\n  return options;\n}\n\nfunction validateSnapshotOptions(methodName, options) {\n  if (options === undefined) {\n    return {};\n  }\n\n  validateOptionNames(methodName, options, ['serverTimestamps']);\n  validateNamedOptionalPropertyEquals(methodName, 'options', 'serverTimestamps', options.serverTimestamps, ['estimate', 'previous', 'none']);\n  return options;\n}\n\nfunction validateGetOptions(methodName, options) {\n  validateOptionalArgType(methodName, 'object', 1, options);\n\n  if (options) {\n    validateOptionNames(methodName, options, ['source']);\n    validateNamedOptionalPropertyEquals(methodName, 'options', 'source', options.source, ['default', 'server', 'cache']);\n  }\n}\n\nfunction validateReference(methodName, documentRef, firestore) {\n  if (!(documentRef instanceof DocumentReference)) {\n    throw invalidClassError(methodName, 'DocumentReference', 1, documentRef);\n  } else if (documentRef.firestore !== firestore) {\n    throw new FirestoreError(Code.INVALID_ARGUMENT, 'Provided document reference is from a different Firestore instance.');\n  } else {\n    return documentRef;\n  }\n}\n/**\r\n * Calculates the array of firestore.DocumentChange's for a given ViewSnapshot.\r\n *\r\n * Exported for testing.\r\n */\n\n\nfunction changesFromSnapshot(firestore, includeMetadataChanges, snapshot) {\n  if (snapshot.oldDocs.isEmpty()) {\n    // Special case the first snapshot because index calculation is easy and\n    // fast\n    var lastDoc_1;\n    var index_1 = 0;\n    return snapshot.docChanges.map(function (change) {\n      var doc = new QueryDocumentSnapshot(firestore, change.doc.key, change.doc, snapshot.fromCache, snapshot.mutatedKeys.has(change.doc.key));\n      assert(change.type === ChangeType.Added, 'Invalid event type for first snapshot');\n      assert(!lastDoc_1 || snapshot.query.docComparator(lastDoc_1, change.doc) < 0, 'Got added events in wrong order');\n      lastDoc_1 = change.doc;\n      return {\n        type: 'added',\n        doc: doc,\n        oldIndex: -1,\n        newIndex: index_1++\n      };\n    });\n  } else {\n    // A DocumentSet that is updated incrementally as changes are applied to use\n    // to lookup the index of a document.\n    var indexTracker_1 = snapshot.oldDocs;\n    return snapshot.docChanges.filter(function (change) {\n      return includeMetadataChanges || change.type !== ChangeType.Metadata;\n    }).map(function (change) {\n      var doc = new QueryDocumentSnapshot(firestore, change.doc.key, change.doc, snapshot.fromCache, snapshot.mutatedKeys.has(change.doc.key));\n      var oldIndex = -1;\n      var newIndex = -1;\n\n      if (change.type !== ChangeType.Added) {\n        oldIndex = indexTracker_1.indexOf(change.doc.key);\n        assert(oldIndex >= 0, 'Index for document not found');\n        indexTracker_1 = indexTracker_1.delete(change.doc.key);\n      }\n\n      if (change.type !== ChangeType.Removed) {\n        indexTracker_1 = indexTracker_1.add(change.doc);\n        newIndex = indexTracker_1.indexOf(change.doc.key);\n      }\n\n      return {\n        type: resultChangeType(change.type),\n        doc: doc,\n        oldIndex: oldIndex,\n        newIndex: newIndex\n      };\n    });\n  }\n}\n\nfunction resultChangeType(type) {\n  switch (type) {\n    case ChangeType.Added:\n      return 'added';\n\n    case ChangeType.Modified:\n    case ChangeType.Metadata:\n      return 'modified';\n\n    case ChangeType.Removed:\n      return 'removed';\n\n    default:\n      return fail('Unknown change type: ' + type);\n  }\n} // Export the classes with a private constructor (it will fail if invoked\n// at runtime). Note that this still allows instanceof checks.\n// We're treating the variables as class names, so disable checking for lower\n// case variable names.\n\n\nvar PublicFirestore = makeConstructorPrivate(Firestore, 'Use firebase.firestore() instead.');\nvar PublicTransaction = makeConstructorPrivate(Transaction$1, 'Use firebase.firestore().runTransaction() instead.');\nvar PublicWriteBatch = makeConstructorPrivate(WriteBatch, 'Use firebase.firestore().batch() instead.');\nvar PublicDocumentReference = makeConstructorPrivate(DocumentReference, 'Use firebase.firestore().doc() instead.');\nvar PublicDocumentSnapshot = makeConstructorPrivate(DocumentSnapshot);\nvar PublicQueryDocumentSnapshot = makeConstructorPrivate(QueryDocumentSnapshot);\nvar PublicQuery = makeConstructorPrivate(Query$1);\nvar PublicQuerySnapshot = makeConstructorPrivate(QuerySnapshot);\nvar PublicCollectionReference = makeConstructorPrivate(CollectionReference, 'Use firebase.firestore().collection() instead.');\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar firestoreNamespace = {\n  Firestore: PublicFirestore,\n  GeoPoint: GeoPoint,\n  Timestamp: Timestamp,\n  Blob: PublicBlob,\n  Transaction: PublicTransaction,\n  WriteBatch: PublicWriteBatch,\n  DocumentReference: PublicDocumentReference,\n  DocumentSnapshot: PublicDocumentSnapshot,\n  Query: PublicQuery,\n  QueryDocumentSnapshot: PublicQueryDocumentSnapshot,\n  QuerySnapshot: PublicQuerySnapshot,\n  CollectionReference: PublicCollectionReference,\n  FieldPath: FieldPath$1,\n  FieldValue: PublicFieldValue,\n  setLogLevel: Firestore.setLogLevel,\n  CACHE_SIZE_UNLIMITED: CACHE_SIZE_UNLIMITED\n};\n/**\r\n * Configures Firestore as part of the Firebase SDK by calling registerService.\r\n */\n\nfunction configureForFirebase(firebase) {\n  firebase.INTERNAL.registerService('firestore', function (app) {\n    return new Firestore(app);\n  }, shallowCopy(firestoreNamespace));\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar NoopConnectivityMonitor =\n/** @class */\nfunction () {\n  function NoopConnectivityMonitor() {}\n\n  NoopConnectivityMonitor.prototype.addCallback = function (callback) {// No-op.\n  };\n\n  NoopConnectivityMonitor.prototype.shutdown = function () {// No-op.\n  };\n\n  return NoopConnectivityMonitor;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_TAG$c = 'ConnectivityMonitor';\n/**\r\n * Browser implementation of ConnectivityMonitor.\r\n */\n\nvar BrowserConnectivityMonitor =\n/** @class */\nfunction () {\n  function BrowserConnectivityMonitor() {\n    var _this = this;\n\n    this.networkAvailableListener = function () {\n      return _this.onNetworkAvailable();\n    };\n\n    this.networkUnavailableListener = function () {\n      return _this.onNetworkUnavailable();\n    };\n\n    this.callbacks = [];\n    this.configureNetworkMonitoring();\n  }\n\n  BrowserConnectivityMonitor.prototype.addCallback = function (callback) {\n    this.callbacks.push(callback);\n  };\n\n  BrowserConnectivityMonitor.prototype.shutdown = function () {\n    window.removeEventListener('online', this.networkAvailableListener);\n    window.removeEventListener('offline', this.networkUnavailableListener);\n  };\n\n  BrowserConnectivityMonitor.prototype.configureNetworkMonitoring = function () {\n    window.addEventListener('online', this.networkAvailableListener);\n    window.addEventListener('offline', this.networkUnavailableListener);\n  };\n\n  BrowserConnectivityMonitor.prototype.onNetworkAvailable = function () {\n    debug(LOG_TAG$c, 'Network connectivity changed: AVAILABLE');\n\n    for (var _i = 0, _a = this.callbacks; _i < _a.length; _i++) {\n      var callback = _a[_i];\n      callback(0\n      /* AVAILABLE */\n      );\n    }\n  };\n\n  BrowserConnectivityMonitor.prototype.onNetworkUnavailable = function () {\n    debug(LOG_TAG$c, 'Network connectivity changed: UNAVAILABLE');\n\n    for (var _i = 0, _a = this.callbacks; _i < _a.length; _i++) {\n      var callback = _a[_i];\n      callback(1\n      /* UNAVAILABLE */\n      );\n    }\n  }; // TODO(chenbrian): Consider passing in window either into this component or\n  // here for testing via FakeWindow.\n\n  /** Checks that all used attributes of window are available. */\n\n\n  BrowserConnectivityMonitor.isAvailable = function () {\n    return typeof window !== 'undefined' && window.addEventListener !== undefined && window.removeEventListener !== undefined;\n  };\n\n  return BrowserConnectivityMonitor;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides a simple helper class that implements the Stream interface to\r\n * bridge to other implementations that are streams but do not implement the\r\n * interface. The stream callbacks are invoked with the callOn... methods.\r\n */\n\n\nvar StreamBridge =\n/** @class */\nfunction () {\n  function StreamBridge(args) {\n    this.sendFn = args.sendFn;\n    this.closeFn = args.closeFn;\n  }\n\n  StreamBridge.prototype.onOpen = function (callback) {\n    assert(!this.wrappedOnOpen, 'Called onOpen on stream twice!');\n    this.wrappedOnOpen = callback;\n  };\n\n  StreamBridge.prototype.onClose = function (callback) {\n    assert(!this.wrappedOnClose, 'Called onClose on stream twice!');\n    this.wrappedOnClose = callback;\n  };\n\n  StreamBridge.prototype.onMessage = function (callback) {\n    assert(!this.wrappedOnMessage, 'Called onMessage on stream twice!');\n    this.wrappedOnMessage = callback;\n  };\n\n  StreamBridge.prototype.close = function () {\n    this.closeFn();\n  };\n\n  StreamBridge.prototype.send = function (msg) {\n    this.sendFn(msg);\n  };\n\n  StreamBridge.prototype.callOnOpen = function () {\n    assert(this.wrappedOnOpen !== undefined, 'Cannot call onOpen because no callback was set');\n    this.wrappedOnOpen();\n  };\n\n  StreamBridge.prototype.callOnClose = function (err) {\n    assert(this.wrappedOnClose !== undefined, 'Cannot call onClose because no callback was set');\n    this.wrappedOnClose(err);\n  };\n\n  StreamBridge.prototype.callOnMessage = function (msg) {\n    assert(this.wrappedOnMessage !== undefined, 'Cannot call onMessage because no callback was set');\n    this.wrappedOnMessage(msg);\n  };\n\n  return StreamBridge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_TAG$d = 'Connection';\nvar RPC_STREAM_SERVICE = 'google.firestore.v1.Firestore';\nvar RPC_URL_VERSION = 'v1';\n/** Maps RPC names to the corresponding REST endpoint name. */\n\nvar RPC_NAME_REST_MAPPING = {\n  BatchGetDocuments: 'batchGet',\n  Commit: 'commit'\n}; // TODO(b/38203344): The SDK_VERSION is set independently from Firebase because\n// we are doing out-of-band releases. Once we release as part of Firebase, we\n// should use the Firebase version instead.\n\nvar X_GOOG_API_CLIENT_VALUE = 'gl-js/ fire/' + SDK_VERSION;\nvar XHR_TIMEOUT_SECS = 15;\n\nvar WebChannelConnection =\n/** @class */\nfunction () {\n  function WebChannelConnection(info) {\n    this.databaseId = info.databaseId;\n    var proto = info.ssl ? 'https' : 'http';\n    this.baseUrl = proto + '://' + info.host;\n    this.forceLongPolling = info.forceLongPolling;\n  }\n  /**\r\n   * Modifies the headers for a request, adding any authorization token if\r\n   * present and any additional headers for the request.\r\n   */\n\n\n  WebChannelConnection.prototype.modifyHeadersForRequest = function (headers, token) {\n    if (token) {\n      for (var header in token.authHeaders) {\n        if (token.authHeaders.hasOwnProperty(header)) {\n          headers[header] = token.authHeaders[header];\n        }\n      }\n    }\n\n    headers['X-Goog-Api-Client'] = X_GOOG_API_CLIENT_VALUE;\n  };\n\n  WebChannelConnection.prototype.invokeRPC = function (rpcName, request, token) {\n    var _this = this;\n\n    var url = this.makeUrl(rpcName);\n    return new Promise(function (resolve, reject) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, XhrIo doesn't have TS typings.\n      var xhr = new webchannelWrapper.XhrIo();\n      xhr.listenOnce(webchannelWrapper.EventType.COMPLETE, function () {\n        try {\n          switch (xhr.getLastErrorCode()) {\n            case webchannelWrapper.ErrorCode.NO_ERROR:\n              var json = xhr.getResponseJson();\n              debug(LOG_TAG$d, 'XHR received:', JSON.stringify(json));\n              resolve(json);\n              break;\n\n            case webchannelWrapper.ErrorCode.TIMEOUT:\n              debug(LOG_TAG$d, 'RPC \"' + rpcName + '\" timed out');\n              reject(new FirestoreError(Code.DEADLINE_EXCEEDED, 'Request time out'));\n              break;\n\n            case webchannelWrapper.ErrorCode.HTTP_ERROR:\n              var status_1 = xhr.getStatus();\n              debug(LOG_TAG$d, 'RPC \"' + rpcName + '\" failed with status:', status_1, 'response text:', xhr.getResponseText());\n\n              if (status_1 > 0) {\n                var responseError = xhr.getResponseJson().error;\n\n                if (!!responseError && !!responseError.status && !!responseError.message) {\n                  var firestoreErrorCode = mapCodeFromHttpResponseErrorStatus(responseError.status);\n                  reject(new FirestoreError(firestoreErrorCode, responseError.message));\n                } else {\n                  reject(new FirestoreError(Code.UNKNOWN, 'Server responded with status ' + xhr.getStatus()));\n                }\n              } else {\n                // If we received an HTTP_ERROR but there's no status code,\n                // it's most probably a connection issue\n                debug(LOG_TAG$d, 'RPC \"' + rpcName + '\" failed');\n                reject(new FirestoreError(Code.UNAVAILABLE, 'Connection failed.'));\n              }\n\n              break;\n\n            default:\n              fail('RPC \"' + rpcName + '\" failed with unanticipated ' + 'webchannel error ' + xhr.getLastErrorCode() + ': ' + xhr.getLastError() + ', giving up.');\n          }\n        } finally {\n          debug(LOG_TAG$d, 'RPC \"' + rpcName + '\" completed.');\n        }\n      }); // The database field is already encoded in URL. Specifying it again in\n      // the body is not necessary in production, and will cause duplicate field\n      // errors in the Firestore Emulator. Let's remove it.\n\n      var jsonObj = tslib_1.__assign({}, request);\n\n      delete jsonObj.database;\n      var requestString = JSON.stringify(jsonObj);\n      debug(LOG_TAG$d, 'XHR sending: ', url + ' ' + requestString); // Content-Type: text/plain will avoid preflight requests which might\n      // mess with CORS and redirects by proxies. If we add custom headers\n      // we will need to change this code to potentially use the\n      // $httpOverwrite parameter supported by ESF to avoid\n      // triggering preflight requests.\n\n      var headers = {\n        'Content-Type': 'text/plain'\n      };\n\n      _this.modifyHeadersForRequest(headers, token);\n\n      xhr.send(url, 'POST', requestString, headers, XHR_TIMEOUT_SECS);\n    });\n  };\n\n  WebChannelConnection.prototype.invokeStreamingRPC = function (rpcName, request, token) {\n    // The REST API automatically aggregates all of the streamed results, so we\n    // can just use the normal invoke() method.\n    return this.invokeRPC(rpcName, request, token);\n  };\n\n  WebChannelConnection.prototype.openStream = function (rpcName, token) {\n    var urlParts = [this.baseUrl, '/', RPC_STREAM_SERVICE, '/', rpcName, '/channel'];\n    var webchannelTransport = webchannelWrapper.createWebChannelTransport();\n    var request = {\n      // Background channel test avoids the initial two test calls and decreases\n      // initial cold start time.\n      // TODO(dimond): wenboz@ mentioned this might affect use with proxies and\n      // we should monitor closely for any reports.\n      backgroundChannelTest: true,\n      // Required for backend stickiness, routing behavior is based on this\n      // parameter.\n      httpSessionIdParam: 'gsessionid',\n      initMessageHeaders: {},\n      messageUrlParams: {\n        // This param is used to improve routing and project isolation by the\n        // backend and must be included in every request.\n        database: \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database\n      },\n      sendRawJson: true,\n      supportsCrossDomainXhr: true,\n      internalChannelParams: {\n        // Override the default timeout (randomized between 10-20 seconds) since\n        // a large write batch on a slow internet connection may take a long\n        // time to send to the backend. Rather than have WebChannel impose a\n        // tight timeout which could lead to infinite timeouts and retries, we\n        // set it very large (5-10 minutes) and rely on the browser's builtin\n        // timeouts to kick in if the request isn't working.\n        forwardChannelRequestTimeoutMs: 10 * 60 * 1000\n      },\n      forceLongPolling: this.forceLongPolling\n    };\n    this.modifyHeadersForRequest(request.initMessageHeaders, token); // Sending the custom headers we just added to request.initMessageHeaders\n    // (Authorization, etc.) will trigger the browser to make a CORS preflight\n    // request because the XHR will no longer meet the criteria for a \"simple\"\n    // CORS request:\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests\n    //\n    // Therefore to avoid the CORS preflight request (an extra network\n    // roundtrip), we use the httpHeadersOverwriteParam option to specify that\n    // the headers should instead be encoded into a special \"$httpHeaders\" query\n    // parameter, which is recognized by the webchannel backend. This is\n    // formally defined here:\n    // https://github.com/google/closure-library/blob/b0e1815b13fb92a46d7c9b3c30de5d6a396a3245/closure/goog/net/rpc/httpcors.js#L32\n    //\n    // But for some unclear reason (see\n    // https://github.com/firebase/firebase-js-sdk/issues/703), this breaks\n    // ReactNative and so we exclude it, which just means ReactNative may be\n    // subject to the extra network roundtrip for CORS preflight.\n\n    if (!util.isReactNative()) {\n      request.httpHeadersOverwriteParam = '$httpHeaders';\n    }\n\n    var url = urlParts.join('');\n    debug(LOG_TAG$d, 'Creating WebChannel: ' + url + ' ' + request); // eslint-disable-next-line @typescript-eslint/no-explicit-any, Because listen isn't defined on it.\n\n    var channel = webchannelTransport.createWebChannel(url, request); // WebChannel supports sending the first message with the handshake - saving\n    // a network round trip. However, it will have to call send in the same\n    // JS event loop as open. In order to enforce this, we delay actually\n    // opening the WebChannel until send is called. Whether we have called\n    // open is tracked with this variable.\n\n    var opened = false; // A flag to determine whether the stream was closed (by us or through an\n    // error/close event) to avoid delivering multiple close events or sending\n    // on a closed stream\n\n    var closed = false;\n    var streamBridge = new StreamBridge({\n      sendFn: function sendFn(msg) {\n        if (!closed) {\n          if (!opened) {\n            debug(LOG_TAG$d, 'Opening WebChannel transport.');\n            channel.open();\n            opened = true;\n          }\n\n          debug(LOG_TAG$d, 'WebChannel sending:', msg);\n          channel.send(msg);\n        } else {\n          debug(LOG_TAG$d, 'Not sending because WebChannel is closed:', msg);\n        }\n      },\n      closeFn: function closeFn() {\n        return channel.close();\n      }\n    }); // Closure events are guarded and exceptions are swallowed, so catch any\n    // exception and rethrow using a setTimeout so they become visible again.\n    // Note that eventually this function could go away if we are confident\n    // enough the code is exception free.\n\n    var unguardedEventListen = function unguardedEventListen(type, fn) {\n      // TODO(dimond): closure typing seems broken because WebChannel does\n      // not implement goog.events.Listenable\n      channel.listen(type, function (param) {\n        try {\n          fn(param);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      });\n    };\n\n    unguardedEventListen(webchannelWrapper.WebChannel.EventType.OPEN, function () {\n      if (!closed) {\n        debug(LOG_TAG$d, 'WebChannel transport opened.');\n      }\n    });\n    unguardedEventListen(webchannelWrapper.WebChannel.EventType.CLOSE, function () {\n      if (!closed) {\n        closed = true;\n        debug(LOG_TAG$d, 'WebChannel transport closed');\n        streamBridge.callOnClose();\n      }\n    });\n    unguardedEventListen(webchannelWrapper.WebChannel.EventType.ERROR, function (err) {\n      if (!closed) {\n        closed = true;\n        debug(LOG_TAG$d, 'WebChannel transport errored:', err);\n        streamBridge.callOnClose(new FirestoreError(Code.UNAVAILABLE, 'The operation could not be completed'));\n      }\n    });\n    unguardedEventListen(webchannelWrapper.WebChannel.EventType.MESSAGE, function (msg) {\n      if (!closed) {\n        var msgData = msg.data[0];\n        assert(!!msgData, 'Got a webchannel message without data.'); // TODO(b/35143891): There is a bug in One Platform that caused errors\n        // (and only errors) to be wrapped in an extra array. To be forward\n        // compatible with the bug we need to check either condition. The latter\n        // can be removed once the fix has been rolled out.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, msgData.error is not typed.\n\n        var msgDataAsAny = msgData;\n        var error = msgDataAsAny.error || msgDataAsAny[0] && msgDataAsAny[0].error;\n\n        if (error) {\n          debug(LOG_TAG$d, 'WebChannel received error:', error); // error.status will be a string like 'OK' or 'NOT_FOUND'.\n\n          var status_2 = error.status;\n          var code = mapCodeFromRpcStatus(status_2);\n          var message = error.message;\n\n          if (code === undefined) {\n            code = Code.INTERNAL;\n            message = 'Unknown error status: ' + status_2 + ' with message ' + error.message;\n          } // Mark closed so no further events are propagated\n\n\n          closed = true;\n          streamBridge.callOnClose(new FirestoreError(code, message));\n          channel.close();\n        } else {\n          debug(LOG_TAG$d, 'WebChannel received:', msgData);\n          streamBridge.callOnMessage(msgData);\n        }\n      }\n    });\n    setTimeout(function () {\n      // Technically we could/should wait for the WebChannel opened event,\n      // but because we want to send the first message with the WebChannel\n      // handshake we pretend the channel opened here (asynchronously), and\n      // then delay the actual open until the first message is sent.\n      streamBridge.callOnOpen();\n    }, 0);\n    return streamBridge;\n  }; // visible for testing\n\n\n  WebChannelConnection.prototype.makeUrl = function (rpcName) {\n    var urlRpcName = RPC_NAME_REST_MAPPING[rpcName];\n    assert(urlRpcName !== undefined, 'Unknown REST mapping for: ' + rpcName);\n    var url = [this.baseUrl, '/', RPC_URL_VERSION];\n    url.push('/projects/');\n    url.push(this.databaseId.projectId);\n    url.push('/databases/');\n    url.push(this.databaseId.database);\n    url.push('/documents');\n    url.push(':');\n    url.push(urlRpcName);\n    return url.join('');\n  };\n\n  return WebChannelConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar BrowserPlatform =\n/** @class */\nfunction () {\n  function BrowserPlatform() {\n    this.emptyByteString = '';\n    this.base64Available = typeof atob !== 'undefined';\n  }\n\n  Object.defineProperty(BrowserPlatform.prototype, \"document\", {\n    get: function get() {\n      return typeof document !== 'undefined' ? document : null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BrowserPlatform.prototype, \"window\", {\n    get: function get() {\n      return typeof window !== 'undefined' ? window : null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BrowserPlatform.prototype.loadConnection = function (databaseInfo) {\n    return Promise.resolve(new WebChannelConnection(databaseInfo));\n  };\n\n  BrowserPlatform.prototype.newConnectivityMonitor = function () {\n    if (BrowserConnectivityMonitor.isAvailable()) {\n      return new BrowserConnectivityMonitor();\n    } else {\n      return new NoopConnectivityMonitor();\n    }\n  };\n\n  BrowserPlatform.prototype.newSerializer = function (databaseId) {\n    return new JsonProtoSerializer(databaseId, {\n      useProto3Json: true\n    });\n  };\n\n  BrowserPlatform.prototype.formatJSON = function (value) {\n    return JSON.stringify(value);\n  };\n\n  BrowserPlatform.prototype.atob = function (encoded) {\n    return atob(encoded);\n  };\n\n  BrowserPlatform.prototype.btoa = function (raw) {\n    return btoa(raw);\n  };\n\n  return BrowserPlatform;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This code needs to run before Firestore is used. This can be achieved in\r\n * several ways:\r\n *   1) Through the JSCompiler compiling this code and then (automatically)\r\n *      executing it before exporting the Firestore symbols.\r\n *   2) Through importing this module first in a Firestore main module\r\n */\n\n\nPlatformSupport.setPlatform(new BrowserPlatform());\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction registerFirestore(instance) {\n  configureForFirebase(instance);\n}\n\nregisterFirestore(firebase);\nexports.registerFirestore = registerFirestore;","/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A container for all of the Logger instances\r\n */\nvar instances = [];\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\n\nvar LogLevel;\n\n(function (LogLevel) {\n  LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n  LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n  LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n  LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n  LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n  LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n})(LogLevel || (LogLevel = {}));\n/**\r\n * The default log level\r\n */\n\n\nvar defaultLogLevel = LogLevel.INFO;\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\n\nvar defaultLogHandler = function defaultLogHandler(instance, logType) {\n  var args = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n\n  if (logType < instance.logLevel) {\n    return;\n  }\n\n  var now = new Date().toISOString();\n\n  switch (logType) {\n    /**\r\n     * By default, `console.debug` is not displayed in the developer console (in\r\n     * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n     * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n     * logs to the `console.log` function.\r\n     */\n    case LogLevel.DEBUG:\n      console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n      break;\n\n    case LogLevel.VERBOSE:\n      console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n      break;\n\n    case LogLevel.INFO:\n      console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n      break;\n\n    case LogLevel.WARN:\n      console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n      break;\n\n    case LogLevel.ERROR:\n      console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n      break;\n\n    default:\n      throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\n  }\n};\n\nvar Logger =\n/** @class */\nfunction () {\n  /**\r\n   * Gives you an instance of a Logger to capture messages according to\r\n   * Firebase's logging scheme.\r\n   *\r\n   * @param name The name that the logs will be associated with\r\n   */\n  function Logger(name) {\n    this.name = name;\n    /**\r\n     * The log level of the given Logger instance.\r\n     */\n\n    this._logLevel = defaultLogLevel;\n    /**\r\n     * The log handler for the Logger instance.\r\n     */\n\n    this._logHandler = defaultLogHandler;\n    /**\r\n     * Capture the current instance for later use\r\n     */\n\n    instances.push(this);\n  }\n\n  Object.defineProperty(Logger.prototype, \"logLevel\", {\n    get: function get() {\n      return this._logLevel;\n    },\n    set: function set(val) {\n      if (!(val in LogLevel)) {\n        throw new TypeError('Invalid value assigned to `logLevel`');\n      }\n\n      this._logLevel = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Logger.prototype, \"logHandler\", {\n    get: function get() {\n      return this._logHandler;\n    },\n    set: function set(val) {\n      if (typeof val !== 'function') {\n        throw new TypeError('Value assigned to `logHandler` must be a function');\n      }\n\n      this._logHandler = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * The functions below are all based on the `console` interface\r\n   */\n\n  Logger.prototype.debug = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\n  };\n\n  Logger.prototype.log = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\n  };\n\n  Logger.prototype.info = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\n  };\n\n  Logger.prototype.warn = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\n  };\n\n  Logger.prototype.error = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\n  };\n\n  return Logger;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction setLogLevel(level) {\n  instances.forEach(function (inst) {\n    inst.logLevel = level;\n  });\n}\n\nexport { LogLevel, Logger, setLogLevel };","var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nvar g,\n    goog = goog || {},\n    k = commonjsGlobal;\n\nfunction m(a) {\n  return \"string\" == typeof a;\n}\n\nfunction aa(a) {\n  return \"number\" == typeof a;\n}\n\nfunction n(a, b) {\n  a = a.split(\".\");\n  b = b || k;\n\n  for (var c = 0; c < a.length; c++) {\n    if (b = b[a[c]], null == b) return null;\n  }\n\n  return b;\n}\n\nfunction ba() {}\n\nfunction p(a) {\n  var b = typeof a;\n  if (\"object\" == b) {\n    if (a) {\n      if (a instanceof Array) return \"array\";\n      if (a instanceof Object) return b;\n      var c = Object.prototype.toString.call(a);\n      if (\"[object Window]\" == c) return \"object\";\n      if (\"[object Array]\" == c || \"number\" == typeof a.length && \"undefined\" != typeof a.splice && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"splice\")) return \"array\";\n      if (\"[object Function]\" == c || \"undefined\" != typeof a.call && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"call\")) return \"function\";\n    } else return \"null\";\n  } else if (\"function\" == b && \"undefined\" == typeof a.call) return \"object\";\n  return b;\n}\n\nfunction q(a) {\n  return \"array\" == p(a);\n}\n\nfunction ca(a) {\n  var b = p(a);\n  return \"array\" == b || \"object\" == b && \"number\" == typeof a.length;\n}\n\nfunction r(a) {\n  var b = typeof a;\n  return \"object\" == b && null != a || \"function\" == b;\n}\n\nvar t = \"closure_uid_\" + (1E9 * Math.random() >>> 0),\n    da = 0;\n\nfunction ea(a, b, c) {\n  return a.call.apply(a.bind, arguments);\n}\n\nfunction fa(a, b, c) {\n  if (!a) throw Error();\n\n  if (2 < arguments.length) {\n    var d = Array.prototype.slice.call(arguments, 2);\n    return function () {\n      var e = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(e, d);\n      return a.apply(b, e);\n    };\n  }\n\n  return function () {\n    return a.apply(b, arguments);\n  };\n}\n\nfunction u(a, b, c) {\n  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\") ? u = ea : u = fa;\n  return u.apply(null, arguments);\n}\n\nfunction v(a, b) {\n  var c = Array.prototype.slice.call(arguments, 1);\n  return function () {\n    var d = c.slice();\n    d.push.apply(d, arguments);\n    return a.apply(this, d);\n  };\n}\n\nvar w = Date.now || function () {\n  return +new Date();\n};\n\nfunction x(a, b) {\n  function c() {}\n\n  c.prototype = b.prototype;\n  a.N = b.prototype;\n  a.prototype = new c();\n  a.prototype.constructor = a;\n\n  a.yb = function (d, e, f) {\n    for (var h = Array(arguments.length - 2), l = 2; l < arguments.length; l++) {\n      h[l - 2] = arguments[l];\n    }\n\n    return b.prototype[e].apply(d, h);\n  };\n}\n\nfunction y() {\n  this.j = this.j;\n  this.i = this.i;\n}\n\nvar ha = 0;\ny.prototype.j = !1;\n\ny.prototype.la = function () {\n  if (!this.j && (this.j = !0, this.G(), 0 != ha)) {\n    var a = this[t] || (this[t] = ++da);\n  }\n};\n\ny.prototype.G = function () {\n  if (this.i) for (; this.i.length;) {\n    this.i.shift()();\n  }\n};\n\nvar ja = Array.prototype.indexOf ? function (a, b) {\n  return Array.prototype.indexOf.call(a, b, void 0);\n} : function (a, b) {\n  if (m(a)) return m(b) && 1 == b.length ? a.indexOf(b, 0) : -1;\n\n  for (var c = 0; c < a.length; c++) {\n    if (c in a && a[c] === b) return c;\n  }\n\n  return -1;\n},\n    la = Array.prototype.forEach ? function (a, b, c) {\n  Array.prototype.forEach.call(a, b, c);\n} : function (a, b, c) {\n  for (var d = a.length, e = m(a) ? a.split(\"\") : a, f = 0; f < d; f++) {\n    f in e && b.call(c, e[f], f, a);\n  }\n};\n\nfunction ma(a) {\n  a: {\n    var b = na;\n\n    for (var c = a.length, d = m(a) ? a.split(\"\") : a, e = 0; e < c; e++) {\n      if (e in d && b.call(void 0, d[e], e, a)) {\n        b = e;\n        break a;\n      }\n    }\n\n    b = -1;\n  }\n\n  return 0 > b ? null : m(a) ? a.charAt(b) : a[b];\n}\n\nfunction oa(a) {\n  return Array.prototype.concat.apply([], arguments);\n}\n\nfunction pa(a) {\n  var b = a.length;\n\n  if (0 < b) {\n    for (var c = Array(b), d = 0; d < b; d++) {\n      c[d] = a[d];\n    }\n\n    return c;\n  }\n\n  return [];\n}\n\nfunction qa(a) {\n  return /^[\\s\\xa0]*$/.test(a);\n}\n\nvar ra = String.prototype.trim ? function (a) {\n  return a.trim();\n} : function (a) {\n  return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(a)[1];\n};\n\nfunction z(a, b) {\n  return -1 != a.indexOf(b);\n}\n\nfunction sa(a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\nvar A;\n\na: {\n  var ta = k.navigator;\n\n  if (ta) {\n    var ua = ta.userAgent;\n\n    if (ua) {\n      A = ua;\n      break a;\n    }\n  }\n\n  A = \"\";\n}\n\nfunction va(a, b, c) {\n  for (var d in a) {\n    b.call(c, a[d], d, a);\n  }\n}\n\nfunction wa(a) {\n  var b = {},\n      c;\n\n  for (c in a) {\n    b[c] = a[c];\n  }\n\n  return b;\n}\n\nvar xa = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\n\nfunction ya(a, b) {\n  for (var c, d, e = 1; e < arguments.length; e++) {\n    d = arguments[e];\n\n    for (c in d) {\n      a[c] = d[c];\n    }\n\n    for (var f = 0; f < xa.length; f++) {\n      c = xa[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);\n    }\n  }\n}\n\nfunction za(a) {\n  za[\" \"](a);\n  return a;\n}\n\nza[\" \"] = ba;\n\nfunction Aa(a, b) {\n  var c = Ba;\n  return Object.prototype.hasOwnProperty.call(c, a) ? c[a] : c[a] = b(a);\n}\n\nvar Ca = z(A, \"Opera\"),\n    B = z(A, \"Trident\") || z(A, \"MSIE\"),\n    Da = z(A, \"Edge\"),\n    Ea = Da || B,\n    Fa = z(A, \"Gecko\") && !(z(A.toLowerCase(), \"webkit\") && !z(A, \"Edge\")) && !(z(A, \"Trident\") || z(A, \"MSIE\")) && !z(A, \"Edge\"),\n    Ga = z(A.toLowerCase(), \"webkit\") && !z(A, \"Edge\");\n\nfunction Ha() {\n  var a = k.document;\n  return a ? a.documentMode : void 0;\n}\n\nvar Ia;\n\na: {\n  var Ja = \"\",\n      Ka = function () {\n    var a = A;\n    if (Fa) return /rv:([^\\);]+)(\\)|;)/.exec(a);\n    if (Da) return /Edge\\/([\\d\\.]+)/.exec(a);\n    if (B) return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);\n    if (Ga) return /WebKit\\/(\\S+)/.exec(a);\n    if (Ca) return /(?:Version)[ \\/]?(\\S+)/.exec(a);\n  }();\n\n  Ka && (Ja = Ka ? Ka[1] : \"\");\n\n  if (B) {\n    var La = Ha();\n\n    if (null != La && La > parseFloat(Ja)) {\n      Ia = String(La);\n      break a;\n    }\n  }\n\n  Ia = Ja;\n}\n\nvar Ba = {};\n\nfunction Ma(a) {\n  return Aa(a, function () {\n    for (var b = 0, c = ra(String(Ia)).split(\".\"), d = ra(String(a)).split(\".\"), e = Math.max(c.length, d.length), f = 0; 0 == b && f < e; f++) {\n      var h = c[f] || \"\",\n          l = d[f] || \"\";\n\n      do {\n        h = /(\\d*)(\\D*)(.*)/.exec(h) || [\"\", \"\", \"\", \"\"];\n        l = /(\\d*)(\\D*)(.*)/.exec(l) || [\"\", \"\", \"\", \"\"];\n        if (0 == h[0].length && 0 == l[0].length) break;\n        b = sa(0 == h[1].length ? 0 : parseInt(h[1], 10), 0 == l[1].length ? 0 : parseInt(l[1], 10)) || sa(0 == h[2].length, 0 == l[2].length) || sa(h[2], l[2]);\n        h = h[3];\n        l = l[3];\n      } while (0 == b);\n    }\n\n    return 0 <= b;\n  });\n}\n\nvar Na;\nvar Oa = k.document;\nNa = Oa && B ? Ha() || (\"CSS1Compat\" == Oa.compatMode ? parseInt(Ia, 10) : 5) : void 0;\n\nvar Pa = !B || 9 <= Number(Na),\n    Qa = B && !Ma(\"9\"),\n    Ra = function () {\n  if (!k.addEventListener || !Object.defineProperty) return !1;\n  var a = !1,\n      b = Object.defineProperty({}, \"passive\", {\n    get: function get() {\n      a = !0;\n    }\n  });\n\n  try {\n    k.addEventListener(\"test\", ba, b), k.removeEventListener(\"test\", ba, b);\n  } catch (c) {}\n\n  return a;\n}();\n\nfunction C(a, b) {\n  this.type = a;\n  this.a = this.target = b;\n  this.Ja = !0;\n}\n\nC.prototype.b = function () {\n  this.Ja = !1;\n};\n\nfunction D(a, b) {\n  C.call(this, a ? a.type : \"\");\n  this.relatedTarget = this.a = this.target = null;\n  this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;\n  this.key = \"\";\n  this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;\n  this.pointerId = 0;\n  this.pointerType = \"\";\n  this.c = null;\n\n  if (a) {\n    var c = this.type = a.type,\n        d = a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : null;\n    this.target = a.target || a.srcElement;\n    this.a = b;\n\n    if (b = a.relatedTarget) {\n      if (Fa) {\n        a: {\n          try {\n            za(b.nodeName);\n            var e = !0;\n            break a;\n          } catch (f) {}\n\n          e = !1;\n        }\n\n        e || (b = null);\n      }\n    } else \"mouseover\" == c ? b = a.fromElement : \"mouseout\" == c && (b = a.toElement);\n\n    this.relatedTarget = b;\n    d ? (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0) : (this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0);\n    this.button = a.button;\n    this.key = a.key || \"\";\n    this.ctrlKey = a.ctrlKey;\n    this.altKey = a.altKey;\n    this.shiftKey = a.shiftKey;\n    this.metaKey = a.metaKey;\n    this.pointerId = a.pointerId || 0;\n    this.pointerType = m(a.pointerType) ? a.pointerType : Sa[a.pointerType] || \"\";\n    this.c = a;\n    a.defaultPrevented && this.b();\n  }\n}\n\nx(D, C);\nvar Sa = {\n  2: \"touch\",\n  3: \"pen\",\n  4: \"mouse\"\n};\n\nD.prototype.b = function () {\n  D.N.b.call(this);\n  var a = this.c;\n  if (a.preventDefault) a.preventDefault();else if (a.returnValue = !1, Qa) try {\n    if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) a.keyCode = -1;\n  } catch (b) {}\n};\n\nvar E = \"closure_listenable_\" + (1E6 * Math.random() | 0),\n    Ta = 0;\n\nfunction Ua(a, b, c, d, e) {\n  this.listener = a;\n  this.proxy = null;\n  this.src = b;\n  this.type = c;\n  this.capture = !!d;\n  this.da = e;\n  this.key = ++Ta;\n  this.X = this.Z = !1;\n}\n\nfunction Va(a) {\n  a.X = !0;\n  a.listener = null;\n  a.proxy = null;\n  a.src = null;\n  a.da = null;\n}\n\nfunction Wa(a) {\n  this.src = a;\n  this.a = {};\n  this.b = 0;\n}\n\nWa.prototype.add = function (a, b, c, d, e) {\n  var f = a.toString();\n  a = this.a[f];\n  a || (a = this.a[f] = [], this.b++);\n  var h = Xa(a, b, d, e);\n  -1 < h ? (b = a[h], c || (b.Z = !1)) : (b = new Ua(b, this.src, f, !!d, e), b.Z = c, a.push(b));\n  return b;\n};\n\nfunction Ya(a, b) {\n  var c = b.type;\n\n  if (c in a.a) {\n    var d = a.a[c],\n        e = ja(d, b),\n        f;\n    (f = 0 <= e) && Array.prototype.splice.call(d, e, 1);\n    f && (Va(b), 0 == a.a[c].length && (delete a.a[c], a.b--));\n  }\n}\n\nfunction Xa(a, b, c, d) {\n  for (var e = 0; e < a.length; ++e) {\n    var f = a[e];\n    if (!f.X && f.listener == b && f.capture == !!c && f.da == d) return e;\n  }\n\n  return -1;\n}\n\nvar Za = \"closure_lm_\" + (1E6 * Math.random() | 0),\n    $a = {};\n\nfunction bb(a, b, c, d, e) {\n  if (d && d.once) return cb(a, b, c, d, e);\n\n  if (q(b)) {\n    for (var f = 0; f < b.length; f++) {\n      bb(a, b[f], c, d, e);\n    }\n\n    return null;\n  }\n\n  c = db(c);\n  return a && a[E] ? a.Aa(b, c, r(d) ? !!d.capture : !!d, e) : eb(a, b, c, !1, d, e);\n}\n\nfunction eb(a, b, c, d, e, f) {\n  if (!b) throw Error(\"Invalid event type\");\n  var h = r(e) ? !!e.capture : !!e;\n  if (h && !Pa) return null;\n  var l = fb(a);\n  l || (a[Za] = l = new Wa(a));\n  c = l.add(b, c, d, h, f);\n  if (c.proxy) return c;\n  d = gb();\n  c.proxy = d;\n  d.src = a;\n  d.listener = c;\n  if (a.addEventListener) Ra || (e = h), void 0 === e && (e = !1), a.addEventListener(b.toString(), d, e);else if (a.attachEvent) a.attachEvent(hb(b.toString()), d);else if (a.addListener && a.removeListener) a.addListener(d);else throw Error(\"addEventListener and attachEvent are unavailable.\");\n  return c;\n}\n\nfunction gb() {\n  var a = ib,\n      b = Pa ? function (c) {\n    return a.call(b.src, b.listener, c);\n  } : function (c) {\n    c = a.call(b.src, b.listener, c);\n    if (!c) return c;\n  };\n  return b;\n}\n\nfunction cb(a, b, c, d, e) {\n  if (q(b)) {\n    for (var f = 0; f < b.length; f++) {\n      cb(a, b[f], c, d, e);\n    }\n\n    return null;\n  }\n\n  c = db(c);\n  return a && a[E] ? a.Ba(b, c, r(d) ? !!d.capture : !!d, e) : eb(a, b, c, !0, d, e);\n}\n\nfunction jb(a, b, c, d, e) {\n  if (q(b)) for (var f = 0; f < b.length; f++) {\n    jb(a, b[f], c, d, e);\n  } else (d = r(d) ? !!d.capture : !!d, c = db(c), a && a[E]) ? (a = a.c, b = String(b).toString(), b in a.a && (f = a.a[b], c = Xa(f, c, d, e), -1 < c && (Va(f[c]), Array.prototype.splice.call(f, c, 1), 0 == f.length && (delete a.a[b], a.b--)))) : a && (a = fb(a)) && (b = a.a[b.toString()], a = -1, b && (a = Xa(b, c, d, e)), (c = -1 < a ? b[a] : null) && kb(c));\n}\n\nfunction kb(a) {\n  if (!aa(a) && a && !a.X) {\n    var b = a.src;\n    if (b && b[E]) Ya(b.c, a);else {\n      var c = a.type,\n          d = a.proxy;\n      b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent ? b.detachEvent(hb(c), d) : b.addListener && b.removeListener && b.removeListener(d);\n      (c = fb(b)) ? (Ya(c, a), 0 == c.b && (c.src = null, b[Za] = null)) : Va(a);\n    }\n  }\n}\n\nfunction hb(a) {\n  return a in $a ? $a[a] : $a[a] = \"on\" + a;\n}\n\nfunction lb(a, b) {\n  var c = a.listener,\n      d = a.da || a.src;\n  a.Z && kb(a);\n  return c.call(d, b);\n}\n\nfunction ib(a, b) {\n  return a.X ? !0 : Pa ? lb(a, new D(b, this)) : (b = new D(b || n(\"window.event\"), this), lb(a, b));\n}\n\nfunction fb(a) {\n  a = a[Za];\n  return a instanceof Wa ? a : null;\n}\n\nvar mb = \"__closure_events_fn_\" + (1E9 * Math.random() >>> 0);\n\nfunction db(a) {\n  if (\"function\" == p(a)) return a;\n  a[mb] || (a[mb] = function (b) {\n    return a.handleEvent(b);\n  });\n  return a[mb];\n}\n\nfunction G() {\n  y.call(this);\n  this.c = new Wa(this);\n  this.J = this;\n  this.B = null;\n}\n\nx(G, y);\nG.prototype[E] = !0;\ng = G.prototype;\n\ng.addEventListener = function (a, b, c, d) {\n  bb(this, a, b, c, d);\n};\n\ng.removeEventListener = function (a, b, c, d) {\n  jb(this, a, b, c, d);\n};\n\ng.dispatchEvent = function (a) {\n  var b,\n      c = this.B;\n  if (c) for (b = []; c; c = c.B) {\n    b.push(c);\n  }\n  c = this.J;\n  var d = a.type || a;\n  if (m(a)) a = new C(a, c);else if (a instanceof C) a.target = a.target || c;else {\n    var e = a;\n    a = new C(d, c);\n    ya(a, e);\n  }\n  e = !0;\n  if (b) for (var f = b.length - 1; 0 <= f; f--) {\n    var h = a.a = b[f];\n    e = nb(h, d, !0, a) && e;\n  }\n  h = a.a = c;\n  e = nb(h, d, !0, a) && e;\n  e = nb(h, d, !1, a) && e;\n  if (b) for (f = 0; f < b.length; f++) {\n    h = a.a = b[f], e = nb(h, d, !1, a) && e;\n  }\n  return e;\n};\n\ng.G = function () {\n  G.N.G.call(this);\n\n  if (this.c) {\n    var a = this.c,\n        c;\n\n    for (c in a.a) {\n      for (var d = a.a[c], e = 0; e < d.length; e++) {\n        Va(d[e]);\n      }\n\n      delete a.a[c];\n      a.b--;\n    }\n  }\n\n  this.B = null;\n};\n\ng.Aa = function (a, b, c, d) {\n  return this.c.add(String(a), b, !1, c, d);\n};\n\ng.Ba = function (a, b, c, d) {\n  return this.c.add(String(a), b, !0, c, d);\n};\n\nfunction nb(a, b, c, d) {\n  b = a.c.a[String(b)];\n  if (!b) return !0;\n  b = b.concat();\n\n  for (var e = !0, f = 0; f < b.length; ++f) {\n    var h = b[f];\n\n    if (h && !h.X && h.capture == c) {\n      var l = h.listener,\n          F = h.da || h.src;\n      h.Z && Ya(a.c, h);\n      e = !1 !== l.call(F, d) && e;\n    }\n  }\n\n  return e && 0 != d.Ja;\n}\n\nvar ob = k.JSON.stringify;\n\nfunction pb(a, b) {\n  this.c = a;\n  this.f = b;\n  this.b = 0;\n  this.a = null;\n}\n\npb.prototype.get = function () {\n  if (0 < this.b) {\n    this.b--;\n    var a = this.a;\n    this.a = a.next;\n    a.next = null;\n  } else a = this.c();\n\n  return a;\n};\n\nfunction qb() {\n  this.b = this.a = null;\n}\n\nvar sb = new pb(function () {\n  return new rb();\n}, function (a) {\n  a.reset();\n});\n\nqb.prototype.add = function (a, b) {\n  var c = sb.get();\n  c.set(a, b);\n  this.b ? this.b.next = c : this.a = c;\n  this.b = c;\n};\n\nfunction tb() {\n  var a = ub,\n      b = null;\n  a.a && (b = a.a, a.a = a.a.next, a.a || (a.b = null), b.next = null);\n  return b;\n}\n\nfunction rb() {\n  this.next = this.b = this.a = null;\n}\n\nrb.prototype.set = function (a, b) {\n  this.a = a;\n  this.b = b;\n  this.next = null;\n};\n\nrb.prototype.reset = function () {\n  this.next = this.b = this.a = null;\n};\n\nfunction vb(a) {\n  k.setTimeout(function () {\n    throw a;\n  }, 0);\n}\n\nfunction wb(a, b) {\n  xb || yb();\n  zb || (xb(), zb = !0);\n  ub.add(a, b);\n}\n\nvar xb;\n\nfunction yb() {\n  var a = k.Promise.resolve(void 0);\n\n  xb = function xb() {\n    a.then(Ab);\n  };\n}\n\nvar zb = !1,\n    ub = new qb();\n\nfunction Ab() {\n  for (var a; a = tb();) {\n    try {\n      a.a.call(a.b);\n    } catch (c) {\n      vb(c);\n    }\n\n    var b = sb;\n    b.f(a);\n    100 > b.b && (b.b++, a.next = b.a, b.a = a);\n  }\n\n  zb = !1;\n}\n\nfunction Cb(a, b) {\n  G.call(this);\n  this.b = a || 1;\n  this.a = b || k;\n  this.f = u(this.gb, this);\n  this.g = w();\n}\n\nx(Cb, G);\ng = Cb.prototype;\ng.ba = !1;\ng.L = null;\n\ng.gb = function () {\n  if (this.ba) {\n    var a = w() - this.g;\n    0 < a && a < .8 * this.b ? this.L = this.a.setTimeout(this.f, this.b - a) : (this.L && (this.a.clearTimeout(this.L), this.L = null), this.dispatchEvent(\"tick\"), this.ba && (Db(this), this.start()));\n  }\n};\n\ng.start = function () {\n  this.ba = !0;\n  this.L || (this.L = this.a.setTimeout(this.f, this.b), this.g = w());\n};\n\nfunction Db(a) {\n  a.ba = !1;\n  a.L && (a.a.clearTimeout(a.L), a.L = null);\n}\n\ng.G = function () {\n  Cb.N.G.call(this);\n  Db(this);\n  delete this.a;\n};\n\nfunction Eb(a, b, c) {\n  if (\"function\" == p(a)) c && (a = u(a, c));else if (a && \"function\" == typeof a.handleEvent) a = u(a.handleEvent, a);else throw Error(\"Invalid listener argument\");\n  return 2147483647 < Number(b) ? -1 : k.setTimeout(a, b || 0);\n}\n\nfunction Fb(a, b, c) {\n  y.call(this);\n  this.f = null != c ? u(a, c) : a;\n  this.c = b;\n  this.b = u(this.ab, this);\n  this.a = [];\n}\n\nx(Fb, y);\ng = Fb.prototype;\ng.ea = !1;\ng.U = null;\n\ng.Ua = function (a) {\n  this.a = arguments;\n  this.U ? this.ea = !0 : Gb(this);\n};\n\ng.G = function () {\n  Fb.N.G.call(this);\n  this.U && (k.clearTimeout(this.U), this.U = null, this.ea = !1, this.a = []);\n};\n\ng.ab = function () {\n  this.U = null;\n  this.ea && (this.ea = !1, Gb(this));\n};\n\nfunction Gb(a) {\n  a.U = Eb(a.b, a.c);\n  a.f.apply(null, a.a);\n}\n\nfunction H(a) {\n  y.call(this);\n  this.b = a;\n  this.a = {};\n}\n\nx(H, y);\nvar Hb = [];\n\nfunction Ib(a, b, c, d) {\n  q(c) || (c && (Hb[0] = c.toString()), c = Hb);\n\n  for (var e = 0; e < c.length; e++) {\n    var f = bb(b, c[e], d || a.handleEvent, !1, a.b || a);\n    if (!f) break;\n    a.a[f.key] = f;\n  }\n}\n\nfunction Jb(a) {\n  va(a.a, function (b, c) {\n    this.a.hasOwnProperty(c) && kb(b);\n  }, a);\n  a.a = {};\n}\n\nH.prototype.G = function () {\n  H.N.G.call(this);\n  Jb(this);\n};\n\nH.prototype.handleEvent = function () {\n  throw Error(\"EventHandler.handleEvent not implemented\");\n};\n\nfunction Kb() {}\n\nvar I = new G();\n\nfunction Lb(a) {\n  C.call(this, \"serverreachability\", a);\n}\n\nx(Lb, C);\n\nfunction J(a) {\n  I.dispatchEvent(new Lb(I, a));\n}\n\nfunction Mb(a) {\n  C.call(this, \"statevent\", a);\n}\n\nx(Mb, C);\n\nfunction K(a) {\n  I.dispatchEvent(new Mb(I, a));\n}\n\nfunction Nb(a) {\n  C.call(this, \"timingevent\", a);\n}\n\nx(Nb, C);\n\nfunction Ob(a, b) {\n  if (\"function\" != p(a)) throw Error(\"Fn must not be null and must be a function\");\n  return k.setTimeout(function () {\n    a();\n  }, b);\n}\n\nvar Pb = {\n  NO_ERROR: 0,\n  hb: 1,\n  ob: 2,\n  nb: 3,\n  kb: 4,\n  mb: 5,\n  pb: 6,\n  Ma: 7,\n  TIMEOUT: 8,\n  sb: 9\n};\nvar Qb = {\n  jb: \"complete\",\n  wb: \"success\",\n  Na: \"error\",\n  Ma: \"abort\",\n  ub: \"ready\",\n  vb: \"readystatechange\",\n  TIMEOUT: \"timeout\",\n  qb: \"incrementaldata\",\n  tb: \"progress\",\n  lb: \"downloadprogress\",\n  xb: \"uploadprogress\"\n};\n\nfunction Rb() {}\n\nRb.prototype.a = null;\n\nfunction Sb(a) {\n  var b;\n  (b = a.a) || (b = a.a = {});\n  return b;\n}\n\nfunction Tb() {}\n\nvar L = {\n  OPEN: \"a\",\n  ib: \"b\",\n  Na: \"c\",\n  rb: \"d\"\n};\n\nfunction Ub() {\n  C.call(this, \"d\");\n}\n\nx(Ub, C);\n\nfunction Vb() {\n  C.call(this, \"c\");\n}\n\nx(Vb, C);\nvar Wb;\n\nfunction Xb() {}\n\nx(Xb, Rb);\nWb = new Xb();\n\nfunction M(a, b, c) {\n  this.g = a;\n  this.W = b;\n  this.V = c || 1;\n  this.I = new H(this);\n  this.O = Yb;\n  a = Ea ? 125 : void 0;\n  this.P = new Cb(a);\n  this.h = null;\n  this.b = !1;\n  this.l = this.D = this.f = this.F = this.v = this.R = this.i = null;\n  this.j = [];\n  this.a = null;\n  this.A = 0;\n  this.c = this.w = null;\n  this.o = -1;\n  this.m = !1;\n  this.J = 0;\n  this.B = null;\n  this.s = this.S = this.H = !1;\n}\n\nvar Yb = 45E3,\n    Zb = {},\n    $b = {};\ng = M.prototype;\n\ng.setTimeout = function (a) {\n  this.O = a;\n};\n\nfunction ac(a, b, c) {\n  a.F = 1;\n  a.f = bc(N(b));\n  a.l = c;\n  a.H = !0;\n  cc(a, null);\n}\n\nfunction dc(a, b, c, d) {\n  a.F = 1;\n  a.f = bc(N(b));\n  a.l = null;\n  a.H = c;\n  cc(a, d);\n}\n\nfunction cc(a, b) {\n  a.v = w();\n  ec(a);\n  a.D = N(a.f);\n  fc(a.D, \"t\", a.V);\n  a.A = 0;\n  a.a = a.g.$(a.g.Y() ? b : null);\n  0 < a.J && (a.B = new Fb(u(a.Ka, a, a.a), a.J));\n  Ib(a.I, a.a, \"readystatechange\", a.eb);\n  b = a.h ? wa(a.h) : {};\n  a.l ? (a.w || (a.w = \"POST\"), b[\"Content-Type\"] = \"application/x-www-form-urlencoded\", a.a.ca(a.D, a.w, a.l, b)) : (a.w = \"GET\", a.a.ca(a.D, a.w, null, b));\n  J(1);\n}\n\ng.eb = function (a) {\n  a = a.target;\n  var b = this.B;\n  b && 3 == O(a) ? b.Ua() : this.Ka(a);\n};\n\ng.Ka = function (a) {\n  try {\n    if (a == this.a) a: {\n      var b = O(this.a),\n          c = this.a.ya(),\n          d = this.a.T();\n\n      if (!(3 > b || 3 == b && !Ea && !this.a.aa())) {\n        this.m || 4 != b || 7 == c || (8 == c || 0 >= d ? J(3) : J(2));\n        gc(this);\n        var e = this.a.T();\n        this.o = e;\n        var f = this.a.aa();\n\n        if (this.b = 200 == e) {\n          if (this.S && !this.s) {\n            b: {\n              if (this.a) {\n                var h = hc(this.a, \"X-HTTP-Initial-Response\");\n\n                if (h && !qa(h)) {\n                  var l = h;\n                  break b;\n                }\n              }\n\n              l = null;\n            }\n\n            if (l) this.s = !0, ic(this, l);else {\n              this.b = !1;\n              this.c = 3;\n              K(12);\n              P(this);\n              jc(this);\n              break a;\n            }\n          }\n\n          this.H ? (kc(this, b, f), Ea && this.b && 3 == b && (Ib(this.I, this.P, \"tick\", this.cb), this.P.start())) : ic(this, f);\n          4 == b && P(this);\n          this.b && !this.m && (4 == b ? this.g.na(this) : (this.b = !1, ec(this)));\n        } else 400 == e && 0 < f.indexOf(\"Unknown SID\") ? (this.c = 3, K(12)) : (this.c = 0, K(13)), P(this), jc(this);\n      }\n    }\n  } catch (F) {} finally {}\n};\n\nfunction kc(a, b, c) {\n  for (var d = !0; !a.m && a.A < c.length;) {\n    var e = lc(a, c);\n\n    if (e == $b) {\n      4 == b && (a.c = 4, K(14), d = !1);\n      break;\n    } else if (e == Zb) {\n      a.c = 4;\n      K(15);\n      d = !1;\n      break;\n    } else ic(a, e);\n  }\n\n  4 == b && 0 == c.length && (a.c = 1, K(16), d = !1);\n  a.b = a.b && d;\n  d || (P(a), jc(a));\n}\n\ng.cb = function () {\n  if (this.a) {\n    var a = O(this.a),\n        b = this.a.aa();\n    this.A < b.length && (gc(this), kc(this, a, b), this.b && 4 != a && ec(this));\n  }\n};\n\nfunction lc(a, b) {\n  var c = a.A,\n      d = b.indexOf(\"\\n\", c);\n  if (-1 == d) return $b;\n  c = Number(b.substring(c, d));\n  if (isNaN(c)) return Zb;\n  d += 1;\n  if (d + c > b.length) return $b;\n  b = b.substr(d, c);\n  a.A = d + c;\n  return b;\n}\n\ng.cancel = function () {\n  this.m = !0;\n  P(this);\n};\n\nfunction ec(a) {\n  a.R = w() + a.O;\n  mc(a, a.O);\n}\n\nfunction mc(a, b) {\n  if (null != a.i) throw Error(\"WatchDog timer not null\");\n  a.i = Ob(u(a.bb, a), b);\n}\n\nfunction gc(a) {\n  a.i && (k.clearTimeout(a.i), a.i = null);\n}\n\ng.bb = function () {\n  this.i = null;\n  var a = w();\n  0 <= a - this.R ? (2 != this.F && (J(3), K(17)), P(this), this.c = 2, jc(this)) : mc(this, this.R - a);\n};\n\nfunction jc(a) {\n  a.g.Da() || a.m || a.g.na(a);\n}\n\nfunction P(a) {\n  gc(a);\n  var b = a.B;\n  b && \"function\" == typeof b.la && b.la();\n  a.B = null;\n  Db(a.P);\n  Jb(a.I);\n  a.a && (b = a.a, a.a = null, b.abort(), b.la());\n}\n\nfunction ic(a, b) {\n  try {\n    a.g.Ga(a, b), J(4);\n  } catch (c) {}\n}\n\nfunction nc(a) {\n  if (a.C && \"function\" == typeof a.C) return a.C();\n  if (m(a)) return a.split(\"\");\n\n  if (ca(a)) {\n    for (var b = [], c = a.length, d = 0; d < c; d++) {\n      b.push(a[d]);\n    }\n\n    return b;\n  }\n\n  b = [];\n  c = 0;\n\n  for (d in a) {\n    b[c++] = a[d];\n  }\n\n  return b;\n}\n\nfunction oc(a, b) {\n  if (a.forEach && \"function\" == typeof a.forEach) a.forEach(b, void 0);else if (ca(a) || m(a)) la(a, b, void 0);else {\n    if (a.K && \"function\" == typeof a.K) var c = a.K();else if (a.C && \"function\" == typeof a.C) c = void 0;else if (ca(a) || m(a)) {\n      c = [];\n\n      for (var d = a.length, e = 0; e < d; e++) {\n        c.push(e);\n      }\n    } else for (e in c = [], d = 0, a) {\n      c[d++] = e;\n    }\n    d = nc(a);\n    e = d.length;\n\n    for (var f = 0; f < e; f++) {\n      b.call(void 0, d[f], c && c[f], a);\n    }\n  }\n}\n\nfunction Q(a, b) {\n  this.b = {};\n  this.a = [];\n  this.c = 0;\n  var c = arguments.length;\n\n  if (1 < c) {\n    if (c % 2) throw Error(\"Uneven number of arguments\");\n\n    for (var d = 0; d < c; d += 2) {\n      this.set(arguments[d], arguments[d + 1]);\n    }\n  } else if (a) if (a instanceof Q) for (c = a.K(), d = 0; d < c.length; d++) {\n    this.set(c[d], a.get(c[d]));\n  } else for (d in a) {\n    this.set(d, a[d]);\n  }\n}\n\ng = Q.prototype;\n\ng.C = function () {\n  pc(this);\n\n  for (var a = [], b = 0; b < this.a.length; b++) {\n    a.push(this.b[this.a[b]]);\n  }\n\n  return a;\n};\n\ng.K = function () {\n  pc(this);\n  return this.a.concat();\n};\n\nfunction qc(a) {\n  a.b = {};\n  a.a.length = 0;\n  a.c = 0;\n}\n\nfunction rc(a, b) {\n  R(a.b, b) && (delete a.b[b], a.c--, a.a.length > 2 * a.c && pc(a));\n}\n\nfunction pc(a) {\n  if (a.c != a.a.length) {\n    for (var b = 0, c = 0; b < a.a.length;) {\n      var d = a.a[b];\n      R(a.b, d) && (a.a[c++] = d);\n      b++;\n    }\n\n    a.a.length = c;\n  }\n\n  if (a.c != a.a.length) {\n    var e = {};\n\n    for (c = b = 0; b < a.a.length;) {\n      d = a.a[b], R(e, d) || (a.a[c++] = d, e[d] = 1), b++;\n    }\n\n    a.a.length = c;\n  }\n}\n\ng.get = function (a, b) {\n  return R(this.b, a) ? this.b[a] : b;\n};\n\ng.set = function (a, b) {\n  R(this.b, a) || (this.c++, this.a.push(a));\n  this.b[a] = b;\n};\n\ng.forEach = function (a, b) {\n  for (var c = this.K(), d = 0; d < c.length; d++) {\n    var e = c[d],\n        f = this.get(e);\n    a.call(b, f, e, this);\n  }\n};\n\nfunction R(a, b) {\n  return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nvar sc = /^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/;\n\nfunction tc(a, b) {\n  if (a) {\n    a = a.split(\"&\");\n\n    for (var c = 0; c < a.length; c++) {\n      var d = a[c].indexOf(\"=\"),\n          e = null;\n\n      if (0 <= d) {\n        var f = a[c].substring(0, d);\n        e = a[c].substring(d + 1);\n      } else f = a[c];\n\n      b(f, e ? decodeURIComponent(e.replace(/\\+/g, \" \")) : \"\");\n    }\n  }\n}\n\nfunction S(a, b) {\n  this.b = this.j = this.f = \"\";\n  this.i = null;\n  this.g = this.a = \"\";\n  this.h = !1;\n  var c;\n  a instanceof S ? (this.h = void 0 !== b ? b : a.h, uc(this, a.f), this.j = a.j, vc(this, a.b), wc(this, a.i), this.a = a.a, xc(this, yc(a.c)), this.g = a.g) : a && (c = String(a).match(sc)) ? (this.h = !!b, uc(this, c[1] || \"\", !0), this.j = zc(c[2] || \"\"), vc(this, c[3] || \"\", !0), wc(this, c[4]), this.a = zc(c[5] || \"\", !0), xc(this, c[6] || \"\", !0), this.g = zc(c[7] || \"\")) : (this.h = !!b, this.c = new Ac(null, this.h));\n}\n\nS.prototype.toString = function () {\n  var a = [],\n      b = this.f;\n  b && a.push(Bc(b, Cc, !0), \":\");\n  var c = this.b;\n  if (c || \"file\" == b) a.push(\"//\"), (b = this.j) && a.push(Bc(b, Cc, !0), \"@\"), a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g, \"%$1\")), c = this.i, null != c && a.push(\":\", String(c));\n  if (c = this.a) this.b && \"/\" != c.charAt(0) && a.push(\"/\"), a.push(Bc(c, \"/\" == c.charAt(0) ? Dc : Ec, !0));\n  (c = this.c.toString()) && a.push(\"?\", c);\n  (c = this.g) && a.push(\"#\", Bc(c, Fc));\n  return a.join(\"\");\n};\n\nS.prototype.resolve = function (a) {\n  var b = N(this),\n      c = !!a.f;\n  c ? uc(b, a.f) : c = !!a.j;\n  c ? b.j = a.j : c = !!a.b;\n  c ? vc(b, a.b) : c = null != a.i;\n  var d = a.a;\n  if (c) wc(b, a.i);else if (c = !!a.a) {\n    if (\"/\" != d.charAt(0)) if (this.b && !this.a) d = \"/\" + d;else {\n      var e = b.a.lastIndexOf(\"/\");\n      -1 != e && (d = b.a.substr(0, e + 1) + d);\n    }\n    e = d;\n    if (\"..\" == e || \".\" == e) d = \"\";else if (z(e, \"./\") || z(e, \"/.\")) {\n      d = 0 == e.lastIndexOf(\"/\", 0);\n      e = e.split(\"/\");\n\n      for (var f = [], h = 0; h < e.length;) {\n        var l = e[h++];\n        \".\" == l ? d && h == e.length && f.push(\"\") : \"..\" == l ? ((1 < f.length || 1 == f.length && \"\" != f[0]) && f.pop(), d && h == e.length && f.push(\"\")) : (f.push(l), d = !0);\n      }\n\n      d = f.join(\"/\");\n    } else d = e;\n  }\n  c ? b.a = d : c = \"\" !== a.c.toString();\n  c ? xc(b, yc(a.c)) : c = !!a.g;\n  c && (b.g = a.g);\n  return b;\n};\n\nfunction N(a) {\n  return new S(a);\n}\n\nfunction uc(a, b, c) {\n  a.f = c ? zc(b, !0) : b;\n  a.f && (a.f = a.f.replace(/:$/, \"\"));\n}\n\nfunction vc(a, b, c) {\n  a.b = c ? zc(b, !0) : b;\n}\n\nfunction wc(a, b) {\n  if (b) {\n    b = Number(b);\n    if (isNaN(b) || 0 > b) throw Error(\"Bad port number \" + b);\n    a.i = b;\n  } else a.i = null;\n}\n\nfunction xc(a, b, c) {\n  b instanceof Ac ? (a.c = b, Gc(a.c, a.h)) : (c || (b = Bc(b, Hc)), a.c = new Ac(b, a.h));\n}\n\nfunction T(a, b, c) {\n  a.c.set(b, c);\n}\n\nfunction fc(a, b, c) {\n  q(c) || (c = [String(c)]);\n  Ic(a.c, b, c);\n}\n\nfunction bc(a) {\n  T(a, \"zx\", Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ w()).toString(36));\n  return a;\n}\n\nfunction Jc(a) {\n  return a instanceof S ? N(a) : new S(a, void 0);\n}\n\nfunction Kc(a, b, c, d) {\n  var e = new S(null, void 0);\n  a && uc(e, a);\n  b && vc(e, b);\n  c && wc(e, c);\n  d && (e.a = d);\n  return e;\n}\n\nfunction zc(a, b) {\n  return a ? b ? decodeURI(a.replace(/%25/g, \"%2525\")) : decodeURIComponent(a) : \"\";\n}\n\nfunction Bc(a, b, c) {\n  return m(a) ? (a = encodeURI(a).replace(b, Lc), c && (a = a.replace(/%25([0-9a-fA-F]{2})/g, \"%$1\")), a) : null;\n}\n\nfunction Lc(a) {\n  a = a.charCodeAt(0);\n  return \"%\" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);\n}\n\nvar Cc = /[#\\/\\?@]/g,\n    Ec = /[#\\?:]/g,\n    Dc = /[#\\?]/g,\n    Hc = /[#\\?@]/g,\n    Fc = /#/g;\n\nfunction Ac(a, b) {\n  this.b = this.a = null;\n  this.c = a || null;\n  this.f = !!b;\n}\n\nfunction U(a) {\n  a.a || (a.a = new Q(), a.b = 0, a.c && tc(a.c, function (b, c) {\n    a.add(decodeURIComponent(b.replace(/\\+/g, \" \")), c);\n  }));\n}\n\ng = Ac.prototype;\n\ng.add = function (a, b) {\n  U(this);\n  this.c = null;\n  a = V(this, a);\n  var c = this.a.get(a);\n  c || this.a.set(a, c = []);\n  c.push(b);\n  this.b += 1;\n  return this;\n};\n\nfunction Mc(a, b) {\n  U(a);\n  b = V(a, b);\n  R(a.a.b, b) && (a.c = null, a.b -= a.a.get(b).length, rc(a.a, b));\n}\n\nfunction Nc(a, b) {\n  U(a);\n  b = V(a, b);\n  return R(a.a.b, b);\n}\n\ng.forEach = function (a, b) {\n  U(this);\n  this.a.forEach(function (c, d) {\n    la(c, function (e) {\n      a.call(b, e, d, this);\n    }, this);\n  }, this);\n};\n\ng.K = function () {\n  U(this);\n\n  for (var a = this.a.C(), b = this.a.K(), c = [], d = 0; d < b.length; d++) {\n    for (var e = a[d], f = 0; f < e.length; f++) {\n      c.push(b[d]);\n    }\n  }\n\n  return c;\n};\n\ng.C = function (a) {\n  U(this);\n  var b = [];\n  if (m(a)) Nc(this, a) && (b = oa(b, this.a.get(V(this, a))));else {\n    a = this.a.C();\n\n    for (var c = 0; c < a.length; c++) {\n      b = oa(b, a[c]);\n    }\n  }\n  return b;\n};\n\ng.set = function (a, b) {\n  U(this);\n  this.c = null;\n  a = V(this, a);\n  Nc(this, a) && (this.b -= this.a.get(a).length);\n  this.a.set(a, [b]);\n  this.b += 1;\n  return this;\n};\n\ng.get = function (a, b) {\n  if (!a) return b;\n  a = this.C(a);\n  return 0 < a.length ? String(a[0]) : b;\n};\n\nfunction Ic(a, b, c) {\n  Mc(a, b);\n  0 < c.length && (a.c = null, a.a.set(V(a, b), pa(c)), a.b += c.length);\n}\n\ng.toString = function () {\n  if (this.c) return this.c;\n  if (!this.a) return \"\";\n\n  for (var a = [], b = this.a.K(), c = 0; c < b.length; c++) {\n    var d = b[c],\n        e = encodeURIComponent(String(d));\n    d = this.C(d);\n\n    for (var f = 0; f < d.length; f++) {\n      var h = e;\n      \"\" !== d[f] && (h += \"=\" + encodeURIComponent(String(d[f])));\n      a.push(h);\n    }\n  }\n\n  return this.c = a.join(\"&\");\n};\n\nfunction yc(a) {\n  var b = new Ac();\n  b.c = a.c;\n  a.a && (b.a = new Q(a.a), b.b = a.b);\n  return b;\n}\n\nfunction V(a, b) {\n  b = String(b);\n  a.f && (b = b.toLowerCase());\n  return b;\n}\n\nfunction Gc(a, b) {\n  b && !a.f && (U(a), a.c = null, a.a.forEach(function (c, d) {\n    var e = d.toLowerCase();\n    d != e && (Mc(this, d), Ic(this, e, c));\n  }, a));\n  a.f = b;\n}\n\nfunction Qc() {}\n\nfunction Rc() {}\n\nx(Rc, Qc);\n\nfunction Sc(a) {\n  this.a = a;\n  this.b = this.h = null;\n  this.g = !1;\n  this.i = null;\n  this.c = -1;\n  this.l = this.f = null;\n}\n\ng = Sc.prototype;\ng.M = null;\n\nfunction Uc(a) {\n  var b = a.a.F.a;\n  if (null != b) K(4), b ? (K(10), Vc(a.a, a, !1)) : (K(11), Vc(a.a, a, !0));else {\n    a.b = new M(a, void 0, void 0);\n    a.b.h = a.h;\n    b = a.a;\n    b = Wc(b, b.Y() ? a.f : null, a.i);\n    K(4);\n    fc(b, \"TYPE\", \"xmlhttp\");\n    var c = a.a.j,\n        d = a.a.I;\n    c && d && T(b, c, d);\n    dc(a.b, b, !1, a.f);\n  }\n}\n\ng.$ = function (a) {\n  return this.a.$(a);\n};\n\ng.abort = function () {\n  this.b && (this.b.cancel(), this.b = null);\n  this.c = -1;\n};\n\ng.Da = function () {\n  return !1;\n};\n\ng.Ga = function (a, b) {\n  this.c = a.o;\n\n  if (0 == this.M) {\n    if (!this.a.o && (a = a.a)) {\n      var c = hc(a, \"X-Client-Wire-Protocol\");\n      this.l = c ? c : null;\n      this.a.j && (a = hc(a, \"X-HTTP-Session-Id\")) && (this.a.I = a);\n    }\n\n    if (b) {\n      try {\n        var d = this.a.ja.a.parse(b);\n      } catch (e) {\n        b = this.a;\n        b.m = this.c;\n        W(b, 2);\n        return;\n      }\n\n      this.f = d[0];\n    } else b = this.a, b.m = this.c, W(b, 2);\n  } else if (1 == this.M) if (this.g) K(6);else if (\"11111\" == b) {\n    if (K(5), this.g = !0, !B || 10 <= Number(Na)) this.c = 200, this.b.cancel(), K(11), Vc(this.a, this, !0);\n  } else K(7), this.g = !1;\n};\n\ng.na = function () {\n  this.c = this.b.o;\n  if (this.b.b) 0 == this.M ? (this.M = 1, Uc(this)) : 1 == this.M && (this.g ? (K(11), Vc(this.a, this, !0)) : (K(10), Vc(this.a, this, !1)));else {\n    0 == this.M ? K(8) : 1 == this.M && K(9);\n    var a = this.a;\n    a.m = this.c;\n    W(a, 2);\n  }\n};\n\ng.Y = function () {\n  return this.a.Y();\n};\n\ng.ma = function () {\n  return this.a.ma();\n};\n\nfunction Xc() {\n  this.a = this.b = null;\n}\n\nfunction Yc() {\n  this.a = new Q();\n}\n\nfunction Zc(a) {\n  var b = typeof a;\n  return \"object\" == b && a || \"function\" == b ? \"o\" + (a[t] || (a[t] = ++da)) : b.charAt(0) + a;\n}\n\nYc.prototype.add = function (a) {\n  this.a.set(Zc(a), a);\n};\n\nYc.prototype.C = function () {\n  return this.a.C();\n};\n\nfunction $c(a, b) {\n  this.b = a;\n  this.a = b;\n}\n\nfunction ad(a) {\n  this.g = a || bd;\n  k.PerformanceNavigationTiming ? (a = k.performance.getEntriesByType(\"navigation\"), a = 0 < a.length && (\"hq\" == a[0].nextHopProtocol || \"h2\" == a[0].nextHopProtocol)) : a = !!(k.ka && k.ka.Ea && k.ka.Ea() && k.ka.Ea().zb);\n  this.f = a ? this.g : 1;\n  this.a = null;\n  1 < this.f && (this.a = new Yc());\n  this.b = null;\n  this.c = [];\n}\n\nvar bd = 10;\n\nfunction cd(a, b) {\n  !a.a && (z(b, \"spdy\") || z(b, \"quic\") || z(b, \"h2\")) && (a.f = a.g, a.a = new Yc(), a.b && (dd(a, a.b), a.b = null));\n}\n\nfunction ed(a) {\n  return a.b ? !0 : a.a ? a.a.a.c >= a.f : !1;\n}\n\nfunction fd(a) {\n  return a.b ? 1 : a.a ? a.a.a.c : 0;\n}\n\nfunction gd(a, b) {\n  a.b ? a = a.b == b : a.a ? (b = Zc(b), a = R(a.a.a.b, b)) : a = !1;\n  return a;\n}\n\nfunction dd(a, b) {\n  a.a ? a.a.add(b) : a.b = b;\n}\n\nfunction hd(a, b) {\n  if (a.b && a.b == b) a.b = null;else {\n    var c;\n    if (c = a.a) c = Zc(b), c = R(a.a.a.b, c);\n    c && rc(a.a.a, Zc(b));\n  }\n}\n\nad.prototype.cancel = function () {\n  this.c = id(this);\n  this.b ? (this.b.cancel(), this.b = null) : this.a && 0 != this.a.a.c && (la(this.a.C(), function (a) {\n    a.cancel();\n  }), qc(this.a.a));\n};\n\nfunction id(a) {\n  if (null != a.b) return a.c.concat(a.b.j);\n\n  if (null != a.a && 0 != a.a.a.c) {\n    var b = a.c;\n    la(a.a.C(), function (c) {\n      b = b.concat(c.j);\n    });\n    return b;\n  }\n\n  return pa(a.c);\n}\n\nfunction jd() {}\n\njd.prototype.stringify = function (a) {\n  return k.JSON.stringify(a, void 0);\n};\n\njd.prototype.parse = function (a) {\n  return k.JSON.parse(a, void 0);\n};\n\nfunction kd() {\n  this.a = new jd();\n}\n\nfunction ld(a, b, c) {\n  var d = c || \"\";\n\n  try {\n    oc(a, function (e, f) {\n      var h = e;\n      r(e) && (h = ob(e));\n      b.push(d + f + \"=\" + encodeURIComponent(h));\n    });\n  } catch (e) {\n    throw b.push(d + \"type=\" + encodeURIComponent(\"_badmap\")), e;\n  }\n}\n\nfunction md(a, b) {\n  var c = new Kb();\n\n  if (k.Image) {\n    var d = new Image();\n    d.onload = v(nd, c, d, \"TestLoadImage: loaded\", !0, b);\n    d.onerror = v(nd, c, d, \"TestLoadImage: error\", !1, b);\n    d.onabort = v(nd, c, d, \"TestLoadImage: abort\", !1, b);\n    d.ontimeout = v(nd, c, d, \"TestLoadImage: timeout\", !1, b);\n    k.setTimeout(function () {\n      if (d.ontimeout) d.ontimeout();\n    }, 1E4);\n    d.src = a;\n  } else b(!1);\n}\n\nfunction nd(a, b, c, d, e) {\n  try {\n    b.onload = null, b.onerror = null, b.onabort = null, b.ontimeout = null, e(d);\n  } catch (f) {}\n}\n\nvar od = k.JSON.parse;\n\nfunction X(a) {\n  G.call(this);\n  this.headers = new Q();\n  this.H = a || null;\n  this.b = !1;\n  this.s = this.a = null;\n  this.A = \"\";\n  this.h = 0;\n  this.f = \"\";\n  this.g = this.w = this.l = this.v = !1;\n  this.o = 0;\n  this.m = null;\n  this.I = pd;\n  this.D = this.F = !1;\n}\n\nx(X, G);\nvar pd = \"\",\n    qd = /^https?$/i,\n    rd = [\"POST\", \"PUT\"];\ng = X.prototype;\n\ng.ca = function (a, b, c, d) {\n  if (this.a) throw Error(\"[goog.net.XhrIo] Object is active with another request=\" + this.A + \"; newUri=\" + a);\n  b = b ? b.toUpperCase() : \"GET\";\n  this.A = a;\n  this.f = \"\";\n  this.h = 0;\n  this.v = !1;\n  this.b = !0;\n  this.a = new XMLHttpRequest();\n  this.s = this.H ? Sb(this.H) : Sb(Wb);\n  this.a.onreadystatechange = u(this.Fa, this);\n\n  try {\n    this.w = !0, this.a.open(b, String(a), !0), this.w = !1;\n  } catch (f) {\n    sd(this, f);\n    return;\n  }\n\n  a = c || \"\";\n  var e = new Q(this.headers);\n  d && oc(d, function (f, h) {\n    e.set(h, f);\n  });\n  d = ma(e.K());\n  c = k.FormData && a instanceof k.FormData;\n  !(0 <= ja(rd, b)) || d || c || e.set(\"Content-Type\", \"application/x-www-form-urlencoded;charset=utf-8\");\n  e.forEach(function (f, h) {\n    this.a.setRequestHeader(h, f);\n  }, this);\n  this.I && (this.a.responseType = this.I);\n  \"withCredentials\" in this.a && this.a.withCredentials !== this.F && (this.a.withCredentials = this.F);\n\n  try {\n    td(this), 0 < this.o && ((this.D = ud(this.a)) ? (this.a.timeout = this.o, this.a.ontimeout = u(this.Ca, this)) : this.m = Eb(this.Ca, this.o, this)), this.l = !0, this.a.send(a), this.l = !1;\n  } catch (f) {\n    sd(this, f);\n  }\n};\n\nfunction ud(a) {\n  return B && Ma(9) && aa(a.timeout) && void 0 !== a.ontimeout;\n}\n\nfunction na(a) {\n  return \"content-type\" == a.toLowerCase();\n}\n\ng.Ca = function () {\n  \"undefined\" != typeof goog && this.a && (this.f = \"Timed out after \" + this.o + \"ms, aborting\", this.h = 8, this.dispatchEvent(\"timeout\"), this.abort(8));\n};\n\nfunction sd(a, b) {\n  a.b = !1;\n  a.a && (a.g = !0, a.a.abort(), a.g = !1);\n  a.f = b;\n  a.h = 5;\n  vd(a);\n  wd(a);\n}\n\nfunction vd(a) {\n  a.v || (a.v = !0, a.dispatchEvent(\"complete\"), a.dispatchEvent(\"error\"));\n}\n\ng.abort = function (a) {\n  this.a && this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1, this.h = a || 7, this.dispatchEvent(\"complete\"), this.dispatchEvent(\"abort\"), wd(this));\n};\n\ng.G = function () {\n  this.a && (this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1), wd(this, !0));\n  X.N.G.call(this);\n};\n\ng.Fa = function () {\n  this.j || (this.w || this.l || this.g ? xd(this) : this.$a());\n};\n\ng.$a = function () {\n  xd(this);\n};\n\nfunction xd(a) {\n  if (a.b && \"undefined\" != typeof goog && (!a.s[1] || 4 != O(a) || 2 != a.T())) if (a.l && 4 == O(a)) Eb(a.Fa, 0, a);else if (a.dispatchEvent(\"readystatechange\"), 4 == O(a)) {\n    a.b = !1;\n\n    try {\n      var b = a.T();\n\n      a: switch (b) {\n        case 200:\n        case 201:\n        case 202:\n        case 204:\n        case 206:\n        case 304:\n        case 1223:\n          var c = !0;\n          break a;\n\n        default:\n          c = !1;\n      }\n\n      var d;\n\n      if (!(d = c)) {\n        var e;\n\n        if (e = 0 === b) {\n          var f = String(a.A).match(sc)[1] || null;\n\n          if (!f && k.self && k.self.location) {\n            var h = k.self.location.protocol;\n            f = h.substr(0, h.length - 1);\n          }\n\n          e = !qd.test(f ? f.toLowerCase() : \"\");\n        }\n\n        d = e;\n      }\n\n      d ? (a.dispatchEvent(\"complete\"), a.dispatchEvent(\"success\")) : (a.h = 6, a.f = a.za() + \" [\" + a.T() + \"]\", vd(a));\n    } finally {\n      wd(a);\n    }\n  }\n}\n\nfunction wd(a, b) {\n  if (a.a) {\n    td(a);\n    var c = a.a,\n        d = a.s[0] ? ba : null;\n    a.a = null;\n    a.s = null;\n    b || a.dispatchEvent(\"ready\");\n\n    try {\n      c.onreadystatechange = d;\n    } catch (e) {}\n  }\n}\n\nfunction td(a) {\n  a.a && a.D && (a.a.ontimeout = null);\n  a.m && (k.clearTimeout(a.m), a.m = null);\n}\n\nfunction O(a) {\n  return a.a ? a.a.readyState : 0;\n}\n\ng.T = function () {\n  try {\n    return 2 < O(this) ? this.a.status : -1;\n  } catch (a) {\n    return -1;\n  }\n};\n\ng.za = function () {\n  try {\n    return 2 < O(this) ? this.a.statusText : \"\";\n  } catch (a) {\n    return \"\";\n  }\n};\n\ng.aa = function () {\n  try {\n    return this.a ? this.a.responseText : \"\";\n  } catch (a) {\n    return \"\";\n  }\n};\n\ng.Va = function (a) {\n  if (this.a) {\n    var b = this.a.responseText;\n    a && 0 == b.indexOf(a) && (b = b.substring(a.length));\n    return od(b);\n  }\n};\n\nfunction hc(a, b) {\n  return a.a ? a.a.getResponseHeader(b) : null;\n}\n\ng.ya = function () {\n  return this.h;\n};\n\ng.Ya = function () {\n  return m(this.f) ? this.f : String(this.f);\n};\n\nfunction yd(a) {\n  var b = \"\";\n  va(a, function (c, d) {\n    b += d;\n    b += \":\";\n    b += c;\n    b += \"\\r\\n\";\n  });\n  return b;\n}\n\nfunction zd(a, b, c) {\n  a: {\n    for (d in c) {\n      var d = !1;\n      break a;\n    }\n\n    d = !0;\n  }\n\n  if (d) return a;\n  c = yd(c);\n\n  if (m(a)) {\n    b = encodeURIComponent(String(b));\n    c = null != c ? \"=\" + encodeURIComponent(String(c)) : \"\";\n\n    if (b += c) {\n      c = a.indexOf(\"#\");\n      0 > c && (c = a.length);\n      d = a.indexOf(\"?\");\n\n      if (0 > d || d > c) {\n        d = c;\n        var e = \"\";\n      } else e = a.substring(d + 1, c);\n\n      a = [a.substr(0, d), e, a.substr(c)];\n      c = a[1];\n      a[1] = b ? c ? c + \"&\" + b : b : c;\n      a = a[0] + (a[1] ? \"?\" + a[1] : \"\") + a[2];\n    }\n\n    return a;\n  }\n\n  T(a, b, c);\n  return a;\n}\n\nfunction Ad(a) {\n  this.f = [];\n  this.F = new Xc();\n  this.ga = this.pa = this.B = this.ha = this.a = this.I = this.j = this.V = this.g = this.J = this.i = null;\n  this.Ra = this.P = 0;\n  this.Pa = !!n(\"internalChannelParams.failFast\", a);\n  this.ia = this.w = this.s = this.l = this.h = this.c = null;\n  this.oa = !0;\n  this.m = this.ra = this.O = -1;\n  this.S = this.v = this.A = 0;\n  this.Oa = n(\"internalChannelParams.baseRetryDelayMs\", a) || 5E3;\n  this.Sa = n(\"internalChannelParams.retryDelaySeedMs\", a) || 1E4;\n  this.Qa = n(\"internalChannelParams.forwardChannelMaxRetries\", a) || 2;\n  this.qa = n(\"internalChannelParams.forwardChannelRequestTimeoutMs\", a) || 2E4;\n  this.La = a && a.Ab || void 0;\n  this.D = void 0;\n  this.R = a && a.supportsCrossDomainXhr || !1;\n  this.H = \"\";\n  this.b = new ad(a && a.concurrentRequestLimit);\n  this.ja = new kd();\n  this.o = a && void 0 !== a.backgroundChannelTest ? a.backgroundChannelTest : !0;\n  (this.W = a && a.fastHandshake || !1) && !this.o && (this.o = !0);\n  a && a.forceLongPolling && (this.oa = !1);\n  this.fa = void 0;\n}\n\ng = Ad.prototype;\ng.wa = 8;\ng.u = 1;\n\nfunction Bd(a) {\n  Cd(a);\n\n  if (3 == a.u) {\n    var b = a.P++,\n        c = N(a.B);\n    T(c, \"SID\", a.H);\n    T(c, \"RID\", b);\n    T(c, \"TYPE\", \"terminate\");\n    Dd(a, c);\n    b = new M(a, b, void 0);\n    b.F = 2;\n    b.f = bc(N(c));\n    c = !1;\n    k.navigator && k.navigator.sendBeacon && (c = k.navigator.sendBeacon(b.f.toString(), \"\"));\n    !c && k.Image && (new Image().src = b.f, c = !0);\n    c || (b.a = b.g.$(null), b.a.ca(b.f));\n    b.v = w();\n    ec(b);\n  }\n\n  Ed(a);\n}\n\nfunction Cd(a) {\n  a.w && (a.w.abort(), a.w = null);\n  a.a && (a.a.cancel(), a.a = null);\n  a.l && (k.clearTimeout(a.l), a.l = null);\n  Fd(a);\n  a.b.cancel();\n  a.h && (aa(a.h) && k.clearTimeout(a.h), a.h = null);\n}\n\nfunction Gd(a, b) {\n  a.f.push(new $c(a.Ra++, b));\n  3 == a.u && Hd(a);\n}\n\ng.Da = function () {\n  return 0 == this.u;\n};\n\nfunction Hd(a) {\n  ed(a.b) || a.h || (a.h = !0, wb(a.Ia, a), a.A = 0);\n}\n\nfunction Id(a, b) {\n  if (fd(a.b) >= a.b.f - (a.h ? 1 : 0)) return !1;\n  if (a.h) return a.f = b.j.concat(a.f), !0;\n  if (1 == a.u || 2 == a.u || a.A >= (a.Pa ? 0 : a.Qa)) return !1;\n  a.h = Ob(u(a.Ia, a, b), Jd(a, a.A));\n  a.A++;\n  return !0;\n}\n\ng.Ia = function (a) {\n  if (this.h) if (this.h = null, 1 == this.u) {\n    if (!a) {\n      this.P = Math.floor(1E5 * Math.random());\n      a = this.P++;\n      var b = new M(this, a, void 0),\n          c = this.i;\n      this.J && (c ? (c = wa(c), ya(c, this.J)) : c = this.J);\n      null === this.g && (b.h = c);\n      var d;\n      if (this.W) a: {\n        for (var e = d = 0; e < this.f.length; e++) {\n          b: {\n            var f = this.f[e];\n\n            if (\"__data__\" in f.a && (f = f.a.__data__, m(f))) {\n              f = f.length;\n              break b;\n            }\n\n            f = void 0;\n          }\n\n          if (void 0 === f) break;\n          d += f;\n\n          if (4096 < d) {\n            d = e;\n            break a;\n          }\n\n          if (4096 === d || e === this.f.length - 1) {\n            d = e + 1;\n            break a;\n          }\n        }\n\n        d = 1E3;\n      } else d = 1E3;\n      d = Kd(this, b, d);\n      e = N(this.B);\n      T(e, \"RID\", a);\n      T(e, \"CVER\", 22);\n      this.o && this.j && T(e, \"X-HTTP-Session-Id\", this.j);\n      Dd(this, e);\n      this.g && c && zd(e, this.g, c);\n      dd(this.b, b);\n      this.W ? (T(e, \"$req\", d), T(e, \"SID\", \"null\"), b.S = !0, ac(b, e, null)) : ac(b, e, d);\n      this.u = 2;\n    }\n  } else 3 == this.u && (a ? Ld(this, a) : 0 == this.f.length || ed(this.b) || Ld(this));\n};\n\nfunction Ld(a, b) {\n  var c;\n  b ? c = b.W : c = a.P++;\n  var d = N(a.B);\n  T(d, \"SID\", a.H);\n  T(d, \"RID\", c);\n  T(d, \"AID\", a.O);\n  Dd(a, d);\n  a.g && a.i && zd(d, a.g, a.i);\n  c = new M(a, c, a.A + 1);\n  null === a.g && (c.h = a.i);\n  b && (a.f = b.j.concat(a.f));\n  b = Kd(a, c, 1E3);\n  c.setTimeout(Math.round(.5 * a.qa) + Math.round(.5 * a.qa * Math.random()));\n  dd(a.b, c);\n  ac(c, d, b);\n}\n\nfunction Dd(a, b) {\n  a.c && oc({}, function (c, d) {\n    T(b, d, c);\n  });\n}\n\nfunction Kd(a, b, c) {\n  c = Math.min(a.f.length, c);\n  var d = a.c ? u(a.c.Ta, a.c, a) : null;\n\n  a: for (var e = a.f, f = -1;;) {\n    var h = [\"count=\" + c];\n    -1 == f ? 0 < c ? (f = e[0].b, h.push(\"ofs=\" + f)) : f = 0 : h.push(\"ofs=\" + f);\n\n    for (var l = !0, F = 0; F < c; F++) {\n      var Bb = e[F].b,\n          Tc = e[F].a;\n      Bb -= f;\n      if (0 > Bb) f = Math.max(0, e[F].b - 100), l = !1;else try {\n        ld(Tc, h, \"req\" + Bb + \"_\");\n      } catch (Ud) {\n        d && d(Tc);\n      }\n    }\n\n    if (l) {\n      d = h.join(\"&\");\n      break a;\n    }\n  }\n\n  a = a.f.splice(0, c);\n  b.j = a;\n  return d;\n}\n\nfunction Md(a) {\n  a.a || a.l || (a.S = 1, wb(a.Ha, a), a.v = 0);\n}\n\nfunction Nd(a) {\n  if (a.a || a.l || 3 <= a.v) return !1;\n  a.S++;\n  a.l = Ob(u(a.Ha, a), Jd(a, a.v));\n  a.v++;\n  return !0;\n}\n\ng.Ha = function () {\n  this.l = null;\n  this.a = new M(this, \"rpc\", this.S);\n  null === this.g && (this.a.h = this.i);\n  this.a.J = 0;\n  var a = N(this.pa);\n  T(a, \"RID\", \"rpc\");\n  T(a, \"SID\", this.H);\n  T(a, \"CI\", this.ia ? \"0\" : \"1\");\n  T(a, \"AID\", this.O);\n  Dd(this, a);\n  T(a, \"TYPE\", \"xmlhttp\");\n  this.g && this.i && zd(a, this.g, this.i);\n  this.D && this.a.setTimeout(this.D);\n  dc(this.a, a, !0, this.ga);\n};\n\nfunction Vc(a, b, c) {\n  var d = b.l;\n  d && cd(a.b, d);\n  a.ia = a.oa && c;\n  a.m = b.c;\n  a.B = Wc(a, null, a.ha);\n  Hd(a);\n}\n\ng.Ga = function (a, b) {\n  if (0 != this.u && (this.a == a || gd(this.b, a))) if (this.m = a.o, !a.s && gd(this.b, a) && 3 == this.u) {\n    try {\n      var c = this.ja.a.parse(b);\n    } catch (f) {\n      c = null;\n    }\n\n    if (q(c) && 3 == c.length) {\n      b = c;\n      if (0 == b[0]) a: {\n        if (!this.l) {\n          if (this.a) if (this.a.v + 3E3 < a.v) Fd(this), this.a.cancel(), this.a = null;else break a;\n          Nd(this);\n          K(18);\n        }\n      } else this.ra = b[1], 0 < this.ra - this.O && 37500 > b[2] && this.ia && 0 == this.v && !this.s && (this.s = Ob(u(this.Za, this), 6E3));\n\n      if (1 >= fd(this.b) && this.fa) {\n        try {\n          this.fa();\n        } catch (f) {}\n\n        this.fa = void 0;\n      }\n    } else W(this, 11);\n  } else if ((a.s || this.a == a) && Fd(this), !qa(b)) for (b = c = this.ja.a.parse(b), c = 0; c < b.length; c++) {\n    var d = b[c];\n    this.O = d[0];\n    d = d[1];\n    if (2 == this.u) {\n      if (\"c\" == d[0]) {\n        this.H = d[1];\n        this.ga = d[2];\n        var e = d[3];\n        null != e && (this.wa = e);\n        d = d[5];\n        null != d && aa(d) && 0 < d && (this.D = 1.5 * d);\n        this.o && (d = a.a) && ((e = hc(d, \"X-Client-Wire-Protocol\")) && cd(this.b, e), this.j && (d = hc(d, \"X-HTTP-Session-Id\"))) && (this.I = d, T(this.B, this.j, d));\n        this.u = 3;\n        this.c && this.c.va();\n        d = a;\n        this.pa = Wc(this, this.Y() ? this.ga : null, this.ha);\n        d.s ? (hd(this.b, d), (e = this.D) && d.setTimeout(e), d.i && (gc(d), ec(d)), this.a = d) : Md(this);\n        0 < this.f.length && Hd(this);\n      } else \"stop\" != d[0] && \"close\" != d[0] || W(this, 7);\n    } else 3 == this.u && (\"stop\" == d[0] || \"close\" == d[0] ? \"stop\" == d[0] ? W(this, 7) : Bd(this) : \"noop\" != d[0] && this.c && this.c.ua(d), this.v = 0);\n  }\n};\n\ng.Za = function () {\n  null != this.s && (this.s = null, this.a.cancel(), this.a = null, Nd(this), K(19));\n};\n\nfunction Fd(a) {\n  null != a.s && (k.clearTimeout(a.s), a.s = null);\n}\n\ng.na = function (a) {\n  var b = null;\n\n  if (this.a == a) {\n    Fd(this);\n    this.a = null;\n    var c = 2;\n  } else if (gd(this.b, a)) b = a.j, hd(this.b, a), c = 1;else return;\n\n  this.m = a.o;\n  if (0 != this.u) if (a.b) 1 == c ? (b = w() - a.v, I.dispatchEvent(new Nb(I, a.l ? a.l.length : 0, b, this.A)), Hd(this)) : Md(this);else {\n    var d = a.c;\n    if (3 == d || 0 == d && 0 < this.m || !(1 == c && Id(this, a) || 2 == c && Nd(this))) switch (b && 0 < b.length && (a = this.b, a.c = a.c.concat(b)), d) {\n      case 1:\n        W(this, 5);\n        break;\n\n      case 4:\n        W(this, 10);\n        break;\n\n      case 3:\n        W(this, 6);\n        break;\n\n      default:\n        W(this, 2);\n    }\n  }\n};\n\nfunction Jd(a, b) {\n  var c = a.Oa + Math.floor(Math.random() * a.Sa);\n  a.ma() || (c *= 2);\n  return c * b;\n}\n\nfunction W(a, b) {\n  if (2 == b) {\n    var c = null;\n    a.c && (c = null);\n    var d = u(a.fb, a);\n    c || (c = new S(\"//www.google.com/images/cleardot.gif\"), k.location && \"http\" == k.location.protocol || uc(c, \"https\"), bc(c));\n    md(c.toString(), d);\n  } else K(2);\n\n  a.u = 0;\n  a.c && a.c.ta(b);\n  Ed(a);\n  Cd(a);\n}\n\ng.fb = function (a) {\n  a ? K(2) : K(1);\n};\n\nfunction Ed(a) {\n  a.u = 0;\n  a.m = -1;\n\n  if (a.c) {\n    if (0 != id(a.b).length || 0 != a.f.length) a.b.c.length = 0, pa(a.f), a.f.length = 0;\n    a.c.sa();\n  }\n}\n\nfunction Wc(a, b, c) {\n  var d = Jc(c);\n  if (\"\" != d.b) b && vc(d, b + \".\" + d.b), wc(d, d.i);else {\n    var e = k.location,\n        f;\n    b ? f = b + \".\" + e.hostname : f = e.hostname;\n    d = Kc(e.protocol, f, +e.port, c);\n  }\n  a.V && va(a.V, function (h, l) {\n    T(d, l, h);\n  });\n  b = a.j;\n  c = a.I;\n  b && c && T(d, b, c);\n  T(d, \"VER\", a.wa);\n  Dd(a, d);\n  return d;\n}\n\ng.$ = function (a) {\n  if (a && !this.R) throw Error(\"Can't create secondary domain capable XhrIo object.\");\n  a = new X(this.La);\n  a.F = this.R;\n  return a;\n};\n\ng.ma = function () {\n  return !!this.c && !0;\n};\n\ng.Y = function () {\n  return this.R;\n};\n\nfunction Od() {}\n\ng = Od.prototype;\n\ng.va = function () {};\n\ng.ua = function () {};\n\ng.ta = function () {};\n\ng.sa = function () {};\n\ng.Ta = function () {};\n\nfunction Pd(a) {\n  for (var b = arguments[0], c = 1; c < arguments.length; c++) {\n    var d = arguments[c];\n    if (0 == d.lastIndexOf(\"/\", 0)) b = d;else {\n      var e;\n      (e = \"\" == b) || (e = b.length - 1, e = 0 <= e && b.indexOf(\"/\", e) == e);\n      e ? b += d : b += \"/\" + d;\n    }\n  }\n\n  return b;\n}\n\nfunction Qd() {\n  if (B && !(10 <= Number(Na))) throw Error(\"Environmental error: no available transport.\");\n}\n\nQd.prototype.a = function (a, b) {\n  return new Y(a, b);\n};\n\nfunction Y(a, b) {\n  G.call(this);\n  this.a = new Ad(b);\n  this.g = a;\n  this.m = b && b.testUrl ? b.testUrl : Pd(this.g, \"test\");\n  this.b = b && b.messageUrlParams || null;\n  a = b && b.messageHeaders || null;\n  b && b.clientProtocolHeaderRequired && (a ? a[\"X-Client-Protocol\"] = \"webchannel\" : a = {\n    \"X-Client-Protocol\": \"webchannel\"\n  });\n  this.a.i = a;\n  a = b && b.initMessageHeaders || null;\n  b && b.messageContentType && (a ? a[\"X-WebChannel-Content-Type\"] = b.messageContentType : a = {\n    \"X-WebChannel-Content-Type\": b.messageContentType\n  });\n  b && b.xa && (a ? a[\"X-WebChannel-Client-Profile\"] = b.xa : a = {\n    \"X-WebChannel-Client-Profile\": b.xa\n  });\n  this.a.J = a;\n  (a = b && b.httpHeadersOverwriteParam) && !qa(a) && (this.a.g = a);\n  this.l = b && b.supportsCrossDomainXhr || !1;\n  this.h = b && b.sendRawJson || !1;\n  (b = b && b.httpSessionIdParam) && !qa(b) && (this.a.j = b, a = this.b, null !== a && b in a && (a = this.b, b in a && delete a[b]));\n  this.f = new Z(this);\n}\n\nx(Y, G);\ng = Y.prototype;\n\ng.addEventListener = function (a, b, c, d) {\n  Y.N.addEventListener.call(this, a, b, c, d);\n};\n\ng.removeEventListener = function (a, b, c, d) {\n  Y.N.removeEventListener.call(this, a, b, c, d);\n};\n\ng.Wa = function () {\n  this.a.c = this.f;\n  this.l && (this.a.R = !0);\n  var a = this.a,\n      b = this.m,\n      c = this.g,\n      d = this.b || void 0;\n  K(0);\n  a.ha = c;\n  a.V = d || {};\n  a.o && (a.F.b = [], a.F.a = !1);\n  a.w = new Sc(a);\n  null === a.g && (a.w.h = a.i);\n  c = b;\n  a.g && a.i && (c = zd(b, a.g, a.i));\n  a = a.w;\n  a.i = c;\n  b = Wc(a.a, null, a.i);\n  K(3);\n  c = a.a.F.b;\n  null != c ? (a.f = c[0], a.M = 1, Uc(a)) : (fc(b, \"MODE\", \"init\"), !a.a.o && a.a.j && fc(b, \"X-HTTP-Session-Id\", a.a.j), a.b = new M(a, void 0, void 0), a.b.h = a.h, dc(a.b, b, !1, null), a.M = 0);\n};\n\ng.close = function () {\n  Bd(this.a);\n};\n\ng.Xa = function (a) {\n  if (m(a)) {\n    var b = {};\n    b.__data__ = a;\n    Gd(this.a, b);\n  } else this.h ? (b = {}, b.__data__ = ob(a), Gd(this.a, b)) : Gd(this.a, a);\n};\n\ng.G = function () {\n  this.a.c = null;\n  delete this.f;\n  Bd(this.a);\n  delete this.a;\n  Y.N.G.call(this);\n};\n\nfunction Rd(a) {\n  Ub.call(this);\n  var b = a.__sm__;\n\n  if (b) {\n    a: {\n      for (var c in b) {\n        a = c;\n        break a;\n      }\n\n      a = void 0;\n    }\n\n    (this.c = a) ? (a = this.c, this.data = null !== b && a in b ? b[a] : void 0) : this.data = b;\n  } else this.data = a;\n}\n\nx(Rd, Ub);\n\nfunction Sd() {\n  Vb.call(this);\n  this.status = 1;\n}\n\nx(Sd, Vb);\n\nfunction Z(a) {\n  this.a = a;\n}\n\nx(Z, Od);\n\nZ.prototype.va = function () {\n  this.a.dispatchEvent(\"a\");\n};\n\nZ.prototype.ua = function (a) {\n  this.a.dispatchEvent(new Rd(a));\n};\n\nZ.prototype.ta = function (a) {\n  this.a.dispatchEvent(new Sd(a));\n};\n\nZ.prototype.sa = function () {\n  this.a.dispatchEvent(\"b\");\n};\n\nvar Td = v(function (a, b) {\n  function c() {}\n\n  c.prototype = a.prototype;\n  var d = new c();\n  a.apply(d, Array.prototype.slice.call(arguments, 1));\n  return d;\n}, Qd);\n/*\nCopyright 2017 Google Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nQd.prototype.createWebChannel = Qd.prototype.a;\nY.prototype.send = Y.prototype.Xa;\nY.prototype.open = Y.prototype.Wa;\nY.prototype.close = Y.prototype.close;\nPb.NO_ERROR = 0;\nPb.TIMEOUT = 8;\nPb.HTTP_ERROR = 6;\nQb.COMPLETE = \"complete\";\nTb.EventType = L;\nL.OPEN = \"a\";\nL.CLOSE = \"b\";\nL.ERROR = \"c\";\nL.MESSAGE = \"d\";\nG.prototype.listen = G.prototype.Aa;\nX.prototype.listenOnce = X.prototype.Ba;\nX.prototype.getLastError = X.prototype.Ya;\nX.prototype.getLastErrorCode = X.prototype.ya;\nX.prototype.getStatus = X.prototype.T;\nX.prototype.getStatusText = X.prototype.za;\nX.prototype.getResponseJson = X.prototype.Va;\nX.prototype.getResponseText = X.prototype.aa;\nX.prototype.send = X.prototype.ca;\nvar tmp = {\n  createWebChannelTransport: Td,\n  ErrorCode: Pb,\n  EventType: Qb,\n  WebChannel: Tb,\n  XhrIo: X\n};\nvar tmp_1 = tmp.createWebChannelTransport;\nvar tmp_2 = tmp.ErrorCode;\nvar tmp_3 = tmp.EventType;\nvar tmp_4 = tmp.WebChannel;\nvar tmp_5 = tmp.XhrIo;\nexport default tmp;\nexport { tmp_2 as ErrorCode, tmp_3 as EventType, tmp_4 as WebChannel, tmp_5 as XhrIo, tmp_1 as createWebChannelTransport };"],"sourceRoot":""}