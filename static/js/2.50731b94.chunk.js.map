{"version":3,"sources":["hooks/useHeaderContext.tsx","domain/utils/goBack.ts","components/buttons/buttons.tsx","domain/DateDay.ts","hooks/useBudgetsStore.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/TextInput.tsx","domain/date.ts","hooks/useBudgetModel.tsx","hooks/useCategoriesStore.tsx","components/buttons/DeleteButton.tsx","components/buttons/SaveButton.tsx","components/YesNoDialog.tsx","domain/utils/applyRate.ts","components/categories/CategoryIcon.tsx","hooks/useIcon.tsx","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","domain/utils/getCurrencyWithSymbol.ts","../node_modules/@material-ui/core/esm/Link/Link.js","domain/ExpenseModel.ts","hooks/useCurrenciesStore.tsx","components/categories/CategoryIconButton.tsx","views/categories/CategoryIconSelector.tsx","hooks/useIconNames.tsx","components/categories/CategoryInput.tsx","components/AmountInput.tsx","components/CurrencyInput.tsx","components/categories/CategoryForm.tsx","hooks/useCountriesStore.tsx","components/CountryInput.tsx","components/AmountWithCurrencyInput.tsx","hooks/useRate.tsx","components/categories/CategoryFormDialog.tsx","components/categories/CategoriesSelect.tsx","components/expenses/ExpenseForm.tsx"],"names":["useHeaderContext","title","actions","props","useEffect","onTitleChange","onActions","undefined","goBack","history","path","length","replace","derivedProps","component","to","Link","onClick","console","warn","AppButton","color","icon","ButtonFab","style","position","bottom","zIndex","right","left","children","DateDay","date","Date","_date","this","getFullYear","getMonth","getDate","days","setDate","months","setMonth","years","setFullYear","getTime","isToday","Intl","DateTimeFormat","day","month","year","format","timestampMs","now","useBudgetsStore","useState","store","setStore","btApp","useAppContext","a","getBudgetsStore","isSubscribed","fetchStore","observer","onStorageDataChanged","storage","addObserver","deleteObserver","_toConsumableArray","arr","Array","isArray","i","arr2","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","TextInput","id","label","margin","DAY_MS","dateDiff","Math","floor","getISODateString","toISOString","slice","monthToString","monthYearToString","useBudgetModel","budgetId","budgetModel","setBudgetModel","getBudgetModel","fetchBudget","useCategoriesStore","getCategoriesStore","DeleteButton","DeleteIcon","aria-label","SaveButtonFab","YesNoDialog","handleNo","onClose","loc","useLoc","open","aria-labelledby","aria-describedby","question","description","autoFocus","applyRate","amount","rate","CategoryIcon","name","setIcon","getIconsStore","getIcon","fetchIcon","useIcon","fallback","Icon","Card","forwardRef","ref","classes","className","_props$raised","raised","other","createElement","root","elevation","overflow","CardContent","_props$component","Component","padding","paddingBottom","formatters","getCurrencyWithSymbol","currency","NumberFormat","getNumberFormatter","_props$color","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","_useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","concat","button","event","underlineNone","textDecoration","underlineHover","underlineAlways","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","cursor","userSelect","verticalAlign","borderStyle","ExpenseModel","info","amountBaseCurrency","categoryId","countryCode","identifier","when","splitInDays","validate","budget","fromMs","toMs","totals","split","em","add","dateParts","subtract","fieldErrors","push","Error","join","expenses","fromTimeMs","addDays","timeMs","JSON","stringify","values","map","e","reduce","b","useCurrenciesStore","getCurrenciesStore","CategoryIconButton","Button","CategoryIconDialogSelector","handleItemClick","value","iconNames","setIconNames","fetchIconNames","useIconNames","Dialog","selectedValue","DialogTitle","DialogContent","Grid","container","direction","justify","key","CategoryInput","React","dialogOpen","setDialogOpen","showDeleteDialog","setShowDeleteDialog","category","setCategory","wrap","item","onChange","preventDefault","target","cat","onDelete","selectedIcon","confirmed","AmountInput","required","type","amountInput","inputProps","step","amountFloat","parseFloat","onAmountChange","helperText","disabled","CurrencyInput","onCurrencyChange","options","useMemo","createOption","k","v","opts","currencies","lastCurrenciesUsed","currenciesMix","Set","keys","code","get","select","SelectProps","native","selectedCurrency","CategoryForm","uuid","onSubmit","stopPropagation","useCountriesStore","getCountriesStore","CountryInput","selectedCountry","countries","setCountries","countriesStore","onCountryChange","c","AmountWithCurrencyInput","error","setError","baseCurrency","onError","toCurrency","setRate","getRate","localRates","getLocalRates","rates","setLocalRate","fetch","useRate","handleChange","inputAmount","calculateAmountInBaseCurrency","alignItems","amountInBaseCurrency","baseAmountString","CategoryFormDialog","marginBottom","CategoryOptions","entries","categories","CategoriesSelect","selectedCategory","onCategoryChange","setCategories","addCategoryOpen","setAddCategoryOpen","getCategories","cs","initCategories","handleAddCategoryClose","ExpenseForm","setCurrency","setAmount","setCountryCode","dateString","setDateString","setCategoryId","setAmountBaseCurrency","setDescription","setSplitInDays","modified","setModified","handleSubmit","max","expenseModel","setExpenses","setLastCurrencyUsed","handleWhen","autoComplete","alignContent","amountI","currencyI","amountBaseCurrencyI","InputLabelProps","shrink","amountPerDay","parseInt","min","SaveButton"],"mappings":"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","file":"static/js/2.50731b94.chunk.js","sourcesContent":["import { useEffect, ReactNode } from \"react\";\nimport { HeaderNotifierProps } from \"../routes\";\n\nexport function useHeaderContext(title: string, actions: ReactNode, props: HeaderNotifierProps) {\n    useEffect(() => {\n        props.onTitleChange(title);\n        props.onActions(actions);\n        return function () {\n            props.onTitleChange('');\n            props.onActions(undefined);\n        }\n    // eslint-disable-next-line\n    }, []);\n}\n","import { History } from \"history\";\n\n/** \n * It navigates back in history if there are enough elements in it to do so. \n * If it can't go back, it will navigate to @param path\n * */\nexport const goBack = (history: History, path = '/') => {\n    if (history.length > 2) {\n        history.goBack();\n    } else {\n        history.replace(path);\n    }\n}\n","\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { SvgIconProps } from '@material-ui/core/SvgIcon';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\n\ntype Color = 'inherit' | 'primary' | 'secondary' | 'default';\ntype Type = 'button' | 'submit' | 'reset';\n\nexport interface AppButtonProps {\n    to?: string;\n    icon?: React.ComponentType<SvgIconProps>;\n    color?: Color;\n    disabled?: boolean;\n    type?: 'button' | 'submit' | 'reset';\n    variant?: 'text' | 'outlined' | 'contained';\n    replace?: boolean;\n    onClick?: (e: React.SyntheticEvent) => void;\n}\n\nfunction derivedProps (props: AppButtonProps) {\n    const derivedProps = {\n        component: props.to ? Link : undefined,\n    };\n    if (props.onClick && props.to) {\n        console.warn('Button should not have both onClick and href properties');\n    }\n    return derivedProps;\n}\n\nexport const AppButton: React.FC<AppButtonProps> = (props) => (\n    <IconButton color='inherit' {...props} {...derivedProps(props)}>\n        { props.icon && <props.icon />}\n    </IconButton>\n);\n\nexport interface ButtonFabProps {\n    disabled?: boolean;\n    type?: Type;\n    color?: Color;\n    to?: string;\n}\n\nfunction style (color?: Color) {\n    if (color === 'primary' || color === undefined) {\n        return {right: '1rem'};\n    } else {\n        return {left: '1rem'};\n    }\n}\n\nexport const ButtonFab = (props: ButtonFabProps&{children: React.ReactNode}) => (\n    <Fab style={{position: 'fixed', bottom: '1rem', zIndex: 10, ...style(props.color)}} \n        color={props.color||'secondary'}\n        {...props}\n        {...derivedProps(props)}\n        >\n        {props.children}\n    </Fab>);\n\n","import { YMD } from \"../api\";\n\nexport class DateDay implements YMD {\n    private readonly _date: Date;\n\n    constructor(date = new Date()) {\n        this._date = new Date(\n            date.getFullYear(), \n            date.getMonth(), \n            date.getDate());\n    }\n\n    clone() {\n        return new DateDay(this._date);\n    }\n\n    get year () {\n        return this._date.getFullYear();\n    }\n\n    get month () {\n        return this._date.getMonth();\n    }\n\n    get day () {\n        return this._date.getDate();\n    }\n\n    static fromTimeMs (timestampMs: number) {\n        return new DateDay(new Date(timestampMs));\n    }\n\n    static fromYMD (date: YMD) {\n        return new DateDay(new Date(date.year, date.month, date.day));\n    }\n\n    get timeMs () {\n        return this._date.getTime();\n    }\n    \n    get isToday() {\n        return DateDay.isToday(this);\n    }\n\n    /**\n     * @returns current object instance with days added to previous date\n     */\n    addDays (days: number) {\n        this._date.setDate(this._date.getDate() + days);\n        return this;\n    }\n\n    /**\n     * @returns current object instance with months added to previous date\n     */\n    addMonths (months: number) {\n        this._date.setMonth(this._date.getMonth() + months);\n        return this;\n    }\n\n    /**\n     * @returns current object instance with years added to previous date\n     */\n    addYears (years: number) {\n        this._date.setFullYear(this._date.getFullYear() + years);\n        return this;\n    }\n\n    static isToday(date: YMD) {\n        const now = new Date();\n        return date.day === now.getDate() && \n            date.month === now.getMonth() && \n            date.year === now.getFullYear();\n    }\n\n    get shortString () {\n        const dt = new Intl.DateTimeFormat(\n            undefined, \n            {day: 'numeric', month: 'long', year: 'numeric'});\n        return dt.format(this._date);\n    }\n\n    equals(date: DateDay) {\n        return this._date.getTime() === date._date.getTime();\n    }\n}","import { useState, useEffect } from 'react';\nimport { BudgetsStore } from '../domain/stores/interfaces';\nimport { StorageObserver } from '../services/storage/StorageApi';\nimport { useAppContext } from '../contexts/AppContext';\n\nexport function useBudgetsStore() {\n    const [store, setStore] = useState<BudgetsStore>();\n    const btApp = useAppContext();\n\n    useEffect(() => {\n        async function fetchStore () {\n            setStore(await btApp.getBudgetsStore());\n        }\n\n        let isSubscribed = true;\n        if (isSubscribed) {\n            fetchStore();\n        }\n\n        return () => { isSubscribed = false };\n        \n    }, [store, btApp]);\n\n    useEffect(() => {\n        let isSubscribed = true;\n        const observer: StorageObserver = {onStorageDataChanged: () => {\n            setStore(undefined);\n        }};\n\n        if (isSubscribed) {\n            btApp.storage.addObserver(observer);\n        }\n\n        return () => {\n            isSubscribed = false;\n            btApp.storage.deleteObserver(observer);\n        };\n    }, [btApp]);\n\n    return store;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import * as React from 'react';\nimport TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\n\nexport const TextInput = (props: TextFieldProps) => (\n    <TextField\n        id={`input-field-${props.label}`}\n        style={{ margin: 8 }}\n        margin='dense'            \n        {...props}\n    />);","\nconst DAY_MS = 1000*60*60*24;\n\n/**\n * Get difference between 2 dates in days, including from and to dates.\n * @param from - Starting period timestamp\n * @param to - Ending period timestamp\n */\nexport function dateDiff(from: number, to: number) {\n    return Math.floor((to - from)/DAY_MS) + 1;\n}\n\n/** \n * @returns Date (without time) as string type in ISO format\n */\nexport function getISODateString (date = new Date()) {\n    return date.toISOString().slice(0,10);\n}\n\n/** \n * @returns month name from Date input\n */\nexport function monthToString (month: number) {\n    const dt = new Intl.DateTimeFormat(undefined, {month: 'long'});\n    return dt.format(new Date(2000, month, 1));\n}\n\n/** \n * @returns month and year name from Date input\n */\nexport function monthYearToString (year: number, month: number) {\n    const dt = new Intl.DateTimeFormat(undefined, {month: 'long', year: 'numeric'});\n    return dt.format(new Date(year, month, 1));\n}\n","import { useState, useEffect } from 'react';\nimport { BudgetModel } from '../domain/BudgetModel';\nimport { useBudgetsStore } from './useBudgetsStore';\nimport { BudgetsStore } from '../domain/stores/interfaces';\n\nexport function useBudgetModel(budgetId: string) {\n    const store = useBudgetsStore();\n    const [budgetModel, setBudgetModel] = useState<BudgetModel>();\n\n    useEffect(() => {\n        async function fetchBudget (store: BudgetsStore) {\n            setBudgetModel(await store.getBudgetModel(budgetId));\n        }\n        if (budgetId) {\n            let isSubscribed = true;\n\n            if (isSubscribed) {\n                if (store) {\n                    fetchBudget(store);\n                } else {\n                    setBudgetModel(undefined);\n                }\n            }\n            return () => {isSubscribed = false};\n        }\n        \n    }, [budgetId, store]);\n\n    return budgetModel;\n}","import { useState, useEffect } from 'react';\nimport { CategoriesStore } from '../domain/stores/interfaces';\nimport { useAppContext } from '../contexts/AppContext';\n\nexport function useCategoriesStore () {\n    const btApp = useAppContext();\n    const [store, setStore] = useState<CategoriesStore>();\n\n    useEffect(() => {\n        async function fetchStore () {\n            setStore(await btApp.getCategoriesStore());\n        }\n\n        let isSubscribed = true;\n        if (isSubscribed) {\n            fetchStore();\n        }\n\n        return () => { isSubscribed = false };\n        \n    }, [btApp, store]);\n\n    return store;\n}\n","\nimport * as React from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { AppButtonProps, AppButton } from './buttons';\n\nexport const DeleteButton = (props: AppButtonProps) => (\n    <AppButton icon={DeleteIcon} aria-label='Delete' {...props}/>\n);\n","\n\nimport * as React from 'react';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { ButtonFab, ButtonFabProps, AppButtonProps, AppButton } from './buttons';\n\n\nexport const SaveButtonFab: React.FC<ButtonFabProps> = (props) => (\n    <ButtonFab aria-label='Save' {...props} >\n        <SaveIcon />\n    </ButtonFab>\n);\n\nexport const SaveButton: React.FC<AppButtonProps> = (props) => (\n    <AppButton icon={SaveIcon} aria-label='Save' {...props}/>\n);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useLoc } from '../hooks/useLoc';\n\ninterface YesNoDialogProps {\n    open: boolean,\n    question: string,\n    description?: string,\n    onClose: (accept: boolean) => void\n};\n\nexport const YesNoDialog: React.FC<YesNoDialogProps> = (props) => {\n    const titleId = 'y-n-dialog-title';\n    const descriptionId = 'y-n-dialog-description';\n\n    const handleNo = () => (props.onClose(false));\n    const handleYes = () => (props.onClose(true));\n    const loc = useLoc();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleNo}\n            aria-labelledby={titleId}\n            aria-describedby={descriptionId}\n        >\n            <DialogTitle id={titleId}>{props.question}</DialogTitle>\n            {props.description && <DialogContent>\n                <DialogContentText id={descriptionId}>{props.description}</DialogContentText>\n            </DialogContent>}\n            <DialogActions>\n                <Button onClick={handleNo} color=\"primary\">{loc('Disagree')}</Button>\n                <Button onClick={handleYes} color=\"primary\" autoFocus>{loc('Agree')}</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","\nexport default function applyRate (amount: number, rate: number) {\n    return amount / rate;\n}\n","import * as React from 'react';\nimport { useIcon } from '../../hooks/useIcon';\n\ninterface CategoryIconProp {\n    name: string;\n};\n\nexport const CategoryIcon: React.FC<CategoryIconProp> = (props) => {\n\n    const {name} = props;\n    const icon = useIcon(name);\n\n    return (\n        <React.Suspense fallback={name}>\n            { icon ? <icon.Icon style={{color: icon.color}}/> : null}\n        </React.Suspense>\n    );\n}\n\nexport default CategoryIcon;\n","import { useState, useEffect } from 'react';\nimport { ColoredLazyIcon } from '../domain/stores/interfaces';\nimport { useAppContext } from '../contexts/AppContext';\n\nexport function useIcon(name: string) {\n    const [icon, setIcon] = useState<ColoredLazyIcon>();\n    const btApp = useAppContext();\n\n    useEffect(() => {\n        async function fetchIcon () {\n            const store = await btApp.getIconsStore();\n            setIcon(store.getIcon(name));\n        }\n\n        let isSubscribed = true;\n        if (isSubscribed) {\n            fetchIcon();\n        }\n        \n        return () => {isSubscribed = false};\n    }, [name, btApp]);\n\n    return icon;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import { ObjectMap } from \"../../api\";\n\nconst formatters: ObjectMap<Intl.NumberFormat> = {};\n\nfunction getNumberFormatter(currency: string) {\n    if (!(currency in formatters)) {\n        formatters[currency] = new Intl.NumberFormat(undefined, { \n            style: 'currency', \n            currency,\n        });\n    }\n    return formatters[currency];\n}\n\nexport function getCurrencyWithSymbol (amount: number, currency: string) {\n    return getNumberFormatter(currency).format(amount);\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nimport { useIsFocusVisible } from '../utils/focusVisible';\nimport { useForkRef } from '../utils/reactHelpers';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    // Remove grey highlight\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, {\n      button: classes.button\n    }[component]),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['default', 'error', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import { Budget, Expense } from \"../api\";\nimport { NestedTotal } from \"./NestedTotal\";\nimport { DateDay } from \"./DateDay\";\n\nexport class ExpenseModel implements Expense {\n\n    private _date?: DateDay;\n    readonly amount: number;\n    amountBaseCurrency: number;\n    readonly currency: string;\n    readonly categoryId: string;\n    readonly countryCode: string;\n    readonly description?: string;\n    readonly identifier: string;\n    readonly when: number;\n    readonly budgetId: string;\n    readonly splitInDays: number;\n\n    constructor (info: Expense) {\n        this.identifier = info.identifier;\n        this.amountBaseCurrency = info.amountBaseCurrency;\n        this.amount = info.amount;\n        this.currency = info.currency;\n        this.categoryId = info.categoryId;\n        this.countryCode = info.countryCode;\n        this.description = info.description;\n        this.when = info.when;\n        this.budgetId = info.budgetId;\n        this.splitInDays = info.splitInDays > 0 ? info.splitInDays : 1;\n        this.validate();\n    }\n\n    get info (): Expense {\n        const { amount, amountBaseCurrency, categoryId, countryCode, currency, description, identifier, when, budgetId, splitInDays} = this;\n        return { amount, amountBaseCurrency, categoryId, description, identifier, when, countryCode, currency, budgetId, splitInDays};\n    }\n\n    get json (): string {\n        return JSON.stringify(this.info);\n    }\n\n    get date () {\n        if (!this._date) {\n            this._date = DateDay.fromTimeMs(this.when);\n        }\n        return this._date;\n    }\n\n    get day () {\n        return this.date.day;\n    }\n\n    get month () {\n        return this.date.month;\n    }\n\n    get year () {\n        return this.date.year;\n    }\n\n    get dateParts (): number[] {\n        return [this.year, this.month, this.day];\n    }\n\n    static sum(expenses: Iterable<Expense>){\n        return Object.values(expenses)\n            .map(e => e.amountBaseCurrency)\n            .reduce((a, b) => a + b);\n    }\n\n    inBudgetDates (budget: Budget) {\n        return this.when <= budget.to && this.when >= budget.from;\n    }\n\n    inDates (fromMs: number, toMs: number) {\n        return this.when <= toMs && this.when >= fromMs;\n    }\n\n    addToTotals(totals: NestedTotal) {\n        for (const em of this.split()) {\n            totals.add(em.amountBaseCurrency, em.dateParts);\n        }\n    }\n\n    subtractTotal(totals: NestedTotal) {\n        for (const em of this.split()) {\n            totals.subtract(em.amountBaseCurrency, em.dateParts);\n        }\n    }\n\n    validate () {\n        const fieldErrors = [];\n        if (this.budgetId === undefined) {\n            fieldErrors.push('budget identifier');\n        }\n        if (this.amountBaseCurrency === undefined) {\n            fieldErrors.push('amount in base currency');\n        }\n        if (this.countryCode.length !== 2) {\n            fieldErrors.push('country code');\n        }\n        if (this.currency.length !== 3) {\n            fieldErrors.push('currency code');\n        }\n        if (fieldErrors.length > 0) {\n            throw Error(`Invalid expense (${this.identifier}) fields: ${fieldErrors.join(', ')}`);\n        }\n    }\n\n    /** \n     * @returns List of split expenses, first element will be current split expense\n     */\n    split(): ExpenseModel[] {\n        if (this.splitInDays < 1) {\n            throw Error('You cannot split an expense in less than one piece');\n        } else if (this.splitInDays === 1) {\n            return [this];\n        } else {\n            const amountBaseCurrency =  this.amountBaseCurrency / this.splitInDays;\n            const amount = this.amount / this.splitInDays;\n            const expenses = [new ExpenseModel({...this, amount, amountBaseCurrency})];\n            for (let i=1; i<this.splitInDays; i++) {\n                expenses.push(new ExpenseModel({\n                    ...this,\n                    amount, \n                    amountBaseCurrency,\n                    when: DateDay.fromTimeMs(this.when).addDays(i).timeMs,\n                }));\n            }\n            return expenses;\n        }\n    }\n}\n","import { useState, useEffect } from 'react';\nimport { CurrenciesStore } from '../domain/stores/interfaces';\nimport { useAppContext } from '../contexts/AppContext';\n\nexport function useCurrenciesStore() {\n    const btApp = useAppContext();\n    const [store, setStore] = useState<CurrenciesStore>();\n\n    useEffect(() => {\n        async function fetchStore () {\n            setStore(await btApp.getCurrenciesStore());\n        }\n\n        let isSubscribed = true;\n        if (isSubscribed) {\n            fetchStore();\n        }\n\n        return () => { isSubscribed = false };\n        \n    }, [btApp]);\n\n    return store;\n}","import * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CategoryIcon from './CategoryIcon';\n\ninterface CategoryIconButtonProp {\n    name: string;\n    onClick: (name: string) => void;\n};\n\nexport const CategoryIconButton: React.FC<CategoryIconButtonProp> = (props) => {\n\n    const {name} = props;\n\n    return (\n        <Button onClick={() => props.onClick(name)} variant='outlined'>\n            <CategoryIcon name={name}/>\n        </Button>\n    );\n}\n\nexport default CategoryIconButton;\n","import * as React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport { CategoryIconButton } from '../../components/categories/CategoryIconButton';\nimport { useIconNames } from '../../hooks/useIconNames';\n\ninterface CategoryIconDialogSelectorProps {\n    selectedValue: string;\n    open: boolean;\n    onClose: (selectedValue: string) => void;\n};\n\nconst titleId = 'dialog-title';\n\nexport const CategoryIconDialogSelector: React.FC<CategoryIconDialogSelectorProps> = (props) => {\n\n    function handleClose() {\n        props.onClose(props.selectedValue);\n    }\n\n    function handleItemClick(value: string) {\n        props.onClose(value);\n    }\n\n    const iconNames = useIconNames();\n\n    return (\n        <Dialog\n            onClose={handleClose}\n            aria-labelledby={titleId} open={props.open}>\n            <DialogTitle id={titleId}>Select icon for category</DialogTitle>\n            <DialogContent>\n                <Grid container direction='row' justify='center'>\n                    {iconNames && iconNames.map(name =>\n                        <CategoryIconButton\n                            onClick={handleItemClick}\n                            name={name}\n                            key={`icon-${name}`} />)}\n                </Grid>\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nexport default CategoryIconDialogSelector;\n","import { useState, useEffect } from 'react';\nimport { useAppContext } from '../contexts/AppContext';\n\nexport function useIconNames() {\n    const [iconNames, setIconNames] = useState<string[]>();\n    const btApp = useAppContext();\n    \n    useEffect(() => {\n        async function fetchIconNames () {\n            const store = await btApp.getIconsStore();\n            setIconNames(store.iconNames);\n        }\n\n        let isSubscribed = true;\n        if (isSubscribed) {\n            fetchIconNames();\n        }\n        \n        return () => {isSubscribed = false};\n\n    }, [btApp]);\n\n    return iconNames;\n}","import * as React from 'react';\n\nimport Grid, { GridDirection } from '@material-ui/core/Grid';\nimport { TextInput } from '../TextInput';\nimport CategoryIconButton from './CategoryIconButton';\nimport CategoryIconDialogSelector from '../../views/categories/CategoryIconSelector';\nimport { Category } from '../../api';\nimport { DeleteButton } from '../buttons/DeleteButton';\nimport { YesNoDialog } from '../YesNoDialog';\nimport { useLoc } from '../../hooks/useLoc';\n\ninterface CategoryInputProps {\n    direction?: GridDirection;\n    onDelete?: (id: string) => void;\n    onChange: (category: Category) => void;\n    category: Category;\n}\n\nexport const CategoryInput: React.FC<CategoryInputProps> = (props) => {\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [showDeleteDialog, setShowDeleteDialog] = React.useState(false);\n    const [category, setCategory] = React.useState<Category>(props.category);\n    const loc = useLoc();\n    \n    const handleChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n        event.preventDefault();\n        const name = event.target.value;\n        const cat = { ...category, name };\n        setCategory(cat);\n        props.onChange(cat);\n    }\n\n    const handleClickChangeIcon = () => {\n        setDialogOpen(true);\n    }\n\n    const handleCloseDialog = (selectedIcon: string) => {\n        if (category.icon !== selectedIcon) {\n            const cat = {...category, icon: selectedIcon };\n            setCategory(cat);\n            props.onChange(cat);\n        }\n        setDialogOpen(false);        \n    }\n\n    function handleConfirmDelete (confirmed: boolean) {\n        setShowDeleteDialog(false);\n        if (props.onDelete && confirmed) {\n            props.onDelete(props.category.identifier);    \n        }\n    }\n\n    function handleShowDeleteDialog () {\n        setShowDeleteDialog(true);\n    }\n\n    return (\n        <React.Fragment>\n            <Grid container direction={props.direction || 'row'} wrap='nowrap'>\n                <Grid item>\n                    <TextInput \n                        label={ props.direction === 'row' ? '' : loc('Name') }\n                        value={ category.name }\n                        onChange={ handleChangeName }/>\n                </Grid>\n                <Grid item>\n                    <CategoryIconButton \n                        name={ category.icon } \n                        onClick={ handleClickChangeIcon } />\n                </Grid>\n                { props.onDelete && <Grid item><DeleteButton onClick={handleShowDeleteDialog}/></Grid> }\n            </Grid>\n            <CategoryIconDialogSelector \n                onClose={handleCloseDialog} \n                open={dialogOpen} \n                selectedValue={category.icon}/>\n            <YesNoDialog \n                open={showDeleteDialog} \n                onClose={handleConfirmDelete}\n                question={`Do your really want to delete \"${props.category.name}\" category?`}\n                description='The expenses assigned to this category will be assigned to default.'/>\n        </React.Fragment>\n    );\n\n\n}\n\nexport default CategoryInput;","import * as React from \"react\";\nimport { TextInput } from \"./TextInput\";\n\ninterface AmountInputProps {\n    label: string;\n    amountInput?: number;\n    onAmountChange: (amount: number) => void;\n    helperText?: string;\n    disabled?: boolean;\n}\n\nexport const AmountInput: React.FC<AmountInputProps> = (props) => {\n\n    const handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const amountFloat = parseFloat(event.target.value);\n        props.onAmountChange(amountFloat);\n    }\n\n    return (\n        <TextInput\n            autoFocus\n            required\n            type='number'\n            label={props.label}\n            value={props.amountInput || ''}\n            inputProps={{ step: '.01', 'aria-required': true }}\n            onChange={handleAmountChange}\n            helperText={props.helperText}\n            disabled={props.disabled}\n        />\n    );\n}\n\n","import React from 'react';\nimport { TextInput } from './TextInput';\nimport { useCurrenciesStore } from '../hooks/useCurrenciesStore';\nimport { useLoc } from '../hooks/useLoc';\n\nexport interface CurrencyInputProps  {\n    onCurrencyChange: (selected: string) => void;\n    selectedCurrency?: string;\n    disabled?: boolean;\n}\n\nexport const CurrencyInput: React.FC<CurrencyInputProps> = (props) => {\n\n    const {onCurrencyChange} = props;\n    const store = useCurrenciesStore();\n    const loc = useLoc();\n\n    const options = React.useMemo(() => {\n        function createOption (k: string, v: string) {\n            return <option key={`currency-option-${k}`} value={k}>{v}</option>;\n        }\n\n        const opts: React.ReactElement[] = [];\n        if (store) {\n            const {currencies, lastCurrenciesUsed} = store;\n            const currenciesMix = new Set([...lastCurrenciesUsed, ...currencies.keys()]);\n            for (const code of currenciesMix) {\n                const name = currencies.get(code);\n                name && opts.push(createOption(code, name));\n            }\n        } else {\n            opts.push(createOption('loading', 'Loading'));\n        }\n        return opts;\n    }, [store]);\n\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const selectedValue = event.target.value;\n        if (onCurrencyChange && selectedValue) {\n            onCurrencyChange(selectedValue);\n        }\n    }\n\n    return (\n        <TextInput\n            label={loc('Currency')}\n            select\n            SelectProps={{ native: true }}\n            onChange={handleChange}\n            value={props.selectedCurrency}\n            required\n            disabled={props.disabled}\n        >\n            { options }\n        </TextInput>\n    );\n}\n","import * as React from 'react';\nimport { Category } from '../../api';\nimport CategoryInput from './CategoryInput';\nimport { SaveButtonFab } from '../buttons/SaveButton';\nimport { uuid } from '../../domain/utils/uuid';\n\ninterface CategoryFormProps {\n    onSubmit: (category: Category) => void,\n    category?: Category;\n}\n\nexport const CategoryForm: React.FC<CategoryFormProps> = (props) => {\n\n    const [category, setCategory] = React.useState<Category>(\n        props.category ||\n        {name: '', icon: 'Label', identifier: uuid()});\n    \n    const handleSave = (e: React.SyntheticEvent) => {\n        e.stopPropagation();\n        e.preventDefault();\n        props.onSubmit(category);\n    }\n    \n    return (\n        <form onSubmit={handleSave}>\n            <CategoryInput category={category} onChange={setCategory} />\n            <SaveButtonFab type='submit' color='primary' disabled={category.name === ''} />\n        </form>);\n}\n","import { useState, useEffect } from 'react';\nimport { CountriesStore } from '../domain/stores/interfaces';\nimport { useAppContext } from '../contexts/AppContext';\n\nexport function useCountriesStore() {\n    const btApp = useAppContext();\n    const [store, setStore] = useState<CountriesStore>();\n\n    useEffect(() => {\n        async function fetchStore () {\n            setStore(await btApp.getCountriesStore());\n        }\n\n        let isSubscribed = true;\n        if (isSubscribed) {\n            fetchStore();\n        }\n\n        return () => { isSubscribed = false };\n        \n    }, [btApp, store]);\n\n    return store;\n}","import * as React from 'react';\nimport { TextInput } from './TextInput';\nimport { CountryEntry } from '../api';\nimport { useCountriesStore } from '../hooks/useCountriesStore';\nimport { useLoc } from '../hooks/useLoc';\n\ninterface CountryInputProps {\n    onCountryChange: (countryCode: string) => void;\n    selectedCountry: string;\n}\n\nexport const CountryInput: React.FC<CountryInputProps> = (props) => {\n    const loc = useLoc();\n    const [countries, setCountries] = React.useState<CountryEntry[]>([{name: loc('Countries'), code: props.selectedCountry}]);\n    const countriesStore = useCountriesStore();\n\n    React.useEffect(() => {\n        countriesStore && setCountries(countriesStore.countries);\n    }, [countriesStore]);\n\n    function handleCountryChange(e: React.ChangeEvent<HTMLInputElement>) {\n        props.onCountryChange(e.target.value);\n    }\n\n    return (<TextInput\n        label={loc('Country')}\n        onChange={handleCountryChange}\n        value={props.selectedCountry}\n        select\n        required \n        SelectProps={{ native: true }} >\n        {\n            countries\n                .map(c => (\n                    <option \n                        key={`country-option-${c.code}`} \n                        value={c.code}>\n                        {c.name}\n                    </option>))}\n    </TextInput>);\n}\n\nexport default CountryInput;\n","import * as React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { CurrencyInput } from \"./CurrencyInput\";\nimport { AmountInput } from \"./AmountInput\";\nimport applyRate from \"../domain/utils/applyRate\";\nimport { getCurrencyWithSymbol } from \"../domain/utils/getCurrencyWithSymbol\";\nimport { useLoc } from \"../hooks/useLoc\";\nimport { useRate } from \"../hooks/useRate\";\n\ninterface AmountCurrencyInputProps  {\n    selectedCurrency: string;\n    baseCurrency: string;\n    amountInBaseCurrency?: number;\n    onChange: (amount: number, currency: string, amountBase: number) => void;\n    amountInput?: number;\n    label: string;\n    disabled?: boolean;\n    onError?: (error?: string) => void;\n}\n\nexport const AmountWithCurrencyInput: React.FC<AmountCurrencyInputProps> = (props) => {\n\n    const loc  = useLoc();\n    const [error, setError] = React.useState<string|undefined>(); \n    const {baseCurrency, selectedCurrency} = props;\n    \n    const {onChange, onError} = props;\n    const rate = useRate(baseCurrency, selectedCurrency);\n\n    function handleChange(amount: number, currency: string) {\n        if (baseCurrency && currency && amount) {\n            if (baseCurrency === currency) {\n                onChange(amount, currency, amount);\n            } else {\n                try {\n                    onChange(amount, currency, calculateAmountInBaseCurrency(amount));\n                    setError(undefined);\n                } catch (error) {\n                    setError(error);\n                }\n            }\n        } else {\n            onChange(amount, currency, amount);\n        }\n    }\n\n    function calculateAmountInBaseCurrency(inputAmount: number) {\n        if (rate) {\n            return applyRate(inputAmount, rate);\n        } else {\n            throw new Error(loc('Error fetching currencies'));\n        }\n    }\n\n    React.useEffect(() => (onError && onError(error)), [error, onError]);\n\n    const baseAmountString = () => {\n        if (baseCurrency !== props.selectedCurrency && props.amountInBaseCurrency) {\n            return getCurrencyWithSymbol(props.amountInBaseCurrency, baseCurrency);\n        }\n        return undefined;\n    }\n\n    function handleCurrencyChange (currency: string) {\n        if (props.amountInput !== undefined) {\n            handleChange(props.amountInput, currency);\n        }\n    }\n\n    function handleAmountChange (amount: number) {\n        if (props.selectedCurrency) {\n            handleChange(amount, props.selectedCurrency);\n        }\n    }\n    \n    return (\n        <Grid container direction='row' alignItems='baseline'>\n            <Grid item>\n                <AmountInput\n                    amountInput={props.amountInput}\n                    label={props.label}\n                    onAmountChange={handleAmountChange}\n                    helperText={baseAmountString()} \n                    disabled={props.disabled}/>\n            </Grid>\n            <Grid item >\n                <CurrencyInput \n                    selectedCurrency={props.selectedCurrency}\n                    onCurrencyChange={handleCurrencyChange} \n                    disabled={props.disabled}/>\n            </Grid>\n            { error !== undefined && \n            <Card>\n                <CardContent>\n                    {loc('Error converting to base')}.\n                    {loc('Connect to get last rates')}.\n                    {loc('Still add amount in base')}.\n                </CardContent>\n            </Card> }\n        </Grid>);\n}\n\nexport default AmountWithCurrencyInput;\n","import { useState, useEffect } from 'react';\nimport { useCurrenciesStore } from './useCurrenciesStore';\nimport { CurrenciesStore } from '../domain/stores/interfaces';\n\nexport function useRate(baseCurrency: string, toCurrency: string) {\n    const [rate, setRate] = useState<number>();\n    const store = useCurrenciesStore();\n\n    useEffect(() => {\n        async function fetch (store: CurrenciesStore) {\n            const rate = await store.getRate(baseCurrency, toCurrency);\n            setRate(rate);\n        }\n\n        function setLocalRate (store: CurrenciesStore) {\n            const localRates = store.getLocalRates(baseCurrency);\n            if (localRates && toCurrency in localRates) {\n                setRate(localRates.rates[toCurrency]);\n            }\n        }\n\n        let isSubscribed = true;\n        if (isSubscribed && store) {\n            setLocalRate(store);\n            fetch(store);\n        }\n        return () => {isSubscribed = false};\n    }, [baseCurrency, toCurrency, store]);\n\n    return rate;\n}\n","import * as React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { CategoryForm } from './CategoryForm';\nimport { Category } from '../../api';\nimport { useLoc } from '../../hooks/useLoc';\n\ninterface CategoryFormDialogProps {\n    open: boolean;\n    onClose: (category?: Category) => void;\n}\n\nexport const CategoryFormDialog: React.FC<CategoryFormDialogProps> = (props) => {\n    const titleId = 'category-dialog-title';\n    const loc = useLoc();\n\n    const handleClose = () => ( props.onClose() );\n\n    return (\n        <Dialog \n            aria-labelledby={titleId} \n            open={props.open}\n            onClose={handleClose}>\n            <DialogTitle id={titleId}>\n                {loc('Add category')}\n            </DialogTitle>\n            <DialogContent style={{marginBottom: '1rem'}}>\n                <CategoryForm onSubmit={props.onClose} />\n            </DialogContent>\n        </Dialog>\n    );\n}\n","import * as React from 'react';\nimport { TextInput } from '../TextInput';\nimport MuiLink from '@material-ui/core/Link';\nimport { CategoriesMap, Category } from '../../api';\nimport { CategoryFormDialog } from './CategoryFormDialog';\nimport { useAppContext } from '../../contexts/AppContext';\nimport { useLoc } from '../../hooks/useLoc';\nimport { useCategoriesStore } from '../../hooks/useCategoriesStore';\n\ninterface CategoriesSelectProps {\n    onCategoryChange: (categoryId: string) => void;\n    selectedCategory: string;\n}\n\nconst CategoryOptions: React.FC<{categories: CategoriesMap}> = (props) => {\n\n    return <React.Fragment>\n        { Object.entries(props.categories).map(\n            ([k, v]) => (\n                <option \n                    key={`category-option-${k}`} \n                    value={v.identifier}>\n                    {v.name}\n                </option>))}\n    </React.Fragment>;   \n}\n\nexport const CategoriesSelect: React.FC<CategoriesSelectProps> = (props) => {\n\n    const {selectedCategory, onCategoryChange} = props;\n    const btApp = useAppContext();\n    const loc = useLoc();\n    const [categories, setCategories] = React.useState<CategoriesMap>(\n        {[selectedCategory]: {\n            identifier: selectedCategory, \n            name: '...', icon: ''}});\n    const [addCategoryOpen, setAddCategoryOpen] = React.useState(false);\n\n    const store = useCategoriesStore();\n\n    React.useEffect(() => {\n        async function initCategories () {\n            if (store) {\n                const cs = await store.getCategories();\n                if (!(selectedCategory in cs)) {\n                    onCategoryChange(Object.keys(cs)[0]);\n                }\n                setCategories(cs);   \n            }\n        }\n        initCategories();\n    // eslint-disable-next-line\n    }, [store]);\n\n    const handleAddCategoryClick = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n        setAddCategoryOpen(true);\n    }\n\n    const handleAddCategoryClose = async (category?: Category) => {\n        setAddCategoryOpen(false);\n        if (category) {\n            const store = await btApp.getCategoriesStore();\n            await store.setCategories([category]);\n            setCategories({...categories, category});\n            onCategoryChange(category.identifier);\n        }\n    }\n    \n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        onCategoryChange(e.target.value);\n    }\n\n    return (\n        <React.Fragment>\n            <TextInput\n                label={loc('Category')}\n                onChange={handleChange}\n                value={selectedCategory}\n                helperText={\n                    <MuiLink onClick={handleAddCategoryClick}>\n                        {loc('Add category')}\n                    </MuiLink>}\n                select required \n                SelectProps={{ native: true }} >\n                <CategoryOptions categories={categories}/>\n            </TextInput>\n            <CategoryFormDialog\n                open={addCategoryOpen} \n                onClose={handleAddCategoryClose} />\n        </React.Fragment>\n    );\n}\n\nexport default CategoriesSelect;\n","import * as React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { getISODateString } from \"../../domain/date\";\nimport { TextInput } from \"../../components/TextInput\";\nimport CountryInput from \"../../components/CountryInput\";\nimport AmountWithCurrencyInput from \"../../components/AmountWithCurrencyInput\";\nimport { Expense } from \"../../api\";\nimport CategoriesSelect from \"../../components/categories/CategoriesSelect\";\nimport { SaveButtonFab } from \"../../components/buttons/SaveButton\";\nimport { ExpenseModel } from \"../../domain/ExpenseModel\";\nimport { useAppContext } from \"../../contexts/AppContext\";\nimport { getCurrencyWithSymbol } from \"../../domain/utils/getCurrencyWithSymbol\";\nimport { useLoc } from \"../../hooks/useLoc\";\n\ninterface ExpenseFormProps extends Expense {\n    baseCurrency: string;\n    onSubmit: (expense: Expense) => void;\n}\n\nexport const ExpenseForm: React.FC<ExpenseFormProps> = (props) => {\n\n    const [error, setError] = React.useState<string|undefined>();\n\n    const [currency, setCurrency] = React.useState<string>(props.currency);\n    const [amount, setAmount] = React.useState<number>(props.amount);\n    const [countryCode, setCountryCode] = React.useState<string>(props.countryCode);\n    const [dateString, setDateString] = React.useState(getISODateString(new Date(props.when)));\n    const [categoryId, setCategoryId] = React.useState(props.categoryId);\n    const [amountBaseCurrency, setAmountBaseCurrency] = React.useState(props.amountBaseCurrency);\n    const [description, setDescription] = React.useState(props.description);\n    const [splitInDays, setSplitInDays] = React.useState<number|undefined>(props.splitInDays);\n\n    const [modified, setModified] = React.useState(false);\n    const btApp = useAppContext();\n    const loc = useLoc();\n\n    // For now only currency and country code might be updated from parent component\n    React.useEffect(() => {\n        setCurrency(props.currency);\n        setCountryCode(props.countryCode);\n    }, [props.currency, props.countryCode]);\n\n    const handleSubmit = async (e: React.SyntheticEvent) => {\n        e.preventDefault();\n        const max = splitInDays || 1;\n        const date = new Date(dateString);\n        const expenseModel = new ExpenseModel({\n            identifier: props.identifier, \n            amount,\n            amountBaseCurrency, \n            currency,\n            countryCode,\n            categoryId,\n            description,\n            when: date.getTime(),\n            budgetId: props.budgetId,\n            splitInDays: max\n        });\n        const store = await btApp.getBudgetsStore();\n        await store.setExpenses(props.budgetId, [expenseModel]);\n        (await btApp.getCurrenciesStore()).setLastCurrencyUsed(expenseModel.currency);\n        props.onSubmit(expenseModel);\n    }\n    \n    function handleWhen (e: React.ChangeEvent<HTMLInputElement>) {\n        setDateString(e.target.value);\n        setModified(true);\n    }\n\n    const WhenInput = () => (\n        <TextInput\n            required\n            label={loc('When')}\n            type='date'\n            value={ dateString }\n            InputLabelProps={ {shrink: true,} }\n            onChange={ handleWhen }\n        />\n    );\n\n    function handleDescription (e: React.ChangeEvent<HTMLInputElement>) {\n        e.preventDefault();\n        setDescription(e.target.value);\n        setModified(true);\n    }\n\n    function handleCountry (countryCode: string) {\n        setCountryCode(countryCode);\n        setModified(true);\n    }\n\n    function handleCategoryChanged (categoryId: string) {\n        setCategoryId(categoryId);\n        setModified(true);\n    }\n\n    function handleAmountChange(amountI: number, currencyI: string, amountBaseCurrencyI?:number) {\n        setCurrency(currencyI);\n        setAmount(amountI);\n        setAmountBaseCurrency(amountBaseCurrencyI || 0);\n        setModified(true);\n    }\n\n    function handleSplitInDays (e: React.ChangeEvent<HTMLInputElement>) {\n        const days = parseInt(e.target.value);\n        setSplitInDays(days || undefined);\n        setModified(true);\n    }\n\n    function amountPerDay () {\n        if (amountBaseCurrency && splitInDays && splitInDays > 1) {\n            return `${getCurrencyWithSymbol(amountBaseCurrency / splitInDays, props.baseCurrency)} ${loc('per day')}`;\n        }\n        return undefined;\n    }\n\n    return (            \n        <form onSubmit={handleSubmit} autoComplete='on'>\n            <Grid container\n                justify='space-between'\n                alignItems='baseline'\n                alignContent='stretch'>\n                <Grid item >\n                    { currency && <AmountWithCurrencyInput\n                        label={loc('Amount')}\n                        baseCurrency={ props.baseCurrency }\n                        amountInput={amount}\n                        amountInBaseCurrency={amountBaseCurrency}\n                        selectedCurrency={currency}\n                        onChange={handleAmountChange}\n                        onError={setError}\n                    /> }\n                </Grid>\n                <Grid item >\n                    <CategoriesSelect onCategoryChange={handleCategoryChanged} selectedCategory={categoryId}/>\n                </Grid>\n                <Grid item>\n                    <WhenInput />\n                </Grid>\n                <Grid item>\n                    { countryCode && <CountryInput \n                        selectedCountry={ countryCode } \n                        onCountryChange={ handleCountry }/>\n                    }\n                </Grid>\n                <Grid item >\n                    <TextInput \n                        label={loc('Description')} \n                        value={ description || '' }\n                        onChange={ handleDescription } />\n                </Grid>\n                <Grid item>\n                    <TextInput \n                        type='number'\n                        label={loc('Split in days')}\n                        value={ splitInDays || '' }\n                        helperText={ amountPerDay() }\n                        onChange={ handleSplitInDays }\n                        inputProps={ { min: 1 } }\n                        disabled={ !amountBaseCurrency }\n                    />\n                </Grid>\n            </Grid>\n            <SaveButtonFab type='submit' color='primary' disabled={error !== undefined || !modified}/>\n        </form>\n        );\n}\n"],"sourceRoot":""}